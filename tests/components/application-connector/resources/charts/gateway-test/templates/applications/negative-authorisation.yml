apiVersion: applicationconnector.kyma-project.io/v1alpha1
kind: Application
metadata:
  name: negative-authorisation
  namespace: {{ .Values.namespace }}
spec:
  description: Negative authorisation
  skipVerify: true
  labels:
    app: negative-authorisation
  services:
    - displayName: bad oauth token
      name: bad-oauth-token
      providerDisplayName: OAuth
      description: Should return 401 for OAuth with a wrong token
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/bad-oauth-token"
          credentials:
            secretName: oauth-test-negative-case
            authenticationUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/bad-token"
            type: OAuth
    - displayName: wrong oauth secret
      name: wrong-oauth-secret
      providerDisplayName: OAuth
      description: Should return 502 for OAuth with a wrong secret
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/wrong-oauth-secret"
          credentials:
            secretName: wrong-oauth-test
            authenticationUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/token"
            type: OAuth
    - displayName: mtls-oauth-other-ca
      name: mtls-oauth-other-ca
      providerDisplayName: mTLS-OAuth
      description: Should return 500 for mTLS Oauth with client certificate generated from other CA
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/mtls-oauth-other-ca"
          credentials:
            secretName: mtls-oauth-negative-other-ca
            authenticationUrl: "https://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtls-oauth/token"
            type: OAuthWithCert
    - displayName: mtls-oauth-incorrect-clientid
      name: mtls-oauth-incorrect-clientid
      providerDisplayName: mTLS-OAuth
      description: Should return 500 for mTLS Oauth with valid certificate but invalid client id
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/mtls-oauth-incorrect-clientid"
          credentials:
            secretName: mtls-oauth-negative-incorrect-clientid
            authenticationUrl: "https://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtls-oauth/token"
            type: OAuthWithCert
    - displayName: mtls-negative-other-ca
      name: mtls-negative-other-ca
      providerDisplayName: mTLS
      description: Should return 502 for mTLS with client certificate generated from other CA
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "https://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtls/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/mtls-negative-other-ca"
          credentials:
            secretName: mtls-negative-other-ca
            type: CertificateGen
    - displayName: bad csrf token basic
      name: bad-csrf-token-basic
      providerDisplayName: Basic with CSRF
      description: Should return 403 for Basic Auth with a bad CSRF token
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/bad-csrf-token-basic"
          credentials:
            secretName: basic-test-negative-case
            type: Basic
            csrfInfo:
              tokenEndpointURL: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/bad-token"
    - displayName: bad csrf endpoint basic
      name: bad-csrf-endpoint-basic
      providerDisplayName: Basic with CSRF
      description: Should return 502 for Basic Auth with a bad CSRF token endpoint
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/bad-csrf-endpoint-basic"
          credentials:
            secretName: basic-test-negative-case
            type: Basic
            csrfInfo:
              tokenEndpointURL: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/nonexistingpath"
    - displayName: basic-auth-with-wrong-request-parameters
      name: basic-auth-with-wrong-request-parameters
      providerDisplayName: Basic
      description: Should return 400 when calling endpoint protected with Basic Auth with wrong additional request parameters
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://{{ .Values.mockServiceName }}.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/request-parameters-basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/negative-authorisation/basic-auth-with-wrong-request-parameters"
          requestParametersSecretName: wrong-request-parameters-test
          credentials:
            secretName: basic-test
            type: Basic
---
apiVersion: v1
kind: Secret
metadata:
  name: basic-test-negative-case
  namespace: kyma-integration
type: Opaque
data:
  password: {{ "passwd" | b64enc }}
  username: {{ "user" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: oauth-test-negative-case
  namespace: kyma-integration
type: Opaque
data:
  clientId: {{ "clientID" | b64enc }}
  clientSecret: {{ "clientSecret" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: wrong-oauth-test
  namespace: kyma-integration
type: Opaque
data:
  clientId: {{ "bad id" | b64enc }}
  clientSecret: {{ "bad secret" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: wrong-request-parameters-test
  namespace: kyma-integration
type: Opaque
stringData:
  headers: |-
    {"Hkey1":["Wrong-value"],"Wrong-key":["Hval22"]}
  queryParameters: |-
    {"Wrong-key":["Qval1"],"Qkey2":["Qval21","Qval22","Additional-value"]}
