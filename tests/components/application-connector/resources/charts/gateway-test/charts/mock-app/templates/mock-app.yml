apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.global.mockServiceName}}
  name: {{ .Values.global.mockServiceName}}
  namespace: {{.Values.global.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.global.mockServiceName}}
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/includeInboundPorts: "*"
        traffic.sidecar.istio.io/excludeInboundPorts: "8090,8091"
      labels:
        app: {{ .Values.global.mockServiceName}}
    spec:
      containers:
        - image: {{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.mockApplication) }}
          name: {{ .Values.global.mockServiceName}}
          ports:
            - containerPort: 8080
            - containerPort: 8090
            - containerPort: 8091
          imagePullPolicy: Always
          volumeMounts:
            - name: certs-secret-volume
              mountPath: /etc/secret-volume
            - name: expired-certs-secret-volume
              mountPath: /etc/expired-server-cert-volume
          livenessProbe:
            httpGet:
              path: /v1/health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
      volumes:
        - name: certs-secret-volume
          secret:
            secretName: mtls-cert-secret
        - name: expired-certs-secret-volume
          secret:
            secretName: expired-mtls-cert-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.mockServiceName}}
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: {{ .Values.global.mockServiceName}}
  ports:
    - name: "http"
      protocol: TCP
      port: 8080
    - name: "https"
      protocol: TCP
      port: 8090
    - name: "httpsexp"
      protocol: TCP
      port: 8091