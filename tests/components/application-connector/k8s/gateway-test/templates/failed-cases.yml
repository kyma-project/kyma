apiVersion: applicationconnector.kyma-project.io/v1alpha1
kind: Application
metadata:
  name: failed-auth-cases
  namespace: "{{ .Values.namespace }}"
spec:
  description: |
    Test cases with bad auth data
  skipVerify: true
  services:
    - displayName: basic
      name: basic
      providerDisplayName: Rafał
      description: Should return 403
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/basic"
          credentials:
            secretName: basic-bad
            type: Basic
    - displayName: oauth-mtls
      name: oauth-mtls
      providerDisplayName: Rafał
      description: Should return 502
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtlsoauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/oauth-mtls"
          credentials:
            secretName: mtls-oauth-bad
            authenticationUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtlsoauth/token"
            type: OAuthWithCert
    - displayName: oauth
      name: oauth
      providerDisplayName: Rafał
      description: Should return 502
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/oauth"
          credentials:
            secretName: oauth-bad
            authenticationUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/token"
            type: OAuth
    - displayName: bad csrf token basic
      name: bad-csrf-token-basic
      providerDisplayName: Rafał
      description: Basic Auth with a bad CSRF token should return 403
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-token-basic"
          credentials:
            secretName: basic-test
            type: Basic
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/bad-token"
    - displayName: bad csrf endpoint basic
      name: bad-csrf-endpoint-basic
      providerDisplayName: Rafał
      description: Basic Auth with a bad CSRF token endpoint should return 502
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://failed-auth-cases.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-basic/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-endpoint-basic"
          credentials:
            secretName: basic-test
            type: Basic
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/nonexistingpath"
    - displayName: bad csrf token oauth
      name: bad-csrf-token-oauth
      providerDisplayName: Rafał
      description: OAuth with a bad CSRF token should return 403
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-token-oauth"
          credentials:
            secretName: oauth-test
            authenticationUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/token"
            type: OAuth
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/bad-token"
    - displayName: bad csrf endpoint oauth
      name: bad-csrf-endpoint-oauth
      providerDisplayName: Rafał
      description: OAuth with a bad CSRF token endpoint should return 502
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf-oauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-endpoint-oauth"
          credentials:
            secretName: oauth-test
            authenticationUrl: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/oauth/token"
            type: OAuth
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/nonexistingpath"
    - displayName: bad csrf token mtls oauth
      name: bad-csrf-token-mtls-oauth
      providerDisplayName: Rafał
      description: mTLS OAuth with a bad CSRF token should return 403
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/csrf-mtlsoauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-token-mtls-oauth"
          credentials:
            secretName: mtls-oauth-test
            authenticationUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtlsoauth/token"
            type: OAuthWithCert
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/bad-token"
    - displayName: bad csrf endpoint mtls oauth
      name: bad-csrf-endpoint-mtls-oauth
      providerDisplayName: Rafał
      description: mTLS OAuth with a bad CSRF token endpoint should return 502
      id: "{{ uuidv4 }}"
      entries:
        - type: API
          targetUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/csrf-mtlsoauth/ok"
          centralGatewayUrl: "http://central-application-gateway.kyma-system:8080/failed-auth-cases/bad-csrf-endpoint-mtls-oauth"
          credentials:
            secretName: mtls-oauth-test
            authenticationUrl: "https://test-app.{{ .Values.namespace  }}.svc.cluster.local:8090/v1/api/mtlsoauth/token"
            type: OAuthWithCert
            csrfInfo:
              tokenEndpointURL: "http://test-app.{{ .Values.namespace  }}.svc.cluster.local:8080/v1/api/csrf/nonexistingpath"
---
apiVersion: v1
kind: Secret
metadata:
  name: basic-bad
  namespace: kyma-integration
type: Opaque
data:
  password: {{ "bad passwd" | b64enc }}
  username: {{ "bad user" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mtls-oauth-bad
  namespace: kyma-integration
data:
  clientId: {{ "clientID" | b64enc }}
  key: {{ .Files.Get "certs/invalid.key" | b64enc }}
  crt: {{ .Files.Get "certs/invalid.crt" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: oauth-bad
  namespace: kyma-integration
data:
  clientId: {{ "clientID" | b64enc }}
  clientSecret: {{ "bad secret" | b64enc }}
