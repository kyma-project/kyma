# -*- mode: Makefile -*-

NAMESPACE ?= test
GOPATH ?= $(shell go env GOPATH)

VALIDATOR_TEST_IMAGE = "$(DOCKER_PUSH_REPOSITORY)$(DOCKER_PUSH_DIRECTORY)/connectivity-validator-test:$(DOCKER_TAG)"
TEST_TIMEOUT = "3m"
MAKEFILE_NAME=Makefile.test-application-conn-validator

.PHONY: test clean
.PHONY: patch-for-validator-test unpatch-after-validator-test test-validator test-validator-debug validator-create-resources clean-validator-test publish-validator-test

test: test-validator
clean: clean-validator-test

patch-for-validator-test:
	kubectl -n kyma-system patch deployment central-application-connectivity-validator --type json --patch-file resources/patches/central-application-connectivity-validator.json
	kubectl rollout status deploy central-application-connectivity-validator -n kyma-system --timeout=1m

unpatch-after-validator-test:
	kubectl rollout undo deployment/central-application-connectivity-validator -n kyma-system

test-validator: patch-for-validator-test validator-create-resources
	if kubectl wait --for=condition=complete --timeout=$(TEST_TIMEOUT) -n $(NAMESPACE) job/application-connectivity-validator-test; then \
	echo "Success! Results:"; \
	./scripts/check-pod-logs.sh application-connectivity-validator-test; \
	$(MAKE) clean-validator-test -f $(MAKEFILE_NAME); \
	else \
	echo "Tests failed! Results:"; \
	./scripts/check-pod-logs.sh application-connectivity-validator-test; \
	$(MAKE) clean-validator-test -f $(MAKEFILE_NAME); \
	exit 1; \
	fi

test-validator-debug: patch-for-validator-test validator-create-resources
	kubectl wait --for=condition=complete --timeout=$(TEST_TIMEOUT) -n $(NAMESPACE) job/application-connectivity-validator-test; \
	echo "Results:"; \
	./scripts/check-pod-logs.sh application-connectivity-validator-test; \

validator-create-resources:
	kubectl create namespace $(NAMESPACE) --dry-run=client -o yaml | kubectl apply -f -
	kubectl label namespace $(NAMESPACE) istio-injection=enabled --overwrite

	helm template resources/charts/application-connectivity-validator-test/charts/echoserver \
		--set global.namespace=$(NAMESPACE) \
	| kubectl apply -f -
	kubectl rollout status deployment echoserver -n test --timeout=90s

	@helm template resources/charts/application-connectivity-validator-test/charts/test \
    		--set namespace=$(NAMESPACE) \
    		--values resources/charts/application-connectivity-validator-test/values.yaml \
	| kubectl apply -f -

clean-validator-test: unpatch-after-validator-test
	helm template resources/charts/application-connectivity-validator-test --set namespace=$(NAMESPACE) | kubectl delete -f -
	kubectl delete ns $(NAMESPACE) --ignore-not-found



