[
  {
    "title":"NATS Servers: Server CPU",
    "query":"nats_varz_cpu"
  },
  {
    "title":"NATS Servers: Server Memory",
    "query":"nats_varz_mem"
  },
  {
    "title":"NATS Servers: Bytes In",
    "query":"nats_varz_in_bytes"
  },
  {
    "title":"NATS Servers: NATS Msgs In",
    "query":"nats_varz_in_msgs"
  },
  {
    "title":"NATS Servers: Bytes Out",
    "query":"nats_varz_out_bytes"
  },
  {
    "title":"NATS Servers: NATS Msgs Out",
    "query":"nats_varz_out_msgs"
  },
  {
    "title":"NATS Servers: Connections",
    "query":"nats_varz_connections"
  },
  {
    "title":"NATS Servers: Subscriptions",
    "query":"nats_varz_subscriptions"
  },
  {
    "title":"NATS Servers: Slow Consumers",
    "query":"nats_varz_slow_consumers"
  },
  {
    "title":"NATS JetStream: Storage Used",
    "query":"sum(nats_varz_jetstream_stats_storage{pod=~\"$server\"})/sum(nats_varz_jetstream_config_max_storage{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Total Storage Used",
    "query":"sum(nats_varz_jetstream_stats_storage{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Memory Used",
    "query":"sum(nats_varz_jetstream_stats_memory{pod=~\"$server\"})/sum(nats_varz_jetstream_config_max_memory{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Memory Used",
    "query":"sum(nats_varz_jetstream_stats_memory{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Connections",
    "query":"sum(nats_varz_connections{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Max Storage",
    "query":"sum(nats_varz_jetstream_config_max_storage{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Total Memory",
    "query":"sum(nats_varz_jetstream_config_max_memory{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Total Consumers",
    "query":"sum(nats_server_total_consumers{pod=~\"$server\"})"
  },
  {
    "title":"NATS JetStream: Stream data size",
    "query":"nats_stream_total_bytes{is_stream_leader=\"true\"}"
  },
  {
    "title":"NATS JetStream: Stream consumer count",
    "query":"nats_stream_consumer_count{is_stream_leader=\"true\"}"
  },
  {
    "title":"NATS JetStream: Stream message count",
    "query":"nats_stream_total_messages{is_stream_leader=\"true\"}"
  },
  {
    "title":"NATS JetStream: Message Rate (per second)",
    "query":"sum(rate(nats_stream_total_messages{stream_name=~\"$stream\",is_stream_leader=\"true\"}[$__rate_interval])) by (stream_name)"
  },
  {
    "title":"NATS JetStream: Messages per second (++/--) - 1",
    "query":"sum(rate(nats_consumer_num_pending{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}[$__rate_interval])+rate(nats_consumer_delivered_consumer_seq{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}[$__rate_interval])) by (consumer_desc)"
  },
  {
    "title":"NATS JetStream: Messages per second (++/--) - 2",
    "query":"- sum(rate(nats_consumer_delivered_consumer_seq{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}[$__rate_interval])) by (consumer_desc)"
  },
  {
    "title":"NATS JetStream: Pending Re-delivery Messages",
    "query":"nats_consumer_num_redelivered{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}"
  },
  {
    "title":"NATS JetStream: Pending messages",
    "query":"nats_consumer_num_pending{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}"
  },
  {
    "title":"NATS JetStream: Message Acks Pending",
    "query":"nats_consumer_num_ack_pending{stream_name=~\"$stream\",consumer_desc=~\"$consumer\",is_consumer_leader=\"true\"}"
  },
  {
    "title":"NATS Delivery: Published Event Types with a Subscription",
    "query":"count(nats_consumer_ack_floor_consumer_seq * on(consumer_name) group_left(event_type, subscription_name, subscription_namespace) nats_ec_event_type_subscribed_total) by (event_type, subscription_name, subscription_namespace) * on(event_type) group_left() sum(epp_event_type_published_total{}) by (event_type)"
  },
  {
    "title":"NATS Delivery: Successful Event Publisher Requests per Event Type",
    "query":"sum by (event_type) (rate(epp_event_type_published_total{response_code=~\"[2].*\"}[5m]))"
  }
]
