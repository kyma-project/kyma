---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: loki-test
  name: logging-loki-test
  namespace: kyma-system
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logging-loki-test
  namespace: kyma-system
  labels:
    app: loki-test
data:
  loki.yaml: |
    auth_enabled: false
    ingester:
      chunk_idle_period: 3m
      chunk_block_size: 262144
      chunk_target_size: 1572864
      chunk_retain_period: 1m
      max_chunk_age: 2h
      max_transfer_retries: 0
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
    
    limits_config:
      enforce_metric_name: false
      ingestion_rate_mb: 3
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    schema_config:
      configs:
        - from: 2018-04-15
          store: boltdb
          object_store: filesystem
          schema: v9
          index:
            prefix: index_
            period: 24h
    server:
      http_listen_port: 3100
    storage_config:
      boltdb:
        directory: /data/loki/index
      filesystem:
        directory: /data/loki/chunks
    chunk_store_config:
      max_look_back_period: 120h
    table_manager:
      retention_deletes_enabled: true
      retention_period: 120h
    compactor:
      working_directory: /data/loki/boltdb-shipper-compactor
      shared_store: filesystem

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logging-loki-test-grafana-datasource
  namespace: kyma-system
  labels:
    grafana_datasource: "1"
    app: loki-test
data:
  loki-test-datasource.yaml: |-
    apiVersion: 1
    datasources:
      - name: Loki-Test
        type: loki
        access: proxy
        url: http://logging-loki-test.kyma-system:3100
        editable: true
        jsonData:
          maxLines: 1000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: logging-loki-test
  namespace: kyma-system
  labels:
    app: loki-test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: logging-loki-test
  namespace: kyma-system
  labels:
    app: loki-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: logging-loki-test
subjects:
  - kind: ServiceAccount
    name: logging-loki-test
---
apiVersion: v1
kind: Service
metadata:
  name: logging-loki-headless-test
  namespace: kyma-system
  labels:
    app: loki-test
spec:
  clusterIP: None
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki-test
---
apiVersion: v1
kind: Service
metadata:
  name: logging-loki-test
  namespace: kyma-system
  labels:
    app: loki-test
  annotations:
    prometheus.io/port: "3100"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki-test
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logging-loki-test
  namespace: kyma-system
  labels:
    app: loki-test
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki-test
  serviceName: logging-loki-headless-test
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki-test
        name: loki-test
    spec:
      serviceAccountName: logging-loki-test
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      containers:
        - name: loki
          image: europe-docker.pkg.dev/kyma-project/prod/tpi/loki:2.2.1-0065b2a5
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
            - "-log.level=info"
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage-test
              mountPath: "/data"
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 10m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      terminationGracePeriodSeconds: 4800
      volumes:
        - name: config
          configMap:
            name: logging-loki-test
            items:
              - key: loki.yaml
                path: loki.yaml
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: storage-test
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "30Gi"
      volumeMode: Filesystem
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  labels:
    app: loki-test
  name: logging-loki-test
  namespace: kyma-system
spec:
  action: ALLOW
  selector:
    matchLabels:
      app: loki-test
  rules:
    # Grafana having SA can query v1 API
    - from:
        - source:
            principals:
              - "cluster.local/ns/kyma-system/sa/monitoring-grafana"
      to:
        - operation:
            paths: ["/loki/api/v1/*"]
            methods: ["GET"]
    # fluent-bit with SA can push to v1 API
    - from:
        - source:
            principals:
              - "cluster.local/ns/kyma-system/sa/telemetry-fluent-bit"
      to:
        - operation:
            paths: ["/loki/api/v1/push"]
            methods: ["POST"]
    - from:
        - source:
            principals:
              - cluster.local/ns/kyma-system/sa/monitoring-prometheus
      to:
        - operation:
            paths: ["/metrics"]
            methods: ["GET"]
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  labels:
    app: loki-test
  name: logging-loki-test
  namespace: kyma-system
spec:
  selector:
    matchLabels:
      app: loki-test
  mtls:
    mode: STRICT
---
apiVersion: telemetry.kyma-project.io/v1alpha1
kind: LogPipeline
metadata:
  name: loki-test
spec:
  input:
    application:
      containers: {}
      namespaces:
        system: true
  output:
    grafana-loki:
      labels:
        job: telemetry-fluent-bit
      removeKeys:
        - kubernetes
        - stream
      url:
        value: http://logging-loki-test:3100/loki/api/v1/push
