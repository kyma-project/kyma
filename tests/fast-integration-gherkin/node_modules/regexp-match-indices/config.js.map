{"version":3,"file":"config.js","sourceRoot":"","sources":["config.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;EAcE;AAEF,MAAM,MAAM,GAWR;IACA,IAAI,EAAE,MAAM;CACf,CAAC;AAEF,iBAAS,MAAM,CAAC","sourcesContent":["/*!\r\nCopyright 2019 Ron Buckton\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nconst config: {\r\n    /**\r\n     * Indicates the evaluation mode:\r\n     * - `\"lazy\"` - The `\"indices\"` property is intially defined as an accessor-property on a result and is\r\n     *   converted into a data-property when first accessed. This avoids an up-front performance penalty for\r\n     *   all existing calls to `RegExp.prototype.exec` at the cost of spec compliance. This is the default.\r\n     * - `\"spec-compliant\"` - Uses a more spec-complaint behavior that evaluates and stores `\"indices\"` \r\n     *   immediately as a data-property. This can result in a performance penalty for existing calls to \r\n     *   `RegExp.prototype.exec` that may not be already accessing `\"indices\"`.\r\n     */\r\n    mode: \"lazy\" | \"spec-compliant\";\r\n} = {\r\n    mode: \"lazy\"\r\n};\r\n\r\nexport = config;"]}