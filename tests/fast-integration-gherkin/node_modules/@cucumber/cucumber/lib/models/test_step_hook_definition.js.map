{"version":3,"file":"test_step_hook_definition.js","sourceRoot":"","sources":["../../src/models/test_step_hook_definition.ts"],"names":[],"mappings":";;;;;AAAA,oDAAkD;AAClD,8DAMqB;AAGrB,MAAqB,sBACnB,SAAQ,oBAAU;IAMlB,YAAY,IAAmD;QAC7D,KAAK,CAAC,IAAI,CAAC,CAAA;QACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAA;QACtC,IAAI,CAAC,eAAe,GAAG,IAAI,+BAAe,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC/D,CAAC;IAED,iBAAiB,CAAC,MAAuB;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAA;IAC9D,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,EAC5B,aAAa,GACa;QAC1B,OAAO,MAAM,OAAO,CAAC,OAAO,CAAC;YAC3B,2BAA2B,EAAE,GAAG,EAAE,CAChC,IAAI,CAAC,6BAA6B,CAAC,QAAQ,EAAE,GAAG,CAAC;YACnD,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,CAAC,CAAA;IACJ,CAAC;CACF;AA3BD,yCA2BC","sourcesContent":["import { PickleTagFilter } from '../pickle_filter'\nimport Definition, {\n  IDefinition,\n  IGetInvocationDataResponse,\n  IGetInvocationDataRequest,\n  IDefinitionParameters,\n  IHookDefinitionOptions,\n} from './definition'\nimport * as messages from '@cucumber/messages'\n\nexport default class TestStepHookDefinition\n  extends Definition\n  implements IDefinition\n{\n  public readonly tagExpression: string\n  private readonly pickleTagFilter: PickleTagFilter\n\n  constructor(data: IDefinitionParameters<IHookDefinitionOptions>) {\n    super(data)\n    this.tagExpression = data.options.tags\n    this.pickleTagFilter = new PickleTagFilter(data.options.tags)\n  }\n\n  appliesToTestCase(pickle: messages.Pickle): boolean {\n    return this.pickleTagFilter.matchesAllTagExpressions(pickle)\n  }\n\n  async getInvocationParameters({\n    hookParameter,\n  }: IGetInvocationDataRequest): Promise<IGetInvocationDataResponse> {\n    return await Promise.resolve({\n      getInvalidCodeLengthMessage: () =>\n        this.buildInvalidCodeLengthMessage('0 or 1', '2'),\n      parameters: [hookParameter],\n      validCodeLengths: [0, 1, 2],\n    })\n  }\n}\n"]}