{"version":3,"file":"pickle_parser.js","sourceRoot":"","sources":["../../../src/formatter/helpers/pickle_parser.ts"],"names":[],"mappings":";;;;;;AAAA,oDAAsB;AACtB,uEAAyE;AAkBzE,SAAgB,sBAAsB,CAAC,EACrC,MAAM,EACN,kBAAkB,GACa;IAC/B,OAAO,gBAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;SAC9B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;SACnC,OAAO,EAAE;SACT,KAAK,EAAE;SACP,KAAK,EAAE,CAAC,WAAW,CAAA;AACxB,CAAC;AATD,wDASC;AAED,SAAgB,cAAc,CAAC,EAC7B,UAAU,EACV,cAAc,GACS;IACvB,OAAO,gBAAC,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC;SAClC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SAC/B,OAAO,EAAE;SACT,KAAK,EAAE;SACP,KAAK,EAAE,CAAC,OAAO,CAAA;AACpB,CAAC;AATD,wCASC;AAED,SAAgB,gBAAgB,CAC9B,MAAuB;IAEvB,OAAO,gBAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;SACzB,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;SAChD,SAAS,EAAE;SACX,KAAK,EAAE,CAAA;AACZ,CAAC;AAPD,4CAOC;AAED,SAAgB,iBAAiB,CAAC,EAChC,eAAe,EACf,MAAM,GACoB;IAC1B,MAAM,0BAA0B,GAC9B,uDAA6B,CAAC,eAAe,CAAC,CAAA;IAChD,OAAO,0BAA0B,CAAC,gBAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAA;AAC9D,CAAC;AAPD,8CAOC","sourcesContent":["import _ from 'lodash'\nimport { getGherkinScenarioLocationMap } from './gherkin_document_parser'\nimport * as messages from '@cucumber/messages'\n\nexport interface IGetPickleLocationRequest {\n  gherkinDocument: messages.GherkinDocument\n  pickle: messages.Pickle\n}\n\nexport interface IGetStepKeywordRequest {\n  pickleStep: messages.PickleStep\n  gherkinStepMap: Record<string, messages.Step>\n}\n\nexport interface IGetScenarioDescriptionRequest {\n  pickle: messages.Pickle\n  gherkinScenarioMap: Record<string, messages.Scenario>\n}\n\nexport function getScenarioDescription({\n  pickle,\n  gherkinScenarioMap,\n}: IGetScenarioDescriptionRequest): string {\n  return _.chain(pickle.astNodeIds)\n    .map((id) => gherkinScenarioMap[id])\n    .compact()\n    .first()\n    .value().description\n}\n\nexport function getStepKeyword({\n  pickleStep,\n  gherkinStepMap,\n}: IGetStepKeywordRequest): string {\n  return _.chain(pickleStep.astNodeIds)\n    .map((id) => gherkinStepMap[id])\n    .compact()\n    .first()\n    .value().keyword\n}\n\nexport function getPickleStepMap(\n  pickle: messages.Pickle\n): Record<string, messages.PickleStep> {\n  return _.chain(pickle.steps)\n    .map((pickleStep) => [pickleStep.id, pickleStep])\n    .fromPairs()\n    .value()\n}\n\nexport function getPickleLocation({\n  gherkinDocument,\n  pickle,\n}: IGetPickleLocationRequest): messages.Location {\n  const gherkinScenarioLocationMap =\n    getGherkinScenarioLocationMap(gherkinDocument)\n  return gherkinScenarioLocationMap[_.last(pickle.astNodeIds)]\n}\n"]}