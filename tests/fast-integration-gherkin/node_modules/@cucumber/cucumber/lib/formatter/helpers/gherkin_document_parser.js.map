{"version":3,"file":"gherkin_document_parser.js","sourceRoot":"","sources":["../../../src/formatter/helpers/gherkin_document_parser.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport * as messages from '@cucumber/messages'\nimport { doesHaveValue } from '../../value_checker'\n\nexport function getGherkinStepMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Step> {\n  return _.chain(gherkinDocument.feature.children)\n    .map(extractStepContainers)\n    .flatten()\n    .map('steps')\n    .flatten()\n    .map((step: messages.Step) => [step.id, step])\n    .fromPairs()\n    .value()\n}\n\nfunction extractStepContainers(\n  child: messages.FeatureChild\n): Array<messages.Scenario | messages.Background> {\n  if (doesHaveValue(child.background)) {\n    return [child.background]\n  } else if (doesHaveValue(child.rule)) {\n    return child.rule.children.map((ruleChild) =>\n      doesHaveValue(ruleChild.background)\n        ? ruleChild.background\n        : ruleChild.scenario\n    )\n  }\n  return [child.scenario]\n}\n\nexport function getGherkinScenarioMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Scenario> {\n  return _.chain(gherkinDocument.feature.children)\n    .map((child: messages.FeatureChild) => {\n      if (doesHaveValue(child.rule)) {\n        return child.rule.children\n      }\n      return [child]\n    })\n    .flatten()\n    .filter('scenario')\n    .map('scenario')\n    .map((scenario: messages.Scenario) => [scenario.id, scenario])\n    .fromPairs()\n    .value()\n}\n\nexport function getGherkinExampleRuleMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Rule> {\n  return _.chain(gherkinDocument.feature.children)\n    .filter('rule')\n    .map('rule')\n    .map((rule) => {\n      return rule.children\n        .filter((child) => doesHaveValue(child.scenario))\n        .map((child) => [child.scenario.id, rule])\n    })\n    .flatten()\n    .fromPairs()\n    .value()\n}\n\nexport function getGherkinScenarioLocationMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Location> {\n  const locationMap: Record<string, messages.Location> = {}\n  const scenarioMap: Record<string, messages.Scenario> =\n    getGherkinScenarioMap(gherkinDocument)\n  _.entries<messages.Scenario>(scenarioMap).forEach(([id, scenario]) => {\n    locationMap[id] = scenario.location\n    if (doesHaveValue(scenario.examples)) {\n      _.chain(scenario.examples)\n        .map('tableBody')\n        .flatten()\n        .forEach((tableRow) => {\n          locationMap[tableRow.id] = tableRow.location\n        })\n        .value()\n    }\n  })\n  return locationMap\n}\n"]}