apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "jaeger.fullname" . }}
  labels:
    app: {{ template "jaeger.name" . }}
    chart: {{ template "jaeger.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}  
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "jaeger.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ template "jaeger.name" . }}
        release: {{ .Release.Name }}
        jaeger-infra: jaeger-pod
    spec:
      {{- if .Values.global.isLocalEnv }}
      hostNetwork: true   #only for minikube
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
          - "dex.{{ .Values.global.ingress.domainName }}"
      {{- end }}
      containers:
      -   env:
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "{{ .Values.zipkin.httpPort }}"
          - name: SPAN_STORAGE_TYPE
            value: {{ .Values.jaeger.persistence.storageType | quote }}
          - name: BADGER_DIRECTORY_VALUE
            value: {{ .Values.jaeger.persistence.dataPath | quote }}
          - name: BADGER_DIRECTORY_KEY
            value: {{ .Values.jaeger.persistence.keyPath | quote }}
          - name: BADGER_EPHEMERAL
            value: {{ .Values.jaeger.persistence.ephemeral | quote }}
          - name: BADGER_TRUNCATE
            value: {{ .Values.jaeger.persistence.truncate | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.zipkin.thriftCompactPort }}
              protocol: UDP
            - containerPort: {{ .Values.jaeger.thriftCompactPort }}
              protocol: UDP
            - containerPort: {{ .Values.jaeger.thriftBinaryPort }}
              protocol: UDP
            - containerPort: {{ .Values.jaeger.uiPort }}
              protocol: TCP
            - containerPort: {{ .Values.zipkin.httpPort }}
              protocol: TCP
          volumeMounts:
          - name: storage
            mountPath: /badger
          readinessProbe:
            httpGet:
              path: "/"
              port: {{ .Values.jaeger.uiPort }}
            initialDelaySeconds: 10
          resources: 
{{ toYaml .Values.resources | indent 12 }}
      - image: quay.io/gambol99/keycloak-proxy:v2.3.0
        imagePullPolicy: IfNotPresent
        name: kcproxy
        args:
        - --discovery-url=https://dex.{{ .Values.global.ingress.domainName }}
        - --skip-openid-provider-tls-verify=true
        - --client-id=jaeger
        - --client-secret=oiEWUWOIEwedfgg
        - --resources=uri=/*|methods=GET,POST,PUT,DELETE
        - --redirection-url=https://jaeger.{{ .Values.global.ingress.domainName }}
        - --verbose=true
        - --listen=0.0.0.0:{{ .Values.kcproxy.inPort }}
        - --upstream-url=http://localhost:{{ .Values.jaeger.uiPort }}
        - --enable-session-cookies=true
        - --enable-logging=true
        - --secure-cookie=true
        - --enable-authorization-cookies=false
        - --enable-token-header=false
        - --enable-encrypted-token=true
        - --enable-security-filter=true
        - --filter-browser-xss=true
        - --filter-content-nosniff=true
        - --filter-frame-deny=true
        - --encryption-key=AgXa7xRcoClDEU0ZDSH4X0XhL5Qy2Z2j
        - --http-only-cookie=true
        - --upstream-keepalives=true
        - --upstream-keepalive-timeout=60s
        - --enable-logout-redirect=true
        - --oauth-uri=/oauth
        - --cookie-domain=https://jaeger.{{ .Values.global.ingress.domainName }}
        - --cookie-access-name=KYMA_TOKEN
        ports:
        - containerPort: {{ .Values.kcproxy.inPort }}
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ template "jaeger.fullname" . }}
