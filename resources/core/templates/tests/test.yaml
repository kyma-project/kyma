{{- if and ( .Values.test.acceptance.core.enabled ) ( .Capabilities.APIVersions.Has "testing.kyma-project.io/v1alpha1" ) }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}-tests
    app.kubernetes.io/name: {{ .Chart.Name }}-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  disableConcurrency: false
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      shareProcessNamespace: true
      serviceAccountName: {{ .Chart.Name }}-tests
      containers:
      - name: tests
        image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.acceptance_tests.dir }}acceptance-tests:{{ .Values.global.acceptance_tests.version }}
        env:
        - name: HELM_BROKER_URL
          value: http://helm-broker.kyma-system.svc.cluster.local
        - name: APPLICATION_BROKER_URL
          value: http://application-broker.kyma-integration.svc.cluster.local
        - name: RELEASE_NAMESPACE
          value: {{ .Values.test.acceptance.core.application.brokerNamespace }}
        - name: STUBS_DOCKER_IMAGE
          value: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.acceptance_tests.dir }}acceptance-tests:{{ .Values.global.acceptance_tests.version }}
        - name: APPLICATION_UNLINKING_TIMEOUT
          value: {{ .Values.test.acceptance.core.application.unlinkingTimeout | quote }}
        - name: APPLICATION_LINKING_TIMEOUT
          value: {{ .Values.test.acceptance.core.application.linkingTimeout | quote }}
        - name: APPLICATION_KEEP_RESOURCES
          value: "false"
        - name: APPLICATION_DISABLED
          value: {{ .Values.test.acceptance.core.application.disabled | quote }}
        - name: TEAR_DOWN_TIMEOUT_PER_STEP
          value: {{ .Values.test.acceptance.core.application.tearDownTimeoutPerStep | quote }}
        command:
        - "/bin/sh"
        args:
        - "-c"
        - "echo 'TESTING start'; sleep 10; ./entrypoint.sh; exit_code=$?; echo code is $exit_code; echo 'killing pilot-agent...'; pkill -INT pilot-agent; sleep 4; exit $exit_code;"
    restartPolicy: Never
{{- end }}
