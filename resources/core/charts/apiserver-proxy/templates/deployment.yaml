apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  
      maxSurge: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
      labels:
        app: {{ template "name" . }}
        tlsSecret: ingress-tls-cert
    spec:
      serviceAccountName: {{ template "name" . }}
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.minikubeIP }}
          hostnames:
            - "dex.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      containers:
      - image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.apiserver_proxy.dir }}apiserver-proxy:{{ .Values.global.apiserver_proxy.version }}
        name: auth-proxy
        {{ if not .Values.global.isLocalEnv }}
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 128Mi
        {{ end }}
        imagePullPolicy: IfNotPresent
        args:
        - --insecure-listen-address=0.0.0.0:{{ .Values.port.insecure }}
        - --secure-listen-address=0.0.0.0:{{ .Values.port.secure }}
        - --tls-cert-file=/etc/tls-cert/tls.crt
        - --tls-private-key-file=/etc/tls-cert/tls.key
        - --upstream=https://kubernetes.default
        - --logtostderr=true
        - --v=10
        - --oidc-issuer=https://dex.{{ .Values.global.ingress.domainName }}
        - --oidc-clientID=kyma-client
        - --oidc-ca-file=/etc/dex-tls-cert/tls.crt
        - --cors-allow-origin={{ .Values.corsPolicy.allowOrigin | join "," }}
        - --cors-allow-headers={{ .Values.corsPolicy.allowHeaders | join "," }}
        - --cors-allow-methods={{ .Values.corsPolicy.allowMethods | join "," }}
        ports:
        - containerPort: {{ .Values.port.insecure }}
        - containerPort: {{ .Values.port.secure }}
          {{ if .Values.global.isLocalEnv }}
          hostPort: {{ .Values.port.secure }}
          {{ end }}
        volumeMounts:
        - name: tls-cert
          mountPath: /etc/tls-cert/
        - name: dex-tls-cert
          mountPath: /etc/dex-tls-cert/
      volumes:
      - name: dex-tls-cert
        secret:
          secretName: ingress-tls-cert
      - name: tls-cert
        secret:
          secretName: {{ template "name" . }}-tls-cert
