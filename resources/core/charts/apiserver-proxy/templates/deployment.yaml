apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  
      maxSurge: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
      labels:
        app: {{ template "name" . }}
        tlsSecret: ingress-tls-cert
    spec:
      serviceAccountName: kube-rbac-proxy
      {{ if .Values.global.isLocalEnv }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{ end }}
      initContainers:
      - image: eu.gcr.io/kyma-project/develop/xip-patch:1103850e
        name: get-service-ip
        envFrom:
        - configMapRef:
            name: apiserver-proxy
            optional: true
        command:
          - bash
          - -c
          - |
            set -e
            if [ "$DOMAIN" = "" ]; then
              source /app/utils.sh
              INGRESS_IP=$(getLoadBalancerIP apiserver-proxy-ssl kyma-system)
              kubectl create configmap apiserver-proxy --from-literal DOMAIN=$INGRESS_IP.xip.io
            fi
      - image: eu.gcr.io/kyma-project/develop/xip-patch:1103850e
        name: generate-cert
        envFrom:
        - configMapRef:
            name: apiserver-proxy
        volumeMounts:
        - name: tls-cert
          mountPath: /etc/tls-cert/
        command:
          - bash
          - -c
          - |
            set -e
            if [ "$(cat /etc/tls-cert/tls.key)" = "" ]; then
              source /app/utils.sh
              generateCertificatesForDomain $DOMAIN ./key.pem ./cert.pem
              kubectl create secret tls apiserver-proxy-tls-cert --key ./key.pem --cert ./cert.pem
            fi
      containers:
#      - image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.apiserver_proxy.dir }}apiserver-proxy:{{ .Values.global.apiserver_proxy.version }}
      - image: sjanota/apiserver-proxy:latest
        name: auth-proxy
        {{ if not .Values.global.isLocalEnv }}
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 128Mi
        {{ end }}
        imagePullPolicy: IfNotPresent
        args:
        - "--insecure-listen-address=0.0.0.0:{{ .Values.containerPort}}"
        - "--secure-listen-address=0.0.0.0:8443"
        - "--tls-cert-file=/etc/tls-cert/tls.crt"
        - "--tls-private-key-file=/etc/tls-cert/tls.key"
        - "--upstream=https://kubernetes.default"
        - "--logtostderr=true"
        - "--v=10"
        - "--oidc-issuer=https://dex.{{ .Values.global.domainName }}"
        - "--oidc-clientID=kyma-client"
        - "--oidc-ca-file=/etc/dex-tls-cert/tls.crt"
        ports:
        - containerPort: {{ .Values.containerPort}}
        volumeMounts:
        - name: tls-cert
          mountPath: /etc/tls-cert/
        - name: dex-tls-cert
          mountPath: /etc/dex-tls-cert/
      volumes:
      - name: dex-tls-cert
        secret:
          secretName: ingress-tls-cert
      - name: tls-cert
        secret:
          secretName: apiserver-proxy-tls-cert
          optional: true
            