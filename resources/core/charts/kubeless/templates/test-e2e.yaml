### Executes integration kubeless tests along with other Kyma resources
### Such as API, ServiceBindingUsage, Subscription
### Only in cluster installations
  {{- if not .Values.global.isLocalEnv }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ template "fullname" . }}-e2e
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccount: "test-{{ template "fullname" . }}-int"
      containers:
        - name: test-{{ template "fullname" . }}
          image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.kubeless_integration_tests.dir }}kubeless-integration:{{ .Values.global.kubeless_integration_tests.version }}
          volumeMounts:
              - name: k8syaml
                mountPath: /k8syaml
          env:
            - name: INGRESSGATEWAY_ADDRESS
              value: istio-ingressgateway.istio-system.svc.cluster.local
            - name: KUBELESS_NAMESPACE
              value: kyma-system
            - name: KUBELESS_CONFIG
              value: {{ template "fullname" . }}-config
            - name: DOMAIN_NAME
              value: {{ .Values.global.ingress.domainName }}
      volumes:
        - name: k8syaml
          configMap:
            name: "test-{{ template "fullname" . }}-config-int"
            items:
              - key: k8sYaml
                path: k8s.yaml
              - key: svcBindLambdaYaml
                path: svcbind-lambda.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "test-{{ template "fullname" . }}-config-int"
data:
  k8sYaml: |-
    {{- include "k8s.yaml.tpl" . | indent 4}}
  svcBindLambdaYaml: |-
    {{- include "svcbind-lambda.yaml.tpl" . | indent 4}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-{{ template "fullname" . }}-int
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["delete", "get", "list"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["create", "delete", "get", "list", "patch"]
  - apiGroups: [""]
    resources: ["services", "services/proxy", "configmaps", "pods/log", "replicationcontrollers"]
    verbs: ["get", "list"]
  - apiGroups: ["kubeless.io"]
    resources: ["functions"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["serviceinstances", "servicebindings"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["servicecatalog.kyma-project.io"]
    resources: ["servicebindingusages"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["eventing.kyma-project.io"]
    resources: ["subscriptions"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["gateway.kyma-project.io"]
    resources: ["apis"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["applicationconnector.kyma-project.io"]
    resources: ["eventactivations"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["get", "list"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-{{ template "fullname" . }}-int
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-{{ template "fullname" . }}-int
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-{{ template "fullname" . }}-int
subjects:
  - kind: ServiceAccount
    name: test-{{ template "fullname" . }}-int
    namespace: {{ .Release.Namespace }}
{{ end }}