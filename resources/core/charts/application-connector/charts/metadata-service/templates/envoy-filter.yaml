apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: example
spec:
  filters:
  - listenerMatch:
      listenerType: ANY
      portNumber: {{ .Values.deployment.args.externalAPIPort }}
    workloadLabels:
      app: {{ .Chart.Name }}
    filterName: envoy.lua
    filterType: HTTP
    filterConfig:
      inlineCode: |
        function envoy_on_request(request_handle)
          headers = request_handle:headers()
          path = headers:get(":path")

          response = ""

          s = split(path, "/")
          reName = s[2]

          response = response .. " RE: "
          response = response .. reName

          conn = request_handle:connection()
          if conn:ssl() == nil then
            response = response .. " INSECURE"
            request_handle:respond({[":status"] = "403"}, "Blocked by envoy filter." .. response)
          else
            response = response .. " SECURE"
            subjCName = "ec-default"
          end

          --[[
          if s[2] ~= subjCName then
            response = response .. " INVALID SUBJECT "
            request_handle:respond({[":status"] = "403"}, "Blocked by envoy filter." .. response)
          else
            response = response .. " PROPER SUBJECT "
            request_handle:respond({[":status"] = "403"}, "Blocked by envoy filter." .. response)
          end
          ]]--

        end

        function split(s, delimiter)
          result = {};
          for match in (s..delimiter):gmatch("(.-)"..delimiter) do
            table.insert(result, match);
          end
          return result;
        end