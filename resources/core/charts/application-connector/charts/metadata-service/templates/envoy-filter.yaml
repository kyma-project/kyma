apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Chart.Name }}-envoy-filter
  namespace: {{ .Values.global.namespace }}
spec:
  workloadLabels:
    app: {{ .Chart.Name }}
  filters:
  - listenerMatch:
      listenerType: ANY
      portNumber: {{ .Values.deployment.args.externalAPIPort }}
    filterName: envoy.lua
    filterType: HTTP
    filterConfig:
      inlineCode: |
        function envoy_on_request(request_handle)
          headers = request_handle:headers()
          path = headers:get(":path")

          s = split(path, "/")
          reName = s[2]

          --[[ This section depends on the approach we choose in the future ]]--
          --[[
          conn = request_handle:connection()
          if conn:ssl() == nil then
            request_handle:respond({[":status"] = "403"}, "Blocked by envoy filter. No valid certificate presented by peer.")
          else
            --[[ Here we need to fetch CName from certificate or header ]]--
            subjCName = "ec-default"
          end
          ]]--

          --[[ This section should compare reName with CName fetched earlier ]]--
          --[[
          if reName ~= subjCName then
            request_handle:respond({[":status"] = "403"}, "Blocked by envoy filter. Certificate does not match this RE.")
          end
          ]]--
        end

        function split(s, delimiter)
          result = {};
          for match in (s..delimiter):gmatch("(.-)"..delimiter) do
            table.insert(result, match);
          end
          return result;
        end