{{- if .Values.rbacEnable }}
apiVersion: v1
kind: List
items:

### API Server ###

# TODO: if this is just for namespace lifecycle admission, move to a generic role
# the role for the apiserver 
- apiVersion: {{template "rbacApiVersion" . }}
  kind: ClusterRole
  metadata:
    name: "servicecatalog.k8s.io:apiserver"
  # this rule defined on the role for specifically the
  # namespace-lifecycle admission-controller
  rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:     ["get", "list", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch"]
# API-server service-account gets its own role
- apiVersion: {{template "rbacApiVersion" . }}
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:apiserver"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.apiserver.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"
# apiserver gets the auth-delegator role to delegate auth decisions to
# the core apiserver
- apiVersion: {{template "rbacApiVersion" . }}
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver-auth-delegator"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.apiserver.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"
# apiserver gets the ability to read authentication. This allows it to
# read the specific configmap that has the requestheader-* entries to
# enable api aggregation
- apiVersion: {{template "rbacApiVersion" . }}
  kind: RoleBinding
  metadata:
    name: "servicecatalog.k8s.io:apiserver-authentication-reader"
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.apiserver.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"

### Controller-Manager ###

# controller-manager role defines what access the service-catalog
# controller-manager needs to manage the resources of the
# service-catalog
- apiVersion: {{template "rbacApiVersion" . }}
  kind: ClusterRole
  metadata:
    name: "servicecatalog.k8s.io:controller-manager"
  rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs:     ["create","patch","update"]
  # TODO: do not grant global access, limit to particular secrets referenced from servicebindings
  - apiGroups: [""]
    resources: ["secrets"]
    verbs:     ["get","create","update","delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs:     ["get","list","update", "patch", "watch", "delete", "initialize"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs:     ["get","list","watch"]
  # access to our service-catalog types
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterserviceclasses"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterserviceplans"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterservicebrokers","serviceinstances","servicebindings"]
    verbs:     ["get","list","watch"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","serviceinstances/reference","servicebindings/status"]
    verbs:     ["update"]
  {{- if not .Values.namespacedServiceBrokerDisabled }}
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["serviceclasses"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["serviceplans"]
    verbs:     ["get","list","watch","create","patch","update","delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["servicebrokers"]
    verbs:     ["get","list","watch"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["servicebrokers/status","serviceclasses/status","serviceplans/status"]
    verbs:     ["update"]
  {{- end }}
# give the controller-manager service account access to whats defined in its role.
- apiVersion: {{template "rbacApiVersion" . }}
  kind: ClusterRoleBinding
  metadata:
    name: "servicecatalog.k8s.io:controller-manager"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:controller-manager"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.controllerManager.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"

# This gives create/update access to configmaps
- apiVersion: {{template "rbacApiVersion" . }}
  kind: Role
  metadata:
    name: "servicecatalog.k8s.io:cluster-info-configmap"
    namespace: "{{ .Release.Namespace }}"
  rules:
  - apiGroups:     [""]
    resources:     ["configmaps"]
    resourceNames: ["cluster-info"]
    verbs:         ["get","create","list","watch","update"]
- apiVersion: {{template "rbacApiVersion" . }}
  kind: RoleBinding
  metadata:
    name: service-catalog-controller-manager-cluster-info
    namespace: "{{ .Release.Namespace }}"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "servicecatalog.k8s.io:cluster-info-configmap"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.controllerManager.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"

# This gives create/update access to configmaps in deployment namespace for leader election
- apiVersion: {{template "rbacApiVersion" . }}
  kind: Role
  metadata:
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
    namespace: "{{ .Release.Namespace }}"
  rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs:     ["create"]
  - apiGroups:     [""]
    resources:     ["configmaps"]
    resourceNames: ["service-catalog-controller-manager"]
    verbs:         ["get","update"]
- apiVersion: {{template "rbacApiVersion" . }}
  kind: RoleBinding
  metadata:
    name: service-catalog-controller-manager-leader-election
    namespace: "{{ .Release.Namespace }}"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: "{{ .Values.controllerManager.serviceAccount }}"
    namespace: "{{ .Release.Namespace }}"
{{end}}
