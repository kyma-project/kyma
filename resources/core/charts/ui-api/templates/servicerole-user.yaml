apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: graphql-user
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
spec:
  rules:
  - services: [ '{{ template "fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local' ]
    paths: ["/graphql"]
    methods: ["GET"]
  - services: [ '{{ template "fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local' ]
    paths: ["/graphql"]
    methods: ["POST"]
    constraints:
    - key: request.headers[kyma-graphql-resources]
      values:
      - '{serviceInstance}'
      - '{serviceInstances}'
      - '{clusterServiceClasses}'
      - '{clusterServiceClass}'
      - '{serviceClasses}'
      - '{serviceClass}'
      - '{clusterServiceBrokers}'
      - '{clusterServiceBroker}'
      - '{serviceBrokers}'
      - '{serviceBroker}'
      - '{serviceBindingUsage}'
      - '{serviceBinding}'
      - '{usageKinds}'
      - '{usageKindResources}'
      - '{bindableResources}'
      - '{apis}'
      - '{connectorService}'
      - '{environments}'
      - '{deployments}'
      - '{resourceQuotas}'
      - '{resourceQuotasStatus}'
      - '{functions}'
      - '{content}'
      - '{topics}'
      - '{eventActivations}'
      - '{limitRanges}'
      # Ugly workarounds for Envoy filter bugs
      - '{topics,typename}' # docs
      - '{clusterServiceClasses,serviceClasses}' # catalog
      - '{clusterServiceClass,typename}' # catalog
      - '{serviceClass,typename}' # catalog
      - '{serviceBrokers,typename}' # brokers
      - '{default,defaultRequest,limitRanges}' # resources
      - '{requests,resourceQuotas}' # resources
      - '{}' # mutations