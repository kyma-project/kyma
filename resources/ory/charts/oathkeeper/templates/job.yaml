# This job is meant to be run post install/upgrade if user did not provide JWKS in overrides
# If user does not provide JWKS we need to generate them first and later on the cronjob is responsible for rotating the keys
{{ if not .Values.oathkeeper.mutatorIdTokenJWKs }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ory-oathkeeper-keys-helper-service-account
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    "helm.sh/hook": "post-install, post-upgrade"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{.Release.Namespace}}
  name: ory-oathkeeper-keys-helper-job-role
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    "helm.sh/hook": "post-install, post-upgrade"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update", "patch"]
    resourceNames: ["{{ include "oathkeeper.fullname" . }}-jwks-secret"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ory-oathkeeper-keys-helper-job-role-binding
  namespace: {{.Release.Namespace}}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    "helm.sh/hook": "post-install, post-upgrade"
subjects:
  - kind: ServiceAccount
    name: ory-oathkeeper-keys-helper-service-account
    namespace: {{.Release.Namespace}}
roleRef:
  kind: Role
  name: ory-oathkeeper-keys-helper-job-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
    "helm.sh/hook": "post-install, post-upgrade"
    helm.sh/hook-weight: "1"
  name: ory-oathkeeper-helper-keys-job
spec:
  activeDeadlineSeconds: 1000
  backoffLimit: 3
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      initContainers:
        - name: keys-generator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
          - name: {{ include "oathkeeper.name" . }}-keys-volume
            mountPath: /etc/secrets
          command:
            - /bin/sh
            - -c
            - |
              oathkeeper credentials generate --alg RS256 > /etc/secrets/jwks.json
      containers:
        -
          command:
            - /bin/bash
            - -c
            - |
              set -e
              kubectl create secret generic {{ include "oathkeeper.fullname" . }}-jwks-secret \
                --from-file=/etc/secrets/jwks.json \
                -n kyma-system -o yaml --dry-run | kubectl apply -f -
          image: {{ .Values.kubectlJob.image }}
          name: override-generator
          volumeMounts:
          - name: {{ include "oathkeeper.name" . }}-keys-volume
            mountPath: /etc/secrets
            readOnly: true
      volumes:
      - name: {{ include "oathkeeper.name" . }}-keys-volume
        emptyDir: {}
      restartPolicy: Never
      serviceAccountName: ory-oathkeeper-keys-helper-service-account
{{ end }}