apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hydra.fullname" . }}
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
{{ include "hydra.labels" . | indent 4 }}
    {{- with .Values.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.deployment.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
{{- if not .Values.deployment.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hydra.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
{{ include "hydra.labels" . | indent 8 }}
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.deployment.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.hydra.autoMigrate }}
      initContainers:
        {{- if not .Values.global.ory.hydra.persistence.gcloud.enabled }} #Use only for in-cluster databases that may not be ready yet. External databases are made ready before installation.
        - name: wait-for-db
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.busybox) }}"
          command:
            - /bin/sh
            - -c
            - |
{{ .Files.Get "files/wait-for-db.sh" | printf "%s" | indent 14 }}
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "hydra.secretname" . }}
                  key: dsn
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
        {{- end }}
        - name: {{ .Chart.Name }}-automigrate
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.hydra) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["hydra"]
          args: ["migrate", "sql", "-e", "--yes", "--config", "/etc/config/config.yaml"]
          volumeMounts:
            - name: {{ include "hydra.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
            {{- if .Values.deployment.extraVolumeMounts }}
{{ toYaml .Values.deployment.extraVolumeMounts | indent 12 }}
            {{- end }}
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "hydra.secretname" . }}
                  key: dsn
            {{- with .Values.deployment.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
    {{- end}}
      volumes:
        - name: {{ include "hydra.name" . }}-config-volume
          configMap:
            name: {{ include "hydra.fullname" . }}
        {{- if .Values.deployment.extraVolumes }}
{{ toYaml .Values.deployment.extraVolumes | indent 8 }}
        {{- end }}

      {{- if .Values.deployment.serviceAccountName  }}
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.hydra) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["hydra"]
          volumeMounts:
            - name: {{ include "hydra.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
            {{- if .Values.deployment.extraVolumeMounts }}
{{ toYaml .Values.deployment.extraVolumeMounts | indent 12 }}
            {{- end }}
          args: [
            "serve",
            "all",
            {{- if .Values.hydra.dangerousForceHttp }}
            "--dangerous-force-http",
            {{- end}}
            {{- if .Values.hydra.dangerousAllowInsecureRedirectUrls }}
            "--dangerous-allow-insecure-redirect-urls",
            {{ include "hydra.utils.joinListWithComma" .Values.hydra.dangerousAllowInsecureRedirectUrls | quote }},
            {{- end}}
            "--config",
            "/etc/config/config.yaml"
          ]
          ports:
            - name: http-public
              containerPort: 4444
              protocol: TCP
            - name: http-admin
              containerPort: 4445
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-admin
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-admin
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 10
            timeoutSeconds: 5
          env:
            {{- if .Values.deployment.tracing.datadog.enabled }}
            - name: TRACING_PROVIDER
              value: datadog
            - name: DD_ENV
              value: {{ .Values.deployment.tracing.datadog.env | default "none" | quote }}
            - name: DD_VERSION
              value: {{ .Values.deployment.tracing.datadog.version | default .Values.global.images.hydra.version | quote }}
            - name: DD_SERVICE
              value: {{ .Values.deployment.tracing.datadog.service | default "ory/hydra" | quote }}
            {{- if .Values.deployment.tracing.datadog.useHostIP }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- end }}
            {{- end }}
            {{- $issuer := include "hydra.config.urls.issuer" . -}}
            {{- if $issuer }}
            - name: URLS_SELF_ISSUER
              value: {{ $issuer | quote }}
            {{- end }}
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "hydra.secretname" . }}
                  key: dsn
            - name: SECRETS_SYSTEM
              valueFrom:
                secretKeyRef:
                  name: {{ include "hydra.secretname" . }}
                  key: secretsSystem
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ include "hydra.secretname" . }}
                  key: secretsCookie
            {{- with .Values.deployment.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
      {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
