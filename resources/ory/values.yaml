# Global or kyma related overrides
global:
  postgresql:
    postgresqlDatabase: db4hydra
    postgresqlUsername: hydra
  istio:
    gateway:
      name: kyma-gateway
      namespace: kyma-system
  ory:  
    oathkeeper: 
      maester:  
        mode: sidecar
    hydra:
      persistence:
        enabled: true
        gcloud:
          enabled: false
          saJson: ""
        postgresql:
          enabled: true
        # user: "someUser"
        # password: "postgres"
        secretName: "ory-hydra-credentials"
        secretKey: "dbPassword"
        # dbUrl: "mydb.mynamespace.svc.cluster.local:1234"
        # dbName: "db4hydra"
        # dbType: "postgres | mysql | cockroach"
headerRewrite:
  enabled: true
  certificateDataHeader: "Certificate-Data"
  workloadLabel: oathkeeper
hpa:
  oathkeeper:
    minReplicas: 1
    maxReplicas: 3
    cpu: 80
    metrics:
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 75
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80

# Overrides for the Hydra chart
hydra:
  ingress:
    public:
      enabled: false
    admin:
      enabled: false
  hydra:
    # The ORY Hydra configuration. For a full list of available settings, check:
    #   https://github.com/ory/hydra/blob/master/docs/config.yaml
    config:
      serve:
        public:
          port: 4444
        admin:
          port: 4445
        tls:
          allow_termination_from:
            - 10.0.0.0/8
            - 172.16.0.0/12
            - 192.168.0.0/16
      urls:
        self: {}
      dsn: memory
    # Required for DB autoMigrate: true
    autoMigrate: true
    dangerousForceHttp: true
    dangerousAllowInsecureRedirectUrls: false
    # existingSecret: secret
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi
  hydra-maester:
    globalAccess: true
# Overrides for the Oathkeeper chart
oathkeeper:
  kubectlJob:
    image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200310-5f52f407
  oathkeeper:
    config:
      authenticators:
        noop:
          enabled: true
        unauthorized:
          enabled: true
        anonymous:
          enabled: true
          config:
            subject: anonymous
        cookie_session:
          enabled: false
          config:
            # REQUIRED IF ENABLED - The session store to forward request method/path/headers to for validation
            check_session_url: https://session-store-host
            # Optionally set a list of cookie names to look for in incoming requests.
            # If unset, all requests are forwarded.
            # If set, only requests that have at least one of the set cookies will be forwarded, others will be passed to the next authenticator
            only:
            - sessionid
        oauth2_client_credentials:
          enabled: true
          config:
            # REQUIRED IF ENABLED - The OAuth 2.0 Token Endpoint that will be used to validate the client credentials.
            token_url: http://ory-hydra-public.kyma-system.svc.cluster.local:4444/oauth2/token
        oauth2_introspection:
          # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.
          enabled: true
          config:
            # REQUIRED IF ENABLED - The OAuth 2.0 Token Introspection endpoint.
            introspection_url: http://ory-hydra-admin.kyma-system.svc.cluster.local:4445/oauth2/introspect
            # Sets the strategy to be used to validate/match the token scope. Supports "hierarchic", "exact", "wildcard", "none". Defaults
            # to "none".
            scope_strategy: exact
        # Enable the "jwt" section to allow for jwt authenticator configured for local Dex Id Tokens.
        jwt:
          enabled: true
          config:
            jwks_urls:
            - http://dex-service.kyma-system.svc.cluster.local:5556/keys
            scope_strategy: wildcard
      authorizers:
        allow:
          enabled: true
        deny:
          enabled: true
      mutators:
        noop:
          enabled: true
        id_token:
          enabled: true
          config:
            # REQUIRED IF ENABLED - Sets the "iss" value of the ID Token.
            issuer_url: https://oathkeeper.{{ .Values.global.ingress.domainName }}/
            # REQUIRED IF ENABLED - Sets the URL where keys should be fetched from. Supports remote locations (http, https) as
            # well as local filesystem paths.
            jwks_url: "file:///etc/secrets/jwks.json"
            # jwks_url: https://fetch-keys/from/this/location.json
            # jwks_url: file:///from/this/absolute/location.json
            # jwks_url: file://../from/this/relative/location.json
            # Sets the time-to-live of the ID token. Defaults to one minute. Valid time units are: s (second), m (minute), h (hour).
            ttl: 60s
        header:
          enabled: true
          config:
            headers:
              X-Server: oathkeeper
        cookie:
          enabled: true
          config:
            cookies:
              processedWith: oathkeeper
        hydrator:
          enabled: true
          config:
            api:
              url: http://compass-director.compass-system.svc.cluster.local:3000/tenant-mapping
      serve:
        proxy:
          port: 4455
        api:
          port: 4456
  deployment:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
  oathkeeper-maester:
    deployment:
      annotations:
        sidecar.istio.io/inject: "false"
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 50m
          memory: 20Mi
      envs:
        - name: "mutatorsAvailable" # TODO: remove after version >v0.0.2-beta.1 is released
          value: "noop,id_token,header,cookie,hydrator"

# Persistance settings
postgresql:
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 1024Mi
      cpu: 750m
  master:
    podAnnotations:
      sidecar.istio.io/inject: "false"
  # existingSecret: secret

gcloud-sqlproxy:
  rbac:
    create: true
  extraArgs:
    log_debug_stdout: true
    term_timeout: 30s
  podAnnotations:
    sidecar.istio.io/inject: "false"
  existingSecret: "ory-hydra-credentials"
  existingSecretKey: "gcp-sa.json"
