apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-crd-job
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-job-role
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-job-role-binding
  labels:
    app: istio-init
    istio: init
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-job-role
subjects:
  - kind: ServiceAccount
    name: cert-manager-crd-job
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: cert-maganger-crd
  annotations:
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cert-manager-crd-job
      containers:
      - name: crd-applier
        image: "{{ .Values.global.hub }}/kubectl:{{ .Values.global.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        volumeMounts:
        - name: crd
          mountPath: /etc/crd
          readOnly: true
        command: ["kubectl",  "apply", "-f", "/etc/crd/crds.yaml"]
      volumes:
      - name: crd
        configMap:
          name: crds
      restartPolicy: OnFailure
