---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-hook
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-hook
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch", "patch"]
  resourceNames:
{{ .Values.kyma.namespaces2Label | toYaml | trim | indent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-hook
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-hook
subjects:
- kind: ServiceAccount
  name: cert-manager-hook
  namespace: cert-manager
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cert-manager-hook
  annotations:
    #helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: cert-manager-hook
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cert-manager-hook
      restartPolicy: Never
      containers:
      - name: cert-manager-hook
        image: {{ .Values.kyma.labelJob.image }}:{{ .Values.kyma.labelJob.tag }}
        terminationMessagePolicy: "FallbackToLogsOnError"
        command:
          - /bin/bash
          - -c
          - |
            set -e
            {{- range .Values.kyma.namespaces2Label }}
            echo "---> Setting label to {{ . }}"
            kubectl label namespace {{ . | quote }} "istio-injection=disabled" --overwrite
            {{- end }}
