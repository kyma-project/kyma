#
# mixer configuration
#
enabled: true
image: mixer

env:
  GODEBUG: gctrace=1
  # max procs should be ceil(cpu limit + 1)
  GOMAXPROCS: "6"

policy:
  # if policy is enabled, global.disablePolicyChecks has affect.
  enabled: false
  replicaCount: 1
  autoscaleEnabled: true
  autoscaleMin: 1
  autoscaleMax: 5
  cpu:
    targetAverageUtilization: 80

telemetry:
  enabled: true
  replicaCount: 1
  autoscaleEnabled: true
  autoscaleMin: 1
  autoscaleMax: 5
  cpu:
    targetAverageUtilization: 80
  sessionAffinityEnabled: false

  # mixer load shedding configuration.
  # When mixer detects that it is overloaded, it starts rejecting grpc requests.
  loadshedding:
    # disabled, logonly or enforce
    mode: enforce
    # based on measurements 100ms p50 translates to p99 of under 1s. This is ok for telemetry which is inherently async.
    latencyThreshold: 100ms
  resources:
    requests:
      cpu: 1000m
      memory: 1G
    limits:
      # It is best to do horizontal scaling of mixer using moderate cpu allocation.
      # We have experimentally found that these values work well.
      cpu: 4800m
      memory: 4G

podAnnotations: {}
nodeSelector: {}

adapters:
  kubernetesenv:
    enabled: true

  # stdio is a debug adapter in istio-telemetry, it is not recommended for production use.
  stdio:
    enabled: false
    outputAsJson: true
  prometheus:
    enabled: true
    metricsExpiryDuration: 10m
  # Setting this to false sets the useAdapterCRDs mixer startup argument to false
  useAdapterCRDs: true
