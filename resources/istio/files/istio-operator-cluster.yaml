apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  hub: eu.gcr.io/kyma-project/external/istio
  tag: {{ .Chart.Version }}
  profile: default
  components:
    egressGateways:
    - enabled: false
      k8s:
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 120Mi
      name: istio-egressgateway
    ingressGateways:
    - enabled: true
      k8s:
        hpaSpec:
          maxReplicas: 5
          minReplicas: 1
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          - resource:
              name: memory
              targetAverageUtilization: 80
            type: Resource
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        service:
          ports:
          - name: status-port
            port: 15021
            targetPort: 15021
          - name: http2
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443
          - name: tcp
            port: 31400
            targetPort: 31400
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 0
        securityContext:
{{- toYaml .Values.istio.securityContext | nindent 14 }}
      name: istio-ingressgateway
    pilot:
      enabled: true
      k8s:
        env:
        - name: PILOT_HTTP10
          value: "1"
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 512Mi
        securityContext:
{{- toYaml .Values.istio.securityContext | nindent 14 }}
  meshConfig:
    accessLogFile: /dev/stdout
    trustDomain: cluster.local
    defaultConfig:
      tracing:
        # sampling: 1 # use the istio default (which is 1) to support override by pilot env variable at runtime
        zipkin:
          address: "{{ .Values.global.tracing.zipkinAddress }}"
    enablePrometheusMerge: false
    enableTracing: {{ .Values.global.tracing.enabled }}
  values:
    gateways:
      istio-ingressgateway:
        name: istio-ingressgateway
        serviceAnnotations:
          dns.gardener.cloud/class: garden
          dns.gardener.cloud/dnsnames: "*.{{ .Values.global.domainName }}"
    global:
      imagePullPolicy: IfNotPresent
      priorityClassName: "{{ .Values.global.priorityClassName }}"
      proxy:
        holdApplicationUntilProxyStarts: true
        readinessFailureThreshold: 40
        readinessInitialDelaySeconds: 5
        readinessPeriodSeconds: 5
        resources:
          requests:
            cpu: 75m
            memory: 64Mi
          limits:
            cpu: 250m
            memory: 256Mi
      proxy_init:
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
    sidecarInjectorWebhook:
      enableNamespacesByDefault: true
      objectSelector:
        autoInject: true
        enabled: false
      rewriteAppHTTPProbe: true
