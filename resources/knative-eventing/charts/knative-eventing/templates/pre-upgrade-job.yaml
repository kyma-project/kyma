apiVersion: v1
kind: ServiceAccount
metadata:
  name: pre-upgrade-knative-eventing
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
  labels:
    job: pre-upgrade-knative-eventing
---
apiVersion: v1
data:
  pre-upgrade.sh: |
    #!/usr/bin/env bash
    set -eu
    echo "*** Pre upgrade job starts ***"

    kubectl delete svc,deploy -l app=publish-knative -n kyma-system --ignore-not-found
    kubectl delete svc,deploy -l app=subscription-controller-knative -n kyma-system --ignore-not-found
    kubectl delete svc event-bus-publish-knative-metrics-service -n kyma-system --ignore-not-found
  
    kubectl delete destinationrules.networking.istio.io event-bus-subscription-controller-knative-metrics-destination-r -n kyma-system --ignore-not-found
    kubectl delete servicemonitors.monitoring.coreos.com event-bus-subscription-controller-knative-metrics-service-monit -n kyma-system --ignore-not-found

    kubectl delete destinationrules.networking.istio.io event-bus-publish-knative-metrics-destination-rule -n kyma-system --ignore-not-found
    kubectl delete servicemonitors.monitoring.coreos.com event-bus-publish-knative-service-monitor -n kyma-system --ignore-not-found

    kubectl delete clusterrolebindings.rbac.authorization.k8s.io event-bus-publish-knative -n kyma-system --ignore-not-found
    kubectl delete clusterrolebindings.rbac.authorization.k8s.io event-bus-kyma-subscriptions-controller -n kyma-system --ignore-not-found
    
    kubectl delete clusterroles.rbac.authorization.k8s.io event-bus-publish-knative -n kyma-system --ignore-not-found
    kubectl delete clusterroles.rbac.authorization.k8s.io event-bus-kyma-subscriptions-controller -n kyma-system --ignore-not-found

    kubectl delete serviceaccounts event-bus-publish -n kyma-system --ignore-not-found
    kubectl delete serviceaccounts event-bus-subscription-controller-knative-sa -n kyma-system --ignore-not-found

    kubectl delete subscriptions.eventing.knative.dev --all -n kyma-system --ignore-not-found
    kubectl delete channels.eventing.knative.dev --all -n kyma-system --ignore-not-found
    
    kubectl delete crd \
      subscriptions.eventing.knative.dev \
      clusterchannelprovisioners.eventing.knative.dev \
      channels.eventing.knative.dev --ignore-not-found
    echo "*** Pre upgrade job executed ***"
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
  labels:
    job: pre-upgrade-knative-eventing
  name: pre-upgrade-knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pre-upgrade
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-4"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyma-admin
subjects:
- kind: ServiceAccount
  name: pre-upgrade-knative-eventing
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-3"
  labels:
    job: pre-upgrade-knative-eventing
  name: pre-upgrade-knative-eventing
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        job: pre-upgrade-knative-eventing
    spec:
      restartPolicy: OnFailure
      containers:
      - command: ["sh", "/scripts/pre-upgrade.sh"]
        image: docker.io/istio/kubectl:1.1.6
        imagePullPolicy: IfNotPresent
        name: pre-upgrade-knative-eventing
        volumeMounts:
        - mountPath: /scripts
          name: scripts
          readOnly: true
      serviceAccountName: pre-upgrade-knative-eventing
      volumes:
      - configMap:
          defaultMode: 420
          name: pre-upgrade-knative-eventing
        name: scripts
