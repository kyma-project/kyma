---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-pre-upgrade
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-6'
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    job: {{ .Release.Name }}-pre-upgrade
rules:
- apiGroups: ['apiextensions.k8s.io']
  resources: ['customresourcedefinitions']
  verbs: ['get', 'delete']
- apiGroups: ['']
  resources: ['secrets']
  verbs: ['get', 'delete']
- apiGroups: ['admissionregistration.k8s.io']
  resources: ['mutatingwebhookconfigurations']
  verbs: ['get', 'delete']
- apiGroups: ['apps', 'extensions']
  resources: ['deployments']
  verbs: ['get', 'delete']
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-pre-upgrade
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: '-5'
  labels:
      job: {{ .Release.Name }}-pre-upgrade
---
apiVersion: v1
data:
  pre-upgrade.sh: |
    #!/usr/bin/env bash
    set -eu

    echo "*** Pre upgrade job starts ***"

    echo "+ Deleting outdated CRDs"
    # CRDs previously created by the pre-upgrade hook, now part of the eventing deployment manifests.
    # *DELETE THE LINES BELOW BEFORE THE NEXT KYMA RELEASE** (https://github.com/kyma-project/kyma/issues/7387)
    kubectl delete --ignore-not-found --wait \
      crd/parallels.messaging.knative.dev \
      crd/subscriptions.messaging.knative.dev

    # MutatingWebhookConfiguration previously created by the pre-upgrade hook, now part of the eventing deployment manifests.
    # *DELETE THE LINES BELOW BEFORE THE NEXT KYMA RELEASE** (https://github.com/kyma-project/kyma/issues/7387)
    echo "+ Deleting outdated MutatingWebhookConfigurations"
    kubectl delete --ignore-not-found --wait \
      mutatingwebhookconfiguration/webhook.eventing.knative.dev

    # Auto-generated Secret that gets re-created by Knative Eventing
    # Avoids update conflict: "Secret with the name "eventing-webhook-certs" already exists in the cluster and wasn't defined in the previous release."
    echo "+ Deleting auto-generated Secrets"
    kubectl -n knative-eventing delete --ignore-not-found --wait \
      secret/eventing-webhook-certs

    echo "*** Pre upgrade job completed ***"
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
  labels:
    job: {{ .Release.Name }}-pre-upgrade
  name: {{ .Release.Name }}-pre-upgrade
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-pre-upgrade
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-4"
  labels:
    job: {{ .Release.Name }}-pre-upgrade
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-pre-upgrade
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-pre-upgrade
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-3"
  labels:
    job: {{ .Release.Name }}-pre-upgrade
  name: {{ .Release.Name }}-pre-upgrade
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        job: {{ .Release.Name }}-pre-upgrade
    spec:
        restartPolicy: OnFailure
        containers:
          - name: {{ .Release.Name }}-pre-upgrade
            command:
            - /bin/sh
            - -c
            args:
            - |
                cp /scripts/pre-upgrade.sh /tmp
                chmod +x /tmp/pre-upgrade.sh
                /tmp/pre-upgrade.sh
            image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200310-5f52f407
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - mountPath: /scripts
                name: scripts
                readOnly: true
        serviceAccountName: {{ .Release.Name }}-pre-upgrade
        volumes:
          - configMap:
              defaultMode: 420
              name: {{ .Release.Name }}-pre-upgrade
            name: scripts
