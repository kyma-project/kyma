---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: knative-eventing-upgrade
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: knative-eventing-upgrade
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: knative-eventing-upgrade
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: knative-eventing-upgrade
subjects:
- kind: ServiceAccount
  name: knative-eventing-upgrade
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: knative-eventing-pre-upgrade
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  knative-eventing-pre-upgrade.sh: |
    #/usr/bin/env bash
    set -u
    kubectl get cm -n knative-eventing default-channel-webhook -oyaml --export  | sed 's/name: default-channel-webhook/name: default-channel-webhook-backup/g' | kubectl -n knative-eventing apply -f -
---
apiVersion: batch/v1
kind: Job
metadata:
  name: knative-eventing-pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
        - name: default-webhook-creation
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "kubectl get cm -n knative-eventing default-channel-webhook -oyaml --export  | sed 's/name: default-channel-webhook/name: default-channel-webhook-backup/g' | kubectl -n knative-eventing apply -f -"
      serviceAccountName: knative-eventing-pre-upgrade
---
apiVersion: batch/v1
kind: Job
metadata:
  name: knative-eventing-post-upgrade
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
        - name: knative-eventing-post-upgrade
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "kubectl get cm -n knative-eventing default-channel-webhook-backup -oyaml --export  | sed 's/name: default-channel-webhook-backup/name: default-channel-webhook/g' | kubectl -n knative-eventing apply -f -; kubectl delete po -n knative-eventing -l app=webhook"
      serviceAccountName: knative-eventing-pre-upgrade