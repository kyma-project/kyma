aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: addressable-resolver
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: service-addressable-resolver
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: serving-addressable-resolver
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: channel-addressable-resolver
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - channels
      - channels/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: broker-addressable-resolver
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
      - brokers/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: messaging-addressable-resolver
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - sequences
      - sequences/status
      - parallels
      - parallels/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-broker-filter
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - triggers
      - triggers/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-broker-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-config-reader
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch

---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/channelable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: channelable-manipulator
rules: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: knative-eventing-namespaced-admin
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: knative-messaging-namespaced-admin
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: knative-eventing-sources-namespaced-admin
rules:
  - apiGroups:
      - sources.eventing.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: knative-eventing-namespaced-edit
rules:
  - apiGroups:
      - eventing.knative.dev
      - messaging.knative.dev
      - sources.eventing.knative.dev
    resources:
      - '*'
    verbs:
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: knative-eventing-namespaced-view
rules:
  - apiGroups:
      - eventing.knative.dev
      - messaging.knative.dev
      - sources.eventing.knative.dev
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: knative-eventing-controller
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - secrets
      - configmaps
      - services
      - events
      - serviceaccounts
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
      - brokers/status
      - triggers
      - triggers/status
      - eventtypes
      - eventtypes/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers/finalizers
      - triggers/finalizers
    verbs:
      - update
  - apiGroups:
      - messaging.knative.dev
    resources:
      - sequences
      - sequences/status
      - channels
      - channels/status
      - parallels
      - parallels/status
      - subscriptions
      - subscriptions/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - sequences/finalizers
      - parallels/finalizers
      - channels/finalizers
    verbs:
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-webhook
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-source-controller
  namespace: knative-eventing

---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/source: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: source-observer
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-sources-source-observer
rules:
  - apiGroups:
      - sources.eventing.knative.dev
    resources:
      - containersources
      - cronjobsources
      - apiserversources
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: knative-eventing-source-controller
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - sources.eventing.knative.dev
    resources:
      - cronjobsources
      - cronjobsources/status
      - cronjobsources/finalizers
      - containersources
      - containersources/status
      - containersources/finalizers
      - apiserversources
      - apiserversources/status
      - apiserversources/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - serving.knative.dev
    resources:
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - eventtypes
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: knative-eventing-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
      - brokers/status
      - channels
      - channels/status
      - subscriptions
      - subscriptions/status
      - triggers
      - triggers/status
      - eventtypes
      - eventtypes/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-controller
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller-source-observer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: source-observer
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller-manipulator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: channelable-manipulator
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-webhook
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-source-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-source-controller
subjects:
  - kind: ServiceAccount
    name: eventing-source-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-source-controller-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
subjects:
  - kind: ServiceAccount
    name: eventing-source-controller
    namespace: knative-eventing

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.apiserver.resource.add" },
        { "type": "dev.knative.apiserver.resource.delete" },
        { "type": "dev.knative.apiserver.resource.update" },
        { "type": "dev.knative.apiserver.ref.add" },
        { "type": "dev.knative.apiserver.ref.delete" },
        { "type": "dev.knative.apiserver.ref.update" }
      ]
  creationTimestamp: null
  labels:
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: "v0.10.0"
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: apiserversources.sources.eventing.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: sources.eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: ApiServerSource
    plural: apiserversources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            mode:
              description: 'Mode controls the content of the event payload. One of:
                ''Ref'' (only references of resources), ''Resource'' (full resource).'
              type: string
            resources:
              items:
                properties:
                  apiVersion:
                    description: API version of the objects to watch.
                    type: string
                  controller:
                    description: 'If true, emits the managing controller ref. Only
                      supported for mode=Ref. More info: https://kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/'
                    type: boolean
                  controllerSelector:
                    description: Controller selector restricting the list of objects
                      to watch by a controlling owner reference of the specified kind.
                    properties:
                      apiVersion:
                        description: API version of the controlling owner reference.
                        type: string
                      kind:
                        description: Kind of the controlling owner reference.
                        type: string
                    type: object
                  kind:
                    description: Kind of the objects to watch.
                    type: string
                  labelSelector:
                    description: 'Label selector restricting this  list of objects
                      to watch by their labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/'
                    type: object
              type: array
            serviceAccountName:
              description: 'name of the ServiceAccount to use to run the receive adapter.
                More info: https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/.'
              type: string
            sink:
              anyOf:
                - description: the destination that should receive events.
                  properties:
                    ref:
                      description: a reference to a Kubernetes object from which to
                        retrieve the target URI.
                      properties:
                        apiVersion:
                          minLength: 1
                          type: string
                        kind:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: the target URI. If ref is provided, this must be
                        relative URI reference.
                      type: string
                  type: object
                - description: 'DEPRECATED: a reference to a Kubernetes object from
                  which to retrieve the target URI.'
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                  type: object
          required:
            - resources
            - sink
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
    knative.dev/crd-install: "true"
  name: brokers.eventing.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - JSONPath: .status.address.url
      name: URL
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: Broker
    plural: brokers
    singular: broker
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplateSpec:
              properties:
                apiVersion:
                  minLength: 1
                  type: string
                kind:
                  minLength: 1
                  type: string
                spec:
                  type: object
              required:
                - apiVersion
                - kind
              type: object
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
  name: channels.messaging.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - JSONPath: .status.address.url
      name: URL
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: messaging.knative.dev
  names:
    categories:
      - all
      - knative
      - messaging
      - channel
    kind: Channel
    plural: channels
    shortNames:
      - ch
    singular: channel
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplate:
              properties:
                apiVersion:
                  minLength: 1
                  type: string
                kind:
                  minLength: 1
                  type: string
                spec:
                  type: object
              required:
                - apiVersion
                - kind
              type: object
            subscribable:
              properties:
                subscribers:
                  items:
                    properties:
                      ref:
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            minLength: 1
                            type: string
                          namespace:
                            minLength: 1
                            type: string
                          uid:
                            minLength: 1
                            type: string
                        required:
                          - namespace
                          - name
                          - uid
                        type: object
                      replyURI:
                        minLength: 1
                        type: string
                      subscriberURI:
                        minLength: 1
                        type: string
                      uid:
                        minLength: 1
                        type: string
                    required:
                      - uid
                  type: array
              type: object
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: "v0.10.0"
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: containersources.sources.eventing.knative.dev
spec:
  group: sources.eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: ContainerSource
    plural: containersources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            args:
              items:
                type: string
              type: array
            env:
              items:
                type: object
              type: array
            image:
              minLength: 1
              type: string
            serviceAccountName:
              type: string
            sink:
              anyOf:
                - description: the destination that should receive events.
                  properties:
                    ref:
                      description: a reference to a Kubernetes object from which to
                        retrieve the target URI.
                      properties:
                        apiVersion:
                          minLength: 1
                          type: string
                        kind:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: the target URI. If ref is provided, this must be
                        relative URI reference.
                      type: string
                  type: object
                - description: 'DEPRECATED: a reference to a Kubernetes object from
                  which to retrieve the target URI.'
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                  type: object
            template:
              type: object
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.cronjob.event" }
      ]
  labels:
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: "v0.10.0"
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: cronjobsources.sources.eventing.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: sources.eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: CronJobSource
    plural: cronjobsources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            data:
              type: string
            resources:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
                requests:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
              type: object
            schedule:
              type: string
            serviceAccountName:
              type: string
            sink:
              anyOf:
                - description: the destination that should receive events.
                  properties:
                    ref:
                      description: a reference to a Kubernetes object from which to
                        retrieve the target URI.
                      properties:
                        apiVersion:
                          minLength: 1
                          type: string
                        kind:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: the target URI. If ref is provided, this must be
                        relative URI reference.
                      type: string
                  type: object
                - description: 'DEPRECATED: a reference to a Kubernetes object from
                  which to retrieve the target URI.'
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                  type: object
          required:
            - schedule
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    knative.dev/crd-install: "true"
  name: eventtypes.eventing.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .spec.type
      name: Type
      type: string
    - JSONPath: .spec.source
      name: Source
      type: string
    - JSONPath: .spec.schema
      name: Schema
      type: string
    - JSONPath: .spec.broker
      name: Broker
      type: string
    - JSONPath: .spec.description
      name: Description
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: EventType
    plural: eventtypes
    singular: eventtype
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            broker:
              minLength: 1
              type: string
            description:
              type: string
            schema:
              type: string
            source:
              minLength: 1
              type: string
            type:
              minLength: 1
              type: string
          required:
            - type
            - source
            - broker
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: "v0.10.0"
    knative.dev/crd-install: "true"
  name: sequences.messaging.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - JSONPath: .status.address.url
      name: URL
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: messaging.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
      - messaging
    kind: Sequence
    plural: sequences
    singular: sequence
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplate:
              description: specifies which Channel to use. If left unspecified, it
                is set to the default Channel for the namespace (or cluster, in case
                there are no defaults for the namespace).
              properties:
                apiVersion:
                  minLength: 1
                  type: string
                kind:
                  minLength: 1
                  type: string
                spec:
                  type: object
              required:
                - apiVersion
                - kind
              type: object
            reply:
              anyOf:
                - properties:
                    uri:
                      description: the target URI or, if ref is provided, a relative
                        URI reference that will be combined with ref to produce a target
                        URI.
                      minLength: 1
                      type: string
                  type: object
                - description: a reference to a Kubernetes object from which to retrieve
                    the target URI.
                  properties:
                    ref:
                      properties:
                        apiVersion:
                          minLength: 1
                          type: string
                        kind:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                  type: object
                - description: a reference to a Kubernetes object from which to retrieve
                    the target URI.
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  type: object
              description: a reference to where the result of the last subscriber
                gets sent to.
            steps:
              description: the list of Destinations (processors / functions) that
                will be called in the order provided.
              items:
                description: a processor / function in the Sequence.
                properties:
                  ref:
                    description: a reference to a Kubernetes object from which to
                      retrieve the target URI.
                    properties:
                      apiVersion:
                        minLength: 1
                        type: string
                      kind:
                        minLength: 1
                        type: string
                      name:
                        minLength: 1
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  uri:
                    description: the target URI or, if ref is provided, a relative
                      URI reference that will be combined with ref to produce a target
                      URI.
                    type: string
                type: object
              type: array
          required:
            - steps
            - channelTemplate
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    knative.dev/crd-install: "true"
  name: triggers.eventing.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - JSONPath: .spec.broker
      name: Broker
      type: string
    - JSONPath: .status.subscriberURI
      name: Subscriber_URI
      type: string
    - JSONPath: .metadata.creationTimestamp
      name: Age
      type: date
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: Trigger
    plural: triggers
    singular: trigger
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            broker:
              type: string
            filter:
              properties:
                attributes:
                  additionalProperties:
                    type: string
                  description: Map of CloudEvents attributes used for filtering events.
                  type: object
                sourceAndType:
                  properties:
                    source:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
            subscriber:
              description: the destination that should receive events.
              properties:
                ref:
                  description: a reference to a Kubernetes object from which to retrieve
                    the target URI.
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                  type: object
                uri:
                  description: the target URI or, if ref is provided, a relative URI
                    reference that will be combined with ref to produce a target URI.
                  type: string
              type: object
          required:
            - subscriber
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: v1
data:
  default-ch-config: |
    clusterDefault:
      apiVersion: {{ .Values.channel.default.apiVersion }}
      kind: {{ .Values.channel.default.kind }}
kind: ConfigMap
metadata:
  name: default-ch-webhook
  namespace: knative-eventing

---
apiVersion: v1
kind: Service
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
    role: eventing-webhook
  name: eventing-webhook
  namespace: knative-eventing
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    role: eventing-webhook

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: eventing-controller
        eventing.knative.dev/release: "v0.10.0"
        kyma-project.io/dashboard: event-mesh
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: BROKER_INGRESS_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/ingress@sha256:09e0be131cf80431fb2fdaf06a865cc1f49d6aecf527878ced25af4c70cb4d3c
            - name: BROKER_INGRESS_SERVICE_ACCOUNT
              value: eventing-broker-ingress
            - name: BROKER_FILTER_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/filter@sha256:94043bca23a08d26ffd6bdf7111464237d22413023c5ba4338b931a5eab242bd
            - name: BROKER_FILTER_SERVICE_ACCOUNT
              value: eventing-broker-filter
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/controller@sha256:82fdc37bd5fc99d756a7a5e21a14fcaff7ad0a1f09ef2c33197bca9af9b329ba
          name: eventing-controller
          ports:
            - containerPort: 9090
              name: metrics
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
      serviceAccountName: eventing-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: sources-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sources-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: sources-controller
        eventing.knative.dev/release: "v0.10.0"
        kyma-project.io/dashboard: event-mesh
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/sources
            - name: CRONJOB_RA_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/cronjob_receive_adapter@sha256:bdf30b32d57e1536fca5e436ce9c074827afd5f6f5eceed4cc0a8ca97096cefa
            - name: APISERVER_RA_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:67300996636df61f7271cfaed335b57daaea9496acebb6f8db68b9f81931b2db
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/sources_controller@sha256:27f0b025ea16907db2b52cb220894b91cac627c6fbff914fce90ae4d987f1b0b
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
      serviceAccountName: eventing-source-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    eventing.knative.dev/release: "v0.10.0"
  name: eventing-webhook
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-webhook
      role: eventing-webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: eventing-webhook
        role: eventing-webhook
        kyma-project.io/dashboard: event-mesh
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: WEBHOOK_NAME
              value: eventing-webhook
            - name: REG_DELAY_TIME
              value: "10"
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/webhook@sha256:fb8c72dc3c2897193a04459e2e05fc56f47228fe37981d7b653e87f1725a54bb
          name: eventing-webhook
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: eventing-webhook
      volumes:
        - configMap:
            name: config-logging
          name: config-logging

---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-eventing

---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. If non-empty, it enables queue proxy to send request metrics.
    # Currently supported values: prometheus, stackdriver.
    metrics.request-metrics-backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_broker", "knative_trigger", and "knative_source" resource types.
    # Setting this flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  name: config-observability
  namespace: knative-eventing

---
apiVersion: v1
data:
  enable: {{ quote .Values.tracing.enable }}
  zipkin-endpoint: {{ quote .Values.tracing.collectorUrl }}
  sample-rate: {{ quote .Values.tracing.sampleRate }}
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # This may be "zipkin" or "stackdriver", the default is "none"
    backend: "none"

    # URL to zipkin collector where traces are sent.
    # This must be specified when backend is "zipkin"
    zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

    # The GCP project into which stackdriver metrics will be written
    # when backend is "stackdriver".  If unspecified, the project-id
    # is read from GCP metadata when running on GCP.
    stackdriver-project-id: "my-project"

    # Enable zipkin debug mode. This allows all spans to be sent to the server
    # bypassing sampling.
    debug: "false"

    # Percentage (0-1) of requests to trace
    sample-rate: "0.1"
kind: ConfigMap
metadata:
  name: config-tracing
  namespace: knative-eventing

---
