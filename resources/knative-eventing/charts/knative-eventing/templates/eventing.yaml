---
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/addressable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addressable-resolver
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
  name: serving-addressable-resolver
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - routes
  - routes/status
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
  name: channel-addressable-resolver
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - channels
  - channels/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
  name: broker-addressable-resolver
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - brokers
  - brokers/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-broker-filter
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - triggers
  - triggers/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-controller
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - configmaps
  - services
  - events
  - serviceaccounts
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - eventing.knative.dev
  resources:
  - brokers
  - brokers/status
  - channels
  - channels/status
  - clusterchannelprovisioners
  - clusterchannelprovisioners/status
  - subscriptions
  - subscriptions/status
  - triggers
  - triggers/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-webhook
  namespace: knative-eventing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-webhook
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - eventing.knative.dev
  resources:
  - brokers
  - brokers/status
  - channels
  - channels/status
  - clusterchannelprovisioners
  - clusterchannelprovisioners/status
  - subscriptions
  - subscriptions/status
  - triggers
  - triggers/status
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-controller
subjects:
- kind: ServiceAccount
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
subjects:
- kind: ServiceAccount
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-webhook
subjects:
- kind: ServiceAccount
  name: eventing-webhook
  namespace: knative-eventing

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: brokers.eventing.knative.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .status.address.hostname
    name: Hostname
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Broker
    plural: brokers
    singular: broker
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplate:
              properties:
                arguments:
                  additionalProperties: true
                  type: object
                provisioner:
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
              required:
              - provisioner
              type: object
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: channels.eventing.knative.dev
  annotations:	
    "helm.sh/hook": "crd-install"
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Channel
    plural: channels
    shortNames:
    - chan
    singular: channel
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            arguments:
              additionalProperties: true
              type: object
            provisioner:
              properties:
                apiVersion:
                  minLength: 1
                  type: string
                kind:
                  minLength: 1
                  type: string
                name:
                  minLength: 1
                  type: string
              required:
              - apiVersion
              - kind
              - name
              type: object
            subscribable:
              properties:
                subscribers:
                  items:
                    properties:
                      ref:
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            minLength: 1
                            type: string
                          namespace:
                            minLength: 1
                            type: string
                          uid:
                            minLength: 1
                            type: string
                        required:
                        - namespace
                        - name
                        - uid
                        type: object
                      replyURI:
                        minLength: 1
                        type: string
                      subscriberURI:
                        minLength: 1
                        type: string
                    required:
                    - ref
                  type: array
              type: object
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: clusterchannelprovisioners.eventing.knative.dev
  annotations:	
    "helm.sh/hook": "crd-install"
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - provisioner
    kind: ClusterChannelProvisioner
    plural: clusterchannelprovisioners
    shortNames:
    - ccp
    singular: clusterchannelprovisioner
  scope: Cluster
  subresources:
    status: {}
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: subscriptions.eventing.knative.dev
  annotations:	
    "helm.sh/hook": "crd-install"
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Subscription
    plural: subscriptions
    shortNames:
    - sub
    singular: subscription
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channel:
              properties:
                apiVersion:
                  minLength: 1
                  type: string
                kind:
                  pattern: ^Channel$
                  type: string
                name:
                  minLength: 1
                  type: string
              required:
              - apiVersion
              - kind
              - name
              type: object
            reply:
              properties:
                channel:
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      pattern: ^Channel$
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
              type: object
            subscriber:
              properties:
                dnsName:
                  minLength: 1
                  type: string
                ref:
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                uri:
                  minLength: 1
                  type: string
              type: object
          required:
          - channel
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: triggers.eventing.knative.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  - JSONPath: .spec.broker
    name: Broker
    type: string
  - JSONPath: .status.subscriberURI
    name: Subscriber_URI
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Trigger
    plural: triggers
    singular: trigger
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            broker:
              type: string
            filter:
              properties:
                sourceAndType:
                  properties:
                    source:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
            subscriber:
              properties:
                dnsName:
                  minLength: 1
                  type: string
                ref:
                  properties:
                    apiVersion:
                      minLength: 1
                      type: string
                    kind:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                uri:
                  minLength: 1
                  type: string
              type: object
          required:
          - subscriber
  version: v1alpha1

---
apiVersion: v1
data:
  default-channel-config: ""
kind: ConfigMap
metadata:
  name: default-channel-webhook
  namespace: knative-eventing

---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
  name: webhook
  namespace: knative-eventing
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    role: webhook

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        status.sidecar.istio.io/port: "9090"
      labels:
        app: eventing-controller
    spec:
      containers:
      - args:
        - -logtostderr
        - -stderrthreshold
        - INFO
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: BROKER_INGRESS_IMAGE
          value: gcr.io/knative-releases/github.com/knative/eventing/cmd/broker/ingress:v0.5.0
        - name: BROKER_INGRESS_SERVICE_ACCOUNT
          value: default
        - name: BROKER_FILTER_IMAGE
          value: gcr.io/knative-releases/github.com/knative/eventing/cmd/broker/filter:v0.5.0
        - name: BROKER_FILTER_SERVICE_ACCOUNT
          value: eventing-broker-filter
        image: gcr.io/knative-releases/github.com/knative/eventing/cmd/controller:v0.5.0
        name: eventing-controller
        ports:
        - containerPort: 9090
          name: metrics
        resources:
          limits:
            memory: 1000Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: webhook
        role: webhook
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: WEBHOOK_NAME
          value: webhook
        image: gcr.io/knative-releases/github.com/knative/eventing/cmd/webhook:v0.5.0
        name: webhook
        resources:
          limits:
            memory: 1000Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-webhook
      volumes:
      - configMap:
          name: config-logging
        name: config-logging

---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-eventing

---
