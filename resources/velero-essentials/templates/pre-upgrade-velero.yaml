---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "velero.fullname" . }}-pre-upgrade
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "velero.fullname" . }}-pre-upgrade
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ template "velero.fullname" . }}-pre-upgrade
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "velero.fullname" . }}-pre-upgrade
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  velero-secret.yaml.tpl: |
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: velero-credentials-overrides
      namespace: kyma-installer
      labels:
        kyma-project.io/installation: ""
        installer: overrides
    type: Opaque
    data:
      configuration.provider: "__CLOUD_PROVIDER__"
      configuration.volumeSnapshotLocation.name: "__CLOUD_PROVIDER__"
      configuration.volumeSnapshotLocation.bucket: "__BSL_BUCKET__"
      configuration.volumeSnapshotLocation.provider: "__CLOUD_PROVIDER__"
      configuration.volumeSnapshotLocation.config.apiTimeout: "__VSL_CONFIG_APITIMEOUT__"
      configuration.volumeSnapshotLocation.config.resourceGroup: "__VSL_CONFIG_RESOURCEGROUP__"
      configuration.backupStorageLocation.provider: "__CLOUD_PROVIDER__"
      configuration.backupStorageLocation.name: "__CLOUD_PROVIDER__"
      configuration.backupStorageLocation.bucket: "__BSL_BUCKET__"
      configuration.backupStorageLocation.config.resourceGroup: "__BSL_CONFIG_RESOURCEGROUP__"
      configuration.backupStorageLocation.config.storageAccount: "__BSL_CONFIG_STORAGEACCOUNT__"
      credentials.secretContents.AZURE_SUBSCRIPTION_ID: "__AZURE_SUBSCRIPTION_ID__"
      credentials.secretContents.AZURE_TENANT_ID: "__AZURE_TENANT_ID__"
      credentials.secretContents.AZURE_RESOURCE_GROUP: "__AZURE_RESOURCE_GROUP__"
      credentials.secretContents.AZURE_CLIENT_ID: "__AZURE_CLIENT_ID__"
      credentials.secretContents.AZURE_CLIENT_SECRET: "__AZURE_CLIENT_SECRET__"
      credentials.secretContents.cloud: "__CLOUD_CREDENTIALS_FILE_CONTENT_BASE64__"
  upgrade-ark-to-velero.sh: |
    #/usr/bin/env bash
    set -u
    kubectl get secret -n kyma-installer ark-credentials-overrides
    old_ark_secret_exists=$?
    if [ "${old_ark_secret_exists}" != 0 ]; then
      echo "Ark is not installed so nothing to upgrade!"
      exit 0
    fi
    BUCKET="$(kubectl get secret -n kyma-installer ark-credentials-overrides -o go-template --template='{{`{{ index .data "backupStorageLocation.objectStorage.bucket" }}`}}')"
    PROVIDER="$(kubectl get secret -n kyma-installer ark-credentials-overrides -ogo-template --template='{{`{{ index .data "backupStorageLocation.provider" }}`}}')"
    CREDENTIALS="$(kubectl get secret -n kyma-installer ark-credentials-overrides -ogo-template --template='{{`{{ index .data "credentials.secretContents.cloud" }}`}}')"
    ### Replace the values
    cat /scripts/velero-secret.yaml.tpl | sed -e "s/__CLOUD_PROVIDER__/$PROVIDER/g" | sed -e "s/__BSL_BUCKET__/$BUCKET/g" | sed -e "s/__CLOUD_CREDENTIALS_FILE_CONTENT_BASE64__/$CREDENTIALS/g" | sed -e "s/__.*__//g" | kubectl apply -f-
    ### Delete ark resources
    kubectl delete crd backups.ark.heptio.com backupstoragelocations.ark.heptio.com deletebackuprequests.ark.heptio.com downloadrequests.ark.heptio.com podvolumebackups.ark.heptio.com podvolumerestores.ark.heptio.com resticrepositories.ark.heptio.com restores.ark.heptio.com schedules.ark.heptio.com volumesnapshotlocations.ark.heptio.com --ignore-not-found
    kubectl delete -n heptio-ark deploy,svc,rs --all --ignore-not-found
    kubectl delete ns heptio-ark --ignore-not-found
    kubectl delete -n kyma-installer secret ark-credentials-overrides --ignore-not-found
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "velero.fullname" . }}-pre-upgrade
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: {{ include "velero.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "velero.chart" . }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      containers:
        - name: create-ark-config
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "chmod a+x /scripts/upgrade-ark-to-velero.sh; sh /scripts/upgrade-ark-to-velero.sh"
          volumeMounts:
            - name: {{ template "velero.fullname" . }}-pre-upgrade
              mountPath: /scripts
      volumes:
        - name: {{ template "velero.fullname" . }}-pre-upgrade
          configMap:
            name: {{ template "velero.fullname" . }}-pre-upgrade
      serviceAccountName: {{ template "velero.fullname" . }}-pre-upgrade