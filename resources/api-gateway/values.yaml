replicaCount: 1

image:
  pullPolicy: IfNotPresent

deployment:
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
      - ALL
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault

config:
  injectIstioSidecar: false
  reconciliation:
    # In seconds
    defaultPeriod: 3600
    errorPeriod: 60
  oathkeeper:
    service: ory-oathkeeper-proxy.kyma-system.svc.cluster.local
    port: 4455
  serviceBlockList:
    istio-system:
      - istio-citadel
      - istio-galley
      - istio-ingressgateway
      - istio-pilot
      - istio-policy
      - istio-sidecar-injector
      - istio-telemetry
    kyma-system:
      - apiserver-proxy
      - apiserver-proxy-ssl
  domainAllowList:
  enableDomainAllowList: false
  defaultDomain:
  cors: # values listed below will be used to set corsPolicy in created VirtualServices (https://istio.io/docs/reference/config/networking/v1alpha3/virtual-service/#CorsPolicy)
    allowOrigins:
      regex:
        - ".*"
    allowMethods: # no possibility to use "*"
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "PATCH"
    allowHeaders: # "*" is not yet supported by all browsers
      - "Authorization"
      - "Content-Type"
      - "*"
  generatedObjects:
    # Comma-separated list of key=value pairs used to label generated objects
    labels:

  # Node labels for pod assignment.
  nodeSelector: {}
  # If you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #   foo: bar

  # Configure node tolerations.
  tolerations: []

  # Port configuration
  ports:
    metrics: 8080
    healthProbe: 8081

# Configure node affinity
affinity: {}

# Configure priorityClassName
priorityClassName: "api-gateway-priority-class"

tests:
  enabled: true
  labels:
    integration: true
    after-upgrade: true
  env:
    testUser: "admin-user"
    timeout: 120
    delay: 10
    jwtTimeout: "30s"
    jwtMaxAttempts: 5
    jwtDelay: 5
    gatewayName: "kyma-gateway"
    gatewayNamespace: "kyma-system"
  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534

webhook:
  crdName: "apirules.gateway.kyma-project.io"

global:
  domainName: kyma.example.com
  containerRegistry:
    path: europe-docker.pkg.dev/kyma-project
  images:
    api_gateway_controller:
      name: "api-gateway-controller"
      version: "1.8.0"
      directory: "prod"
    api_gateway_webhook_certificates:
      name: "api-gateway-webhook-certificates"
      version: "1.8.0"
      directory: "prod"
