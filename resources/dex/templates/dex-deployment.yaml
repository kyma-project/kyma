---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  namespace:  {{ .Release.Namespace }}
  labels:
    app: dex
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: dex
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.deploymentStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: dex
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/dex-config-map.yaml") . | sha256sum }}
    spec:
      serviceAccountName: dex-account
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      containers:
      - image: {{ .Values.imageRegistry }}/dex:{{ .Chart.AppVersion }}
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        resources:
{{ toYaml .Values.resources | indent 10 }}
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        ports:
        - name: http
          containerPort: {{ .Values.containerPort }}
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        {{- with .Values.volumeMountsExtra }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.containerPort }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end -}}
      {{ if .Values.dex.useStaticConnector }}
      initContainers:
      - name: dex-users-configurator
        image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.dex_static_user_configurer.dir }}dex-static-user-configurer:{{ .Values.global.dex_static_user_configurer.version }}
        volumeMounts:
        - name: config
          mountPath: /config/dst
        - name: config-tpl
          mountPath: /config/src
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
      volumes:
      - name: config-tpl
        configMap:
          name: dex-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: config
        emptyDir: {}
      {{ else }}
      volumes:
      - name: config
        configMap:
          name: dex-config
          items:
            - key: config.yaml
              path: config.yaml
      {{ end }}
      {{- with .Values.volumesExtra }}
      {{- tpl . $ | nindent 6 }}
      {{- end }}
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}
