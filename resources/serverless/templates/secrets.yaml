{{- $username := include "tplValue" ( dict "value" .Values.dockerRegistry.username "context" . ) -}}
{{- $password := include "tplValue" ( dict "value" .Values.dockerRegistry.password "context" . ) -}}
{{- $internalServerAddress := include "tplValue" ( dict "value" .Values.dockerRegistry.internalServerAddress "context" . ) -}}
{{- $serverAddress := include "tplValue" ( dict "value" .Values.dockerRegistry.serverAddress "context" . ) -}}
{{- $encodedUsernamePassword := printf "%s:%s" $username $password | b64enc }}
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
data:
{{- if .Values.dockerRegistry.enableInternal }}
  .dockerconfigjson: "{{- (printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}, \"%s\": {\"auth\": \"%s\"}}}" $internalServerAddress $encodedUsernamePassword $serverAddress $encodedUsernamePassword) | b64enc }}"
{{- else }}
  .dockerconfigjson: "{{- (printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}}}" $serverAddress $encodedUsernamePassword) | b64enc }}"
{{- end }}
metadata:
  name: {{ template "fullname" . }}-image-pull-secret
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: credentials
    serverless.kyma-project.io/credentials: image-pull-secret
---
{{- if .Values.dockerRegistry.enableInternal }}
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: {{ template "fullname" . }}-registry-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: credentials
    serverless.kyma-project.io/credentials: registry-credentials
stringData:
  username: "{{ $username }}"
  password: "{{ $password }}"
{{- end }}
