{{- if .Values.tests.enabled }}
{{- if .Capabilities.APIVersions.Has "testing.kyma-project.io/v1alpha1" }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ include "fullname" . }}-long
  labels:
    app.kubernetes.io/name: {{ include "tests.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "chart" . }}
spec:
  disableConcurrency: {{ .Values.tests.disableConcurrency }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName:  {{ include "tests.fullname" . }}
      restartPolicy: {{ .Values.tests.restartPolicy }}
      initContainers:
        - name: {{ include "tests.name" . }}-init
          image: "{{ .Values.tests.long.image.repository  }}:{{ .Values.tests.long.image.tag }}"
          imagePullPolicy: {{ .Values.tests.long.pullPolicy }}
          command:
            - "/bin/bash"
          args:
            - "-c"
            - |
              # create namespace and function for long running tests
              (
              cat <<EOF | kubectl apply -n {{ .Values.tests.long.namespace }} -f -
              ---
              apiVersion: v1
              kind: Namespace
              metadata:
                name: {{ .Values.tests.long.namespace }}
              ---
              apiVersion: serverless.kyma-project.io/v1alpha1
              kind: Function
              metadata:
                name: {{ .Values.tests.long.name }}
              spec:
                source: |
                  module.exports = {
                      main: function(event, context) {
                        return 'OK'
                      }
                  }
              ---
              EOF
              ) \
              && kubectl wait --for=condition=Running functions.serverless.kyma-project.io/{{ .Values.tests.long.name }} -n {{ .Values.tests.long.namespace }} --timeout={{ .Values.tests.long.initTimeout }} \
              || ( kubectl -n {{ .Values.tests.long.namespace }} describe functions.serverless.kyma-project.io {{ .Values.tests.long.name }}; exit 1 ) 
      containers:
        - name: {{ include "tests.name" . }}
          image: "{{ .Values.tests.long.image.repository  }}:{{ .Values.tests.long.image.tag }}"
          imagePullPolicy: {{ .Values.tests.long.pullPolicy }}
          command:
            - "/bin/bash"
          args:
            - "-c"
            - |
              echo 'TESTING has started'
              sleep 20

              # test start

              kubectl -n {{ .Values.tests.long.namespace }} get function {{ .Values.tests.long.name }} -o=jsonpath='{range .status.conditions[*]}{.status}{end}' | grep -E '^(True)*$' \
              && curl -XGET http://{{ .Values.tests.long.name }}.{{ .Values.tests.long.namespace }} \
              || ( kubectl -n {{ .Values.tests.long.namespace }} describe functions.serverless.kyma-project.io {{ .Values.tests.long.name }}; exit 1 )

              # test end
              
              exit_code=$?
              echo exit_code is $exit_code
              echo 'stopping pilot-agent...'

              curl -XPOST http://127.0.0.1:15020/quitquitquit

              sleep 4
              exit $exit_code
              
          resources:
{{ include "tplValue" ( dict "value" .Values.tests.long.resources "context" $ ) | indent 12 }}
{{- end }}
{{- end}}
