apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-nodejs14
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: nodejs14
data:
  Dockerfile: |-
    ARG base_image={{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_nodejs14) }}
    FROM ${base_image}
    USER root
    ENV KUBELESS_INSTALL_VOLUME=/kubeless

    COPY /src/package.json $KUBELESS_INSTALL_VOLUME/package.json
    COPY /registry-config/* $KUBELESS_INSTALL_VOLUME/
    RUN npm install --production --prefix=$KUBELESS_INSTALL_VOLUME
    COPY /src $KUBELESS_INSTALL_VOLUME

    RUN rm -rf $KUBELESS_INSTALL_VOLUME/.npmrc

    USER 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-nodejs16
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: nodejs16
data:
  Dockerfile: |-
    ARG base_image={{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_nodejs16) }}
    FROM ${base_image}
    USER root
    ARG SRC_DIR=/src

    RUN mkdir -p /usr/src/app/function
    WORKDIR /usr/src/app/function

    COPY /registry-config/* /usr/src/app/function/
    COPY $SRC_DIR/package.json /usr/src/app/function/package.json

    RUN npm install --production
    COPY $SRC_DIR /usr/src/app/function
    RUN ls -l /usr/src/app/function
    WORKDIR /usr/src/app

    USER 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-python39
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: python39
data:
  Dockerfile: |-
    ARG base_image={{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_python39) }}
    FROM ${base_image}
    USER root
    ENV KUBELESS_INSTALL_VOLUME=/kubeless
    
    COPY /src/requirements.txt $KUBELESS_INSTALL_VOLUME/requirements.txt
    COPY /registry-config/* /etc/
    RUN pip install -r $KUBELESS_INSTALL_VOLUME/requirements.txt
    COPY /src $KUBELESS_INSTALL_VOLUME

    RUN rm -rf /etc/pip.conf

    USER 1000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile-java17-jvm-alpha
  namespace: {{ .Release.Namespace }}
  labels:
    serverless.kyma-project.io/config: runtime
    serverless.kyma-project.io/runtime: java17-jvm-alpha
data:
  Dockerfile: |-
    FROM {{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_runtime_java17_jvm_alpha) }} as builder

    ARG BUILD_DIR=/build
    #When kaniko build the image it has Handler.java and pom.xml in the /src, but When I work on function locally the pom.xml can be in /src, but Handler.java lies in the package deep in src.
    ARG SOURCE_DIR=/src
    ARG DEPS_DIR=/src
    WORKDIR $BUILD_DIR

    COPY $DEPS_DIR/pom.xml $BUILD_DIR/handler-pom.xml

    COPY $SOURCE_DIR/Handler.java $BUILD_DIR/src/main/java/io/project/kyma/serverless/handler/Handler.java
    RUN mvn dependency:go-offline -f handler-pom.xml

    RUN mvn clean && mvn package -f pom.xml

    FROM eclipse-temurin:17-jre-alpine

    COPY --from=builder /build/target/kyma-java-runtime-0.0.1.jar /app.jar

    ENTRYPOINT java -Djava.security.egd=file:/dev/./urandom -jar /app.jar
    USER 1000
