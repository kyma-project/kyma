# in case of changes please test this on GKE, Azure and Gardener
{{- if .Values.dockerRegistry.enableInternal }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "registry-fullname" }}-cert-patch
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 4 }}
data:
  patch-docker.sh: |
    #!/usr/bin/env bash
        
    set -o nounset
    set -o pipefail
    set -e

    apk update
    apk add --no-cache openssl

    CERT_FILE_TEXT=$(kubectl get secret kyma-gateway-certs -n istio-system -o=jsonpath='{.data.cert}' --ignore-not-found)
    if [ -z "${CERT_FILE_TEXT}" ]; then
      echo "No cert key in secret kyma-gateway-certs to inject. Checking tls.crt."

      CERT_FILE_TEXT=$(kubectl get secret kyma-gateway-certs -n istio-system -o=jsonpath="{.data['tls\.crt']}" --ignore-not-found)
      if [ -z "${CERT_FILE_TEXT}" ]; then
        echo "No tls.crt key in secret kyma-gateway-certs to inject. Exit 0."
        exit 0
      fi
    fi

    DECODED_CERT=$(echo "${CERT_FILE_TEXT}" | sed 's/ /\\ /g' | tr -d '\n' | base64 -d)
    CERT_FILE="/cert/cert.txt"
    mkdir "/cert"
    touch "${CERT_FILE}"
    echo "${DECODED_CERT}" > "${CERT_FILE}"  

    ISSUER_NO_WHITESPACE=$(openssl x509 -in "${CERT_FILE}" -inform PEM -noout -issuer | sed 's/issuer=//' | tr -d '[:space:]')
    SUBJECT_NO_WHITESPACE=$(openssl x509 -in "${CERT_FILE}" -inform PEM -noout -subject | sed 's/subject=//' | tr -d '[:space:]')

    if [ "${ISSUER_NO_WHITESPACE}" != "${SUBJECT_NO_WHITESPACE}" ]; then
      echo "Certificate is not self-signed, everything is ok. Exit 0"
      exit 0
    fi

    CONTAINER_RUNTIME=$(kubectl get nodes -o jsonpath='{.items[0].status.nodeInfo.containerRuntimeVersion}'| cut -d: -f 1)

    if [ "${CONTAINER_RUNTIME}" = "docker" ]; then
      echo "Certificate is self-signed, patching Docker..."
      DIR="/kube-etc/docker/certs.d/registry.{{ .Values.global.ingress.domainName }}"
      if [ ! -d "${DIR}" ]; then
        mkdir -p "${DIR}"
      fi

      cat "${CERT_FILE}" > "${DIR}/ca.crt"
    else
      echo "Certificate is self-signed, patching Containerd..."
      TMPDIR=$(mktemp -u)
      # GKE nodes have /usr/local/ mounted read-only. So we need to override the default localcertsdir
      nsenter --mount=/proc/1/ns/mnt -- sh -c "mkdir $TMPDIR && echo \"${DECODED_CERT}\" > $TMPDIR/ca.crt && update-ca-certificates --localcertsdir $TMPDIR && systemctl restart containerd"
    fi
    echo "Done."
    exit 0
{{- end }}