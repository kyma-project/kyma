{{- if ( and ( .Values.garbageCollection.enabled )  ( eq .Values.storage "filesystem" ) )}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "docker-registry.name" . }}-image-gc
  namespace: {{ .Release.Namespace }}
spec:
  # Not using a common time slice to avoid load spikes.
  schedule: "42 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          serviceAccountName: {{ template "docker-registry.name" . }}
          restartPolicy: Never
          containers:
          - name: function-image-untagger
            image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.function_registry_gc) }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- if .Values.containers.securityContext }}
            securityContext:
              {{- include "tplValue" ( dict "value" .Values.containers.securityContext "context" . ) | nindent 14 }}
            {{- end }}
            command:
            - /app/registry-gc
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            env:
              - name: REGISTRY_CONFIG_SECRET_NAME
                value: "serverless-registry-config-default"
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
{{- end }}

