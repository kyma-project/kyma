# Default values for docker-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

updateStrategy:
  type: Recreate
  rollingUpdate: null
  #   maxSurge: 1
  #   maxUnavailable: 0

image:
  repository: eu.gcr.io/kyma-project/incubator/develop/registry
  tag: 2.7.1-db711226
  pullPolicy: IfNotPresent
# imagePullSecrets:
    # - name: docker
service:
  name: registry
  type: ClusterIP
  # clusterIP:
  port: "{{ .Values.global.dockerServicePort }}"    # same as configData.http.addr
  # nodePort:
  annotations: {}
  # foo.io/bar: "true"
ingress:
  enabled: false
  path: /
  # Used to create an Ingress record.
  hosts:
    - chart-example.local
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
   cpu: 400m
   memory: 800Mi
  requests:
   cpu: 100m
   memory: 300Mi

podAnnotations:
  sidecar.istio.io/inject: "false"
podLabels: {}

persistence:
  accessMode: 'ReadWriteOnce'
  enabled: true
  size: 20Gi
  # storageClass: '-'

# set the type of filesystem to use: filesystem, s3
storage: filesystem

# Set this to name of secret for tls certs
# tlsSecretName: registry.docker.example.com

# Secrets for Azure
#   azure:
#     accountName: ""
#     accountKey: ""
#     container: ""
# Secrets for S3 access and secret keys
#   s3:
#     accessKey: ""
#     secretKey: ""
# Secrets for Swift username and password
#   swift:
#     username: ""
#     password: ""

# Options for s3 storage type:
# s3:
#  region: us-east-1
#  regionEndpoint: s3.us-east-1.amazonaws.com
#  bucket: my-bucket
#  encrypt: false
#  secure: true

# Options for swift storage type:
# swift:
#  authurl: http://swift.example.com/
#  container: my-container

# https://docs.docker.com/registry/configuration/
configData: # example: https://github.com/docker/distribution/blob/master/cmd/registry/config-dev.yml
  version: 0.1
  log:
    formatter: json 
    fields:
      service: registry
  storage:
    cache:
      blobdescriptor: inmemory
  http:
    addr: :5000 # same as .Values.service.port
    headers:
      X-Content-Type-Options: [nosniff]
    debug:
        addr: :5001
        prometheus:
            enabled: true
            path: /metrics      
  health:
    storagedriver:
      enabled: true
      interval: 10s
      threshold: 3

securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000
  privileged: false
  allowPrivilegeEscalation: false

priorityClassName: ""

podDisruptionBudget: {}
  # maxUnavailable: 1
  # minAvailable: 2

nodeSelector: {}

tolerations: []

extraVolumeMounts: []

extraVolumes: []

nameOverride:
fullnameOverride:

destinationRule:
  enabled: true
