apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.jobName | quote }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin # yeah, cluster admin - we do NOT run those tests in cluster, only in k3s, so it's the easiest way
subjects:
  - kind: ServiceAccount
    name: {{ .Values.jobName | quote }}
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jobName | quote }}
  namespace: {{ .Release.Namespace }}

spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ .Values.jobName | quote }}
      restartPolicy: Never
      containers:
        - name: test
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.testImages.function_controller_test) }}"
          args: ["serverless-integration"]
          env:
            - name: APP_TEST_WAIT_TIMEOUT
              value: "5m"
            - name: APP_TEST_VERBOSE
              value: "false"
            - name: APP_TEST_CLEANUP
              value: "no" # do not clean, we'll kubectl get those resources after job completion/fail
            - name: APP_TEST_ISTIO_ENABLED
              value: "false"
            - name: APP_TEST_GIT_SERVER_IMAGE
              value: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.testImages.git_server) }}"
