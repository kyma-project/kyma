apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.jobName | quote }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.jobName | quote }}
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - configmaps
  - services
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - "serverless.kyma-project.io"
  resources:
  - functions
  - gitrepositories
  verbs: ["*"]
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.jobName | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.jobName | quote }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.jobName | quote }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jobName | quote }}
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 0
  template:
    spec:
      shareProcessNamespace: true
      serviceAccountName: {{ .Values.jobName | quote }}
      restartPolicy: Never
      containers:
        - name: test
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.testImages.function_controller_test) }}"
          # a workaround to allow the job pod to connect to the function services using istio mTLS and still allow the job to be completed.
          {{- if .Capabilities.APIVersions.Has "security.istio.io/v1beta1" }}
          command:
          - sh
          - -c
          - "/app/main.test {{ .Values.testSuite }} ; pkill -f /usr/local/bin/pilot-agent"
          {{- else }}
          args: ["{{ .Values.testSuite }}"]
          {{- end }}
          env:
          {{- if  (eq .Values.testSuite "git-auth-integration" ) }}
            - name: APP_GITHUB_REPO_CONFIG_URL
              value: "{{ .Values.gitAuth.github.url }}"
            - name: APP_GITHUB_REPO_CONFIG_BASE_DIR
              value: "{{ .Values.gitAuth.github.baseDir }}"
            - name: APP_GITHUB_REPO_CONFIG_REFERENCE
              value: "{{ .Values.gitAuth.github.reference }}"
            - name: APP_GITHUB_SSH_AUTH_KEY
              value: "{{ .Values.gitAuth.github.key }}"
            - name: APP_AZURE_REPO_CONFIG_URL
              value: "{{ .Values.gitAuth.azure.url }}"
            - name: APP_AZURE_REPO_CONFIG_BASE_DIR
              value: "{{ .Values.gitAuth.azure.baseDir }}"
            - name: APP_AZURE_REPO_CONFIG_REFERENCE
              value: "{{ .Values.gitAuth.azure.reference }}"
            - name: APP_AZURE_BASIC_AUTH_USERNAME
              value: "{{ .Values.gitAuth.azure.username }}"
            - name: APP_AZURE_BASIC_AUTH_PASSWORD
              value: "{{ .Values.gitAuth.azure.password }}"
          {{- end }}
            - name: APP_TEST_WAIT_TIMEOUT
              value: "5m"
            - name: APP_TEST_VERBOSE
              value: "false"
            - name: APP_TEST_CLEANUP
              value: "no" # do not clean, we'll kubectl get those resources after job completion/fail
            - name: APP_TEST_ISTIO_ENABLED
              value: "false"
            - name: APP_TEST_GIT_SERVER_IMAGE
              value: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.testImages.git_server) }}"
