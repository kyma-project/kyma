# Default values for serverless.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: "serverless"

injectCerts:
  image:
    repository: "eu.gcr.io/kyma-project/incubator/k8s-tools"
    tag: "20210208-080d17ad"
    pullPolicy: IfNotPresent

migration:
  image:
    repository: "eu.gcr.io/kyma-project/incubator/k8s-tools"
    tag: "20210208-080d17ad"
    pullPolicy: IfNotPresent

tests:
  enabled: true
  labels:
    integration: true
    after-upgrade: true
    e2e-skr: true

  long:
    initTimeout: 120s
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
    image:
      repository: "eu.gcr.io/kyma-project/incubator/k8s-tools"
      tag: "20210208-080d17ad"
      pullPolicy: IfNotPresent
    namespace: "long-running-function-test"
    name: longrun

  image:
    repository: "eu.gcr.io/kyma-project/function-controller-test"
    tag: "PR-10737"
    pullPolicy: IfNotPresent
  disableConcurrency: false
  restartPolicy: Never
  resources:
    requests:
      memory: 32Mi
      cpu: 100m
    limits:
      memory: 64Mi
      cpu: 200m
  envs:
    waitTimeout: 15m
    verifySSL: "false"
    verbose: "false"
    gitServer:
      image: "eu.gcr.io/kyma-project/gitserver"
      tag: "c0aa144a"
      repoName: "function"

global:
  commonLabels:
    app: '{{ template "name" . }}'
    version: "{{ .Values.images.manager.tag }}"
    app.kubernetes.io/name: '{{ template "name" . }}'
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/version: "{{ .Values.images.manager.tag }}"
    helm.sh/chart: '{{ include "chart" . }}'
  dockerServicePort: 5000
  ingress:
    domainName:

images:
  manager:
    repository: "eu.gcr.io/kyma-project/function-controller"
    tag: "abb3d162"
    pullPolicy: IfNotPresent
  runtimes:
    nodejs12:
      repository: "eu.gcr.io/kyma-project/function-runtime-nodejs12"
      tag: "4bed80da"
    nodejs10:
      repository: "eu.gcr.io/kyma-project/function-runtime-nodejs10"
      tag: "4bed80da"
    python38:
      repository: "eu.gcr.io/kyma-project/function-runtime-python38"
      tag: "4bed80da"

deployment:
  replicas: 1
  labels: {}
  annotations: {}
  extraProperties: {}

pod:
  labels: {}
  annotations:
    sidecar.istio.io/inject: "false"
  extraProperties:
    terminationGracePeriodSeconds: 10

containers:
  daemonset:
    initContainerSecurityContext:
      privileged: false
      allowPrivilegeEscalation: false
      runAsUser: 0
    containerSecurityContext:
      privileged: false
      allowPrivilegeEscalation: false
      runAsUser: 1000
  manager:
    resources:
      limits:
        cpu: 100m
        memory: 160Mi #This is temporary. helm3 is using secrets as storage by default. I talked already with michalhudy to exclude secrets with helm labels from watching.
      requests:
        cpu: 10m
        memory: 32Mi
    containerSecurityContext:
      privileged: false
      allowPrivilegeEscalation: false
      runAsUser: 1000
    extraProperties: {}
    envs:
      configMapRequeueDuration:
        value: 5m
      secretRequeueDuration:
        value: 5m
      serviceAccountRequeueDuration:
        value: 5m
      roleRequeueDuration:
        value: 5m
      roleBindingRequeueDuration:
        value: 5m
      namespaceExcludedNames:
        value: "istio-system,knative-eventing,kube-node-lease,kube-public,kube-system,kyma-installer,kyma-integration,kyma-system,natss,compass-system"
      imageRegistryExternalDockerConfigSecretName:
        value: '{{ template "fullname" . }}-registry-config'
      imageRegistryDefaultDockerConfigSecretName:
        value: '{{ template "fullname" . }}-registry-config-default'
      imagePullAccountName:
        value: '{{ template "fullname" . }}-function'
      buildServiceAccountName:
        value: '{{ template "fullname" . }}-build'
      targetCPUUtilizationPercentage:
        value: "50"
      functionRequeueDuration:
        value: 5m
      functionBuildExecutorArgs:
        value: "--insecure,--skip-tls-verify,--skip-unused-stages,--log-format=text,--cache=true"
      functionBuildExecutorImage:
        value: gcr.io/kaniko-project/executor:v1.3.0
      functionBuildRepoFetcherImage:
        value: eu.gcr.io/kyma-project/function-build-init:76ba4f03
      functionBuildMaxSimultaneousJobs:
        value: "5"
      logLevel:
        value: "info"

services:
  manager:
    type: ClusterIP
    labels: {}
    annotations: {}
    https:
      port: 443
      targetPort: 8443

metrics:
  enabled: true
  manager:
    port:
      name: http-metrics
      port: 8080
      targerPort: 8080
      protocol: TCP
  serviceMonitor:
    create: true
    labels: {}
    annotations: {}
  pod:
    labels: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/metrics"

backendModule:
  enabled: true

clusterMicroFrontend:
  enabled: true

grafanaDashboard:
  enabled: true

usageKind:
  name: serverless-function

dockerRegistry:
  enableInternal: true
  username: "{{ randAlphaNum 20 | b64enc }}" # for gcr "_json_key"
  password: "{{ randAlphaNum 40 | b64enc }}" # for gcr data from json key
  internalServerAddress: '{{ template "registry-fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.dockerServicePort }}'
  serverAddress: "registry.{{ .Values.global.ingress.domainName -}}"
  registryAddress: "registry.{{ .Values.global.ingress.domainName -}}"

docker-registry:
  fullnameOverride: "serverless-docker-registry"
  destinationRule:
    enabled: true
  secrets:
    haSharedSecret: "secret"
    htpasswd: "generated-in-init-container"
  extraVolumeMounts:
    - name: htpasswd-data
      mountPath: /data
  extraVolumes:
    - name: registry-credentials
      secret:
        secretName: serverless-registry-config-default
        items:
          - key: username
            path: username.txt
          - key: password
            path: password.txt
    - name: htpasswd-data
      emptyDir: {}

webhook:
  enabled: true
  fullnameOverride: "serverless-webhook"
  image:
    repository: "eu.gcr.io/kyma-project/function-webhook"
    tag: "76ba4f03"

k3s-tests:
  enabled: false # this chart is installed manually, do not flip this value
