apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "subscription-controller.fullname" . }}
  labels:
{{ include "subscription-controller.labels.standard" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
{{ include "subscription-controller.labels.selectors" . | indent 6 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
{{ include "subscription-controller.labels.standard" . | indent 8 }}
{{ include "subscription-controller.labels.kyma" . | indent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.event_bus.dir }}{{ .Values.global.event_bus.subscriptionControllerImage }}:{{ .Values.global.event_bus.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --port={{ .Values.port }}
            - --resyncPeriod={{ .Values.global.subscriptionController.resyncPeriod }}
            - --channelTimeout={{ .Values.global.subscriptionController.channelTimeout }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          livenessProbe:
            httpGet:
              path: /v1/status/live
              port: http
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /v1/status/ready
              port: http
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
{{ toYaml .Values.global.subscriptionController.resources | indent 12 }}
      serviceAccount:  {{ template "subscription-controller.fullname" .}}
