---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "mesh-namespaces-migration.fullname" . }}-hooks
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "mesh-namespaces-migration.fullname" . }}-view-namespaces
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hooks-view-namespaces
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "mesh-namespaces-migration.fullname" . }}-view-namespaces
subjects:
  - kind: ServiceAccount
    name: {{ template "mesh-namespaces-migration.fullname" . }}-hooks
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "mesh-namespaces-migration.fullname" . }}-hooks
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyma-admin
subjects:
- kind: ServiceAccount
  name: {{ template "mesh-namespaces-migration.fullname" . }}-hooks
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "mesh-namespaces-migration.fullname" . }}-mesh-namespaces-migration
  labels:
{{ include "mesh-namespaces-migration.labels.standard" . | indent 4 }}
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'false'
      labels:
{{ include "mesh-namespaces-migration.labels.standard" . | indent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "mesh-namespaces-migration.fullname" . }}-hooks
      containers:
        - name: mesh-namespaces-migration
          image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.event_bus.dir }}{{ .Values.global.event_bus.meshNamespacesMigrationImage }}:{{ .Values.global.event_bus.version }}"
          imagePullPolicy: Always
