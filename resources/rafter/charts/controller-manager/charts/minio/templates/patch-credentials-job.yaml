{{- if .Release.IsUpgrade }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: "pre-upgrade, post-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
data:
  patch-credentials: |-
{{ include (print $.Template.BasePath "/_helper_patch_credentials.txt") . | indent 4 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: "pre-upgrade, post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  annotations:
    helm.sh/hook: "pre-upgrade, post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "patch", "delete"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  annotations:
    helm.sh/hook: "pre-upgrade, post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
subjects:
- kind: ServiceAccount
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ template "minio.fullname" . }}-patch-credentials-job
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-pre-job
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "minio.fullname" . }}-patch-credentials-job
      restartPolicy: OnFailure
      volumes:
        - name: patch-credentials
          projected:
            sources:
            - configMap:
                name: {{ template "minio.fullname" . }}-patch-credentials-job
      containers:
      - name: patch-credentials-job
        image: "{{ .Values.patchCredentials.image.repository }}:{{ .Values.patchCredentials.image.tag }}"
        imagePullPolicy: "{{ .Values.patchCredentials.image.pullPolicy }}"
        env:
          - name: HELM_STEP
            value: "PRE_UPGRADE"
          - name: NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: MINIO_SECRET_NAME
            value: "{{ template "minio.fullname" . }}"
          - name: PATCH_CREDENTIALS_SECRET_NAME
            value: "{{ .Values.patchCredentials.secretName }}"
        command: 
          - "/bin/bash"
          - "/config/patch-credentials"
        volumeMounts:
          - name: patch-credentials
            mountPath: /config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "minio.fullname" . }}-patch-credentials-post-job
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "minio.fullname" . }}-patch-credentials-job
      restartPolicy: OnFailure
      volumes:
        - name: patch-credentials
          projected:
            sources:
            - configMap:
                name: {{ template "minio.fullname" . }}-patch-credentials-job
      containers:
      - name: patch-credentials-job
        image: "{{ .Values.patchCredentials.image.repository }}:{{ .Values.patchCredentials.image.tag }}"
        imagePullPolicy: "{{ .Values.patchCredentials.image.pullPolicy }}"
        env:
          - name: HELM_STEP
            value: "POST_UPGRADE"
          - name: NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: DEPLOYMENT_NAME
            value: "{{ template "minio.fullname" . }}"
          - name: PATCH_CREDENTIALS_SECRET_NAME
            value: "{{ .Values.patchCredentials.secretName }}"
        command: 
          - "/bin/bash"
          - "/config/patch-credentials"
        volumeMounts:
          - name: patch-credentials
            mountPath: /config
{{- end }}
