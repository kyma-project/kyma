apiVersion: batch/v1
kind: Job
metadata:
    name: compass-migration
    labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "0"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
                release: {{ .Release.Name }}
        spec:
            restartPolicy: Never
            containers:
                {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-proxy
                  image: gcr.io/cloudsql-docker/gce-proxy:1.11
                  command: ["/bin/sh", "-c"]
                  args:
                    - |
                      /cloud_sql_proxy \
                      -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 \
                      -credential_file=/secrets/cloudsql-instance-credentials/credentials.json & CHILD_PID=$!
                      (while true; do if [[ -f "/tmp/pod/migration-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
                      wait $CHILD_PID
                      if [[ -f "/tmp/pod/migration-terminated" ]]; then exit 0; fi
                  volumeMounts:
                      - name: cloudsql-instance-credentials
                        mountPath: /secrets/cloudsql-instance-credentials
                        readOnly: true
                      - name: tmp-pod
                        mountPath: /tmp/pod
                        readOnly: true
                {{end}}
                - name: migrator
                  image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.schema_migrator.dir }}compass-schema-migrator:{{ .Values.global.images.schema_migrator.version }}
                  imagePullPolicy: IfNotPresent
                  env:
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-directorDatabaseName
                      - name: DB_SSL
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-sslMode
                      - name: "DIRECTION"
                        value: "up"

                  command: ["/bin/bash", "-c"]
                  args:
                    - |
                      sleep 20s; trap 'touch /tmp/pod/migration-terminated' EXIT
                      ./run.sh; exit_code=$?
                      echo '# KILLING PILOT-AGENT #'
                      curl -XPOST http://127.0.0.1:15020/quitquitquit
                      sleep 5; exit $exit_code
                  volumeMounts:
                    - name: tmp-pod
                      mountPath: /tmp/pod
            volumes:
                - name: tmp-pod
                  emptyDir: {}
            {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-instance-credentials
                  secret:
                      secretName: cloudsql-instance-credentials
            {{end}}
