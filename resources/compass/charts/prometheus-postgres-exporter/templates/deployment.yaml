{{- if and .Values.config.datasource.passwordSecret .Values.config.datasource.password -}}
{{ fail (printf "ERROR: only one of .Values.config.datasource.passwordSecret and .Values.config.datasource.password must be defined") }}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-postgres-exporter.fullname" . }}
  labels:
    app: {{ template "prometheus-postgres-exporter.name" . }}
    chart: {{ template "prometheus-postgres-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "prometheus-postgres-exporter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "prometheus-postgres-exporter.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | trim | indent 8 }}
{{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "prometheus-postgres-exporter.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          args:
          - "--extend.query-path=/etc/config.yaml"
          {{- if .Values.config.disableDefaultMetrics }}
          - "--disable-default-metrics"
          {{- end }}
          {{- if .Values.config.disableSettingsMetrics }}
          - "--disable-settings-metrics"
          {{- end }}
          {{- if .Values.config.autoDiscoverDatabases }}
          - "--auto-discover-databases"
          {{- if .Values.config.excludeDatabases }}
          - "--exclude-databases"
          - {{ .Values.config.excludeDatabases | join "," }}
          {{- end }}
          {{- end }}
          env:
          {{- if .Values.config.datasourceSecret }}
          - name: DATA_SOURCE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.config.datasourceSecret.name }}
                key: {{ .Values.config.datasourceSecret.key }}
          {{- else }}
          - name: DATA_SOURCE_URI
            value: {{ template "prometheus-postgres-exporter.data_source_uri" . }}
          {{- if eq .Values.global.database.embedded.enabled false }}
          - name: DATA_SOURCE_USER
            value: {{ .Values.global.database.managedGCP.director.user }}
          {{- else }}
          - name: DATA_SOURCE_USER
            value: {{ .Values.config.datasource.user }}
          {{- end }}
          - name: DATA_SOURCE_PASS
            valueFrom:
              secretKeyRef:
          {{- if .Values.config.datasource.passwordSecret }}
                name: {{ .Values.config.datasource.passwordSecret.name }}
                key: {{ .Values.config.datasource.passwordSecret.key }}
          {{- else }}
                name: {{ template "prometheus-postgres-exporter.fullname" . }}
                key: data_source_password
          {{- end }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: queries
              mountPath: /etc/config.yaml
              subPath: config.yaml
            {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
      {{end}}
      {{- with .Values.extraContainers }}
{{ tpl . $ | indent 8 }}
{{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
     {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ template "prometheus-postgres-exporter.fullname" . }}
        name: queries
      {{if eq .Values.global.database.embedded.enabled false}}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{end}}
{{- with .Values.extraVolumes }}
{{ tpl . $ | indent 6 }}
{{- end }}
