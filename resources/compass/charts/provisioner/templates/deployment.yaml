apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.provisioner.dir }}compass-provisioner:{{ .Values.global.images.provisioner.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.provisioner.graphql.port }}
              protocol: TCP
          env:
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.provisioner.graphql.port }}"
            - name: APP_API_ENDPOINT
              value: "/graphql"
            - name: APP_CREDENTIALS_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: APP_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-username
            - name: APP_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-password
            - name: APP_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-provisionerDatabaseName
            - name: APP_DATABASE_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DATABASE_SCHEMA_FILE_PATH
              value: {{ .Values.database.schemaFilePath }}
            - name: APP_INSTALLATION_TIMEOUT
              value: "{{ .Values.installation.timeout }}"
            - name: APP_INSTALLATION_ERRORS_COUNT_FAILURE_THRESHOLD
              value: "{{ .Values.installation.errorsCountFailureThreshold }}"
        {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
        {{- end }}

        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json"]
                {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
                {{- end }}
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
        {{end}}
      volumes:
      {{if eq .Values.global.database.embedded.enabled false}}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{end}}
