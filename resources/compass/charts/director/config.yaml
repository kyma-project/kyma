# Required scopes for specific GraphQL operations
graphql:
  query:
    applications: ["application:read"]
    application: ["application:read"]
    applicationsForRuntime: ["application:read"]
    applicationTemplates: ["application_template:read"]
    applicationTemplate: ["application_template:read"]
    runtimes: ["runtime:read"]
    runtime: ["runtime:read"]
    labelDefinitions: ["label_definition:read"]
    labelDefinition: ["label_definition:read"]
    healthChecks: ["health_checks:read"]
    integrationSystem: ["integration_system:read"]
    integrationSystems: ["integration_system:read"]

  mutation:
    registerApplication: ["application:write"]
    registerApplicationFromTemplate: ["application:write"]
    updateApplication: ["application:write"]
    unregisterApplication: ["application:write"]
    createApplicationTemplate: ["application_template:write"]
    updateApplicationTemplate: ["application_template:write"]
    deleteApplicationTemplate: ["application_template:write"]
    registerRuntime: ["runtime:write"]
    updateRuntime: ["runtime:write"]
    unregisterRuntime: ["runtime:write"]
    registerIntegrationSystem: ["integration_system:write"]
    updateIntegrationSystem: ["integration_system:write"]
    unregisterIntegrationSystem: ["integration_system:write"]
    addWebhook: ["application:write"]
    updateWebhook: ["application:write"]
    deleteWebhook: ["application:write"]
    addAPIDefinition: ["application:write"]
    updateAPIDefinition: ["application:write"]
    deleteAPIDefinition: ["application:write"]
    refetchAPISpec: ["application:write"]
    setAPIAuth: ["application:write"]
    deleteAPIAuth: ["application:write"]
    addEventDefinition: ["application:write"]
    updateEventDefinition: ["application:write"]
    deleteEventDefinition: ["application:write"]
    refetchEventAPISpec: ["application:write"]
    addDocument: ["application:write"]
    deleteDocument: ["application:write"]
    createLabelDefinition: ["label_definition:write"]
    updateLabelDefinition: ["label_definition:write"]
    deleteLabelDefinition: ["label_definition:write"]
    setApplicationLabel: ["application:write"]
    deleteApplicationLabel: ["application:write"]
    setRuntimeLabel: ["runtime:write"]
    deleteRuntimeLabel: ["runtime:write"]
    requestOneTimeTokenForRuntime: ["runtime:write"]
    requestOneTimeTokenForApplication: ["application:write"]
    requestClientCredentialsForRuntime: ["runtime:write"]
    requestClientCredentialsForApplication: ["application:write"]
    requestClientCredentialsForIntegrationSystem: ["integration_system:write"]
    deleteSystemAuthForRuntime: ["runtime:write"]
    deleteSystemAuthForApplication: ["application:write"]
    deleteSystemAuthForIntegrationSystem: ["integration_system:write"]
    setDefaultEventingForApplication: ["eventing:manage"]
    deleteDefaultEventingForApplication: ["eventing:manage"]

# Scopes assigned for every new Client Credentials by given object type (Runtime / Application / Integration System)
clientCredentialsRegistrationScopes:
  runtime:
    - "runtime:read"
    - "runtime:write"
    - "application:read"
  application:
    - "application:read"
    - "application:write"
  integration_system:
    - "application:read"
    - "application:write"
    - "application_template:read"
    - "application_template:write"
    - "integration_system:read"
