apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "metris.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
{{ include "metris.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
{{ include "metris.labels" . | indent 8 }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | trim | indent 8 }}
{{- end }}
    spec:
{{- include "metris.imagePullSecrets" . | indent 6 }}
      serviceAccountName: {{ template "metris.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - "--log-level={{ .Values.loglevel }}"
            - "--listen-addr=0.0.0.0:{{ .Values.port }}"
            - "--kubeconfig=/gardener/kubeconfig"
            - "--provider-poll-interval={{ .Values.provider.pollinterval }}"
            - "--provider-workers={{ .Values.provider.workers }}"
            - "--edp-url={{ .Values.edp.url }}"
            - "--edp-namespace={{ .Values.edp.datastream.namespace }}"
            - "--edp-data-stream={{ .Values.edp.datastream.name }}"
            - "--edp-data-stream-version={{ .Values.edp.datastream.version }}"
            - "--edp-data-stream-env={{ .Values.edp.datastream.env }}"
            - "--edp-workers={{ .Values.edp.workers }}"
            {{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | trim | indent 12 }}
            {{- end }}
          env:
            - name: EDP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "metris.fullname" . }}
                  key: token
            {{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | trim | indent 12 }}
            {{- end }}
          image: {{ template "metris.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          {{- with .Values.resources }}
          resources:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | trim | indent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /gardener
              name: gardener-kubeconfig
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
      - name: gardener-kubeconfig
        secret:
          secretName: {{ .Values.gardener.secretName }}
      - name: tmp
        emptyDir: {}