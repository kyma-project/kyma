apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kyma-env-broker.fullname" . }}
  labels:
{{ include "kyma-env-broker.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kyma-env-broker.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            # Used for calls to Director
            - "{{ .Values.global.gateway.tls.secure.oauth.host }}.{{ .Values.global.ingress.domainName }}"
            # Used for calls for oauth token
            - "{{ .Values.global.oauth2.host }}.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ include "kyma-env-broker.fullname" . }}
    {{- with .Values.deployment.securityContext }}
      securityContext:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.kyma_environment_broker.dir }}kyma-environment-broker:{{ .Values.global.images.kyma_environment_broker.version }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          env:
            - name: APP_DISABLE_PROCESS_OPERATIONS_IN_PROGRESS
              value: "false"
            - name: APP_BROKER_ENABLE_PLANS
              value: "{{ .Values.enablePlans }}"
            - name: APP_PROVISIONING_URL
              value: "{{ .Values.provisioner.URL }}"
            - name: APP_PROVISIONING_TIMEOUT
              value: "{{ .Values.provisioner.timeout }}"
            - name: APP_PORT
              value: "{{ .Values.broker.port }}"
            - name: APP_STATUS_PORT
              value: "{{ .Values.broker.statusPort }}"
            - name: APP_DIRECTOR_NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: APP_DIRECTOR_DEFAULT_TENANT
              value: "{{ .Values.global.defaultTenant }}"
            - name: APP_DIRECTOR_URL
              value: "https://{{ .Values.global.gateway.tls.secure.oauth.host }}.{{ .Values.global.ingress.domainName }}/director/graphql"
            - name: APP_DIRECTOR_OAUTH_CREDENTIALS_SECRET_NAME
              value: "{{ .Values.global.kyma_environment_broker.secrets.integrationSystemCredentials.name }}"
            - name: APP_DIRECTOR_SKIP_CERT_VERIFICATION
              value: "{{ .Values.global.isLocalEnv }}"
            - name: APP_LMS_URL
              value: "{{ .Values.lms.url }}"
            - name: APP_LMS_CLUSTER_TYPE
              value: "{{ .Values.lms.clusterType }}"
            - name: APP_LMS_ENVIRONMENT
              value: "{{ .Values.lms.environment }}"
            - name: APP_LMS_SAML_TENANT
              value: "{{ .Values.lms.samlTenant }}"
            - name: APP_LMS_DISABLED
              value: "{{ .Values.lms.disabled }}"
            - name: APP_LMS_MANDATORY
              value: "{{ .Values.lms.mandatory }}"
            - name: APP_LMS_REGION
              value: "{{ .Values.lms.region }}"
            - name: APP_LMS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.lms.secretName}}"
                  key: token
            - name: APP_IAS_URL
              value: "{{ .Values.ias.url }}"
            - name: APP_IAS_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.ias.secretName }}"
                  key: id
            - name: APP_IAS_USER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.ias.secretName }}"
                  key: secret
            - name: APP_IAS_IDENTITY_PROVIDER
              value: "{{ .Values.ias.identityProvider }}"
            - name: APP_IAS_DISABLED
              value: "{{ .Values.ias.disabled }}"
            - name: APP_EDP_AUTH_URL
              value: "{{ .Values.edp.authURL }}"
            - name: APP_EDP_ADMIN_URL
              value: "{{ .Values.edp.adminURL }}"
            - name: APP_EDP_NAMESPACE
              value: "{{ .Values.edp.namespace }}"
            - name: APP_EDP_ENVIRONMENT
              value: "{{ .Values.edp.environment }}"
            - name: APP_EDP_REQUIRED
              value: "{{ .Values.edp.required }}"
            - name: APP_EDP_DISABLED
              value: "{{ .Values.edp.disabled }}"
            - name: APP_EDP_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.edp.secretName }}"
                  key: secret
            - name: APP_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-broker-username
            - name: APP_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-broker-password
            - name: APP_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-broker-db-name
            - name: APP_DATABASE_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_SERVICE_MANAGER_OVERRIDE_MODE
              value: "{{ .Values.serviceManager.overrideMode }}"
            - name: APP_SERVICE_MANAGER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: url
            - name: APP_SERVICE_MANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: password
            - name: APP_SERVICE_MANAGER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceManager.secretName }}
                  key: username
            - name: APP_AVS_OAUTH_TOKEN_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: oauthTokenEndpoint
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: oauthUserName
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: oauthPassword
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_API_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: apiEndpoint
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: clientId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_API_KEY
              valueFrom:
                secretKeyRef:
                  key: apiKey
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_INTERNAL_TESTER_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  key: internalTesterAccessId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_EXTERNAL_TESTER_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  key: externalTesterAccessId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_GROUP_ID
              valueFrom:
                secretKeyRef:
                  key: groupId
                  name: {{ .Values.avs.secretName }}
            - name: APP_AVS_PARENT_ID
              valueFrom:
                secretKeyRef:
                  key: parentId
                  name: {{ .Values.avs.secretName }}
            - name: APP_KYMA_VERSION
              value: {{ .Values.kymaVersion }}
            - name: APP_ENABLE_ON_DEMAND_VERSION
              value: "{{ .Values.kymaVersionOnDemand }}"
            - name: APP_MANAGED_RUNTIME_COMPONENTS_YAML_FILE_PATH
              value: /config/additionalRuntimeComponents.yaml
            - name: APP_GARDENER_PROJECT
              value: {{ .Values.gardener.project }}
            - name: APP_GARDENER_KUBECONFIG_PATH
              value: {{ .Values.gardener.kubeconfigPath }}
            - name: APP_PROVISIONING_KUBERNETES_VERSION
              value: {{ .Values.gardener.kubernetesVersion }}
            - name: APP_DEFAULT_REQUEST_REGION
              value: "{{ .Values.broker.defaultRequestRegion }}"
            - name: APP_AUDITLOG_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-url-basic
            - name: APP_AUDITLOG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secretName }}
                  key: auditlog-user
            - name: APP_AUDITLOG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secretName }}
                  key: auditlog-password
            - name: APP_AUDITLOG_TENANT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-tenant
          ports:
            - name: http
              containerPort: {{ .Values.broker.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.broker.statusPort }}
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 3
            initialDelaySeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /gardener/kubeconfig
              name: gardener-kubeconfig
              readOnly: true
            - mountPath: /config
              name: config-volume
            - mountPath: /auditlog-script
              name: auditlog-script
          {{if eq .Values.global.database.embedded.enabled false}}
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{ end }}

        {{- if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql-instance-credentials/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql-instance-credentials
              readOnly: true
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
         {{end}}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "kyma-env-broker.fullname" . }}
      {{- if eq .Values.global.database.embedded.enabled false}}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{- end}}
      - name: gardener-kubeconfig
        secret:
          secretName: {{ .Values.gardener.secretName }}
      - name: auditlog-script
        configMap:
          name: {{ .Values.global.auditlog.script.configMapName }}
