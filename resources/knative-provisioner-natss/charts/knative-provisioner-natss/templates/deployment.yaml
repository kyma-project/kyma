apiVersion: eventing.knative.dev/v1alpha1
kind: ClusterChannelProvisioner
metadata:
  name: natss
spec: {}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: natss-controller
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: natss-controller
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - channels
  - channels/status
  - clusterchannelprovisioners
  - clusterchannelprovisioners/status
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: natss-channel-controller
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: natss-controller
subjects:
- kind: ServiceAccount
  name: natss-controller
  namespace: knative-eventing

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: natss-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: natss-controller
      clusterChannelProvisioner: natss
      role: controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        <<: *labels
        rand: {{ randAlpha 6 }}
    spec:
      containers:
      - image: {{ .Values.controller.image.location }}
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        name: controller
        env:
        - name: EB_USER
          valueFrom:
            secretKeyRef:
              name: nats-user-eventbus
              key: username
        - name: EB_PASS
          valueFrom:
            secretKeyRef:
              name: nats-user-eventbus
              key: password
        - name: DEFAULT_CLUSTER_ID
          value: kyma-nats-streaming
        - name: DEFAULT_NATSS_URL
          value: nats://$(EB_USER):$(EB_PASS)@{{ .Values.global.natsStreaming.url }}
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      serviceAccountName: natss-controller

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: natss-dispatcher
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: natss-dispatcher
  namespace: knative-eventing
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - channels
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - eventing.knative.dev
  resources:
  - channels/finalizers
  verbs:
  - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: natss-dispatcher
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: natss-dispatcher
subjects:
- kind: ServiceAccount
  name: natss-dispatcher
  namespace: knative-eventing

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: natss-dispatcher
  namespace: knative-eventing
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: natss-channel-dispatcher
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: natss-dispatcher
subjects:
- kind: ServiceAccount
  name: natss-dispatcher
  namespace: knative-eventing

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: natss-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      clusterChannelProvisioner: natss
      role: dispatcher
      app: natss-dispatcher
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        <<: *labels
        rand: {{ randAlpha 6 }}
    spec:
      serviceAccountName: natss-dispatcher
      containers:
        - name: dispatcher
          image: {{ .Values.dispatcher.image.location }}
          imagePullPolicy: {{ .Values.dispatcher.image.pullPolicy }}
          env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: EB_USER
            valueFrom:
              secretKeyRef:
                name: nats-user-eventbus
                key: username
          - name: EB_PASS
            valueFrom:
              secretKeyRef:
                name: nats-user-eventbus
                key: password
          - name: DEFAULT_CLUSTER_ID
            value: kyma-nats-streaming
          - name: DEFAULT_NATSS_URL
            value: nats://$(EB_USER):$(EB_PASS)@{{ .Values.global.natsStreaming.url }}
