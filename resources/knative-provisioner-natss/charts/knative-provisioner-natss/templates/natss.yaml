apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
    duck.knative.dev/addressable: "true"
  name: natss-addressable-resolver
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels
      - natsschannels/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
    duck.knative.dev/channelable: "true"
  name: natss-channelable-manipulator
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels
      - natsschannels/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-controller
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels
      - natsschannels/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/status
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: natss-ch-dispatcher
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels
      - natsschannels/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - natsschannels/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch

---
apiVersion: v1
kind: Service
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
    messaging.knative.dev/channel: natss-channel
    messaging.knative.dev/role: dispatcher
  name: natss-ch-dispatcher
  namespace: knative-eventing
spec:
  ports:
    - name: http-dispatcher
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    messaging.knative.dev/channel: natss-channel
    messaging.knative.dev/role: dispatcher

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-dispatcher
  namespace: knative-eventing

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: natss-ch-controller
subjects:
  - kind: ServiceAccount
    name: natss-ch-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: natss-ch-dispatcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: natss-ch-dispatcher
subjects:
  - kind: ServiceAccount
    name: natss-ch-dispatcher
    namespace: knative-eventing

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-controller
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      messaging.knative.dev/channel: natss-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        rand: {{ randAlpha 6 }}
        messaging.knative.dev/channel: natss-channel
        messaging.knative.dev/role: controller
        kyma-project.io/dashboard: event-mesh
    spec:
      containers:
        - env:
            - name: EB_USER
              valueFrom:
                secretKeyRef:
                  name: nats-user-eventbus
                  key: username
            - name: EB_PASS
              valueFrom:
                secretKeyRef:
                  name: nats-user-eventbus
                  key: password
            - name: DEFAULT_CLUSTER_ID
              value: kyma-nats-streaming
            - name: DEFAULT_NATSS_URL
              value: nats://$(EB_USER):$(EB_PASS)@{{ .Values.global.natsStreaming.url }}
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: {{ .Values.controller.image.location }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
      serviceAccountName: natss-ch-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    contrib.eventing.knative.dev/release: "v0.12.0"
  name: natss-ch-dispatcher
  namespace: knative-eventing
spec:
  replicas: 1
  selector:
    matchLabels:
      messaging.knative.dev/channel: natss-channel
      messaging.knative.dev/role: dispatcher
  template:
    metadata:
      labels:
        rand: {{ randAlpha 6 }}
        app: natss-ch-dispatcher
        messaging.knative.dev/channel: natss-channel
        messaging.knative.dev/role: dispatcher
        kyma-project.io/dashboard: event-mesh
    spec:
      containers:
        - env:
            - name: EB_USER
              valueFrom:
                secretKeyRef:
                  name: nats-user-eventbus
                  key: username
            - name: EB_PASS
              valueFrom:
                secretKeyRef:
                  name: nats-user-eventbus
                  key: password
            - name: DEFAULT_CLUSTER_ID
              value: kyma-nats-streaming
            - name: DEFAULT_NATSS_URL
              value: nats://$(EB_USER):$(EB_PASS)@{{ .Values.global.natsStreaming.url }}
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: JAEGER_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image:  {{ .Values.dispatcher.image.location }}
          imagePullPolicy: {{ .Values.dispatcher.image.pullPolicy }}
          name: dispatcher
          ports:
            - containerPort: 9090
              name: metrics
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
      serviceAccountName: natss-ch-dispatcher
      volumes:
        - configMap:
            name: config-logging
          name: config-logging

---
