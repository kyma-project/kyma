apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
    {{- toYaml .Values.extraLabels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
      {{- toYaml .Values.extraLabels | nindent 6 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        {{- include "operator.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.extraLabels | nindent 8 }}
    spec:
      serviceAccountName: {{ include "operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if or .Values.priorityClassName .Values.global.priorityClassName }}
      priorityClassName: {{ coalesce .Values.priorityClassName .Values.global.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
            - --sync-period={{.Values.syncPeriod}}
            - --cert-dir=/var/run/telemetry-webhook
            - --telemetry-namespace={{ .Release.Namespace }}
            - --fluent-bit-cm-name={{ .Release.Name }}-{{ .Values.logProcessor }}
            - --fluent-bit-sections-cm-name={{ .Release.Name }}-{{ .Values.logProcessor }}-sections
            - --fluent-bit-parser-cm-name={{ .Release.Name }}-{{ .Values.logProcessor }}-parsers
            - --fluent-bit-ds-name={{ .Release.Name }}-{{ .Values.logProcessor }}
            - --fluent-bit-env-secret={{ .Release.Name }}-{{ .Values.logProcessor }}-env
            - --fluent-bit-files-cm={{ .Release.Name }}-{{ .Values.logProcessor }}-files
            - --fluent-bit-filesystem-buffer-limit={{ .Values.filesystemBufferLimit }}
            - --fluent-bit-denied-filter-plugins={{ join "," .Values.deniedPlugins.filter}}
            - --fluent-bit-denied-output-plugins={{ join "," .Values.deniedPlugins.output}}
            - --fluent-bit-max-pipelines={{.Values.maxLogPipelines}}
{{- if not .Values.controllers.logging.enabled }}
            - --enable-logging=false
{{- end }}
{{- if not .Values.controllers.tracing.enabled }}
            - --enable-tracing=false
{{- end }}
          name: manager
          ports:
          - containerPort: 9443
            protocol: TCP
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.telemetry_operator) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APP_LOG_FORMAT
              value: {{ .Values.global.log.format | quote }}
            - name: APP_LOG_LEVEL
              value: {{ .Values.global.log.level | quote }}
          volumeMounts:
          - mountPath: /var/run/telemetry-webhook
            name: telemetry-webhook-cert
            readOnly: true
      volumes:
      - name: telemetry-webhook-cert
        secret:
          secretName: {{ template "fullname" . }}-webhook-cert
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
