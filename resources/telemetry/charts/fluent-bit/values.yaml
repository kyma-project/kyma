# Default values for fluent-bit.

# kind -- DaemonSet or Deployment
kind: DaemonSet

# replicaCount -- Only applicable if kind=Deployment
replicaCount: 1

image:
  pullPolicy: IfNotPresent

testFramework:
  image:
    pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

rbac:
  create: true
  nodeAccess: false

podSecurityPolicy:
  create: false
  annotations: {}

openShift:
  # Sets Openshift support
  enabled: false
  # Creates SCC for Fluent-bit when Openshift support is enabled
  securityContextConstraints:
    create: true
    annotations: {}

podSecurityContext:
  runAsNonRoot: false
  seccompProfile:
    type: RuntimeDefault
#   fsGroup: 2000

hostNetwork: false
dnsPolicy: ClusterFirst

dnsConfig: {}
#   nameservers:
#     - 1.2.3.4
#   searches:
#     - ns1.svc.cluster-domain.example
#     - my.dns.search.suffix
#   options:
#     - name: ndots
#       value: "2"
#     - name: edns0

hostAliases: []
#   - ip: "1.2.3.4"
#     hostnames:
#     - "foo.local"
#     - "bar.local"

securityContext:
  allowPrivilegeEscalation: false
  privileged: false
  capabilities:
    drop:
      - ALL
    add:
      - FOWNER
  readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 2020
  labels: {}
  # nodePort: 30020
  # clusterIP: 172.16.10.1
  annotations: {}
#   prometheus.io/path: "/api/v1/metrics/prometheus"
#   prometheus.io/port: "2020"
#   prometheus.io/scrape: "true"

serviceMonitor:
  enabled: true
  serviceMonitorPorts:
    - port: http-metrics
      path: /metrics

#   namespace: monitoring
#   interval: 10s
#   scrapeTimeout: 10s
#   jobLabel: fluentbit
#   selector:
#    prometheus: my-prometheus
#  ## metric relabel configs to apply to samples before ingestion.
#  ##
#  metricRelabelings:
#    - sourceLabels: [__meta_kubernetes_service_label_cluster]
#      targetLabel: cluster
#      regex: (.*)
#      replacement: ${1}
#      action: replace
#  ## relabel configs to apply to samples after ingestion.
#  ##
#  relabelings:
#    - sourceLabels: [__meta_kubernetes_pod_node_name]
#      separator: ;
#      regex: ^(.*)$
#      targetLabel: nodename
#      replacement: $1
#      action: replace

prometheusRule:
  enabled: false
#   namespace: ""
#   additionalLabels: {}
#   rules:
#   - alert: NoOutputBytesProcessed
#     expr: rate(fluentbit_output_proc_bytes_total[5m]) == 0
#     annotations:
#       message: |
#         Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
#         bytes for at least 15 minutes.
#       summary: No Output Bytes Processed
#     for: 15m
#     labels:
#       severity: critical

dashboards:
  enabled: true
  labelKey: grafana_dashboard
  annotations: {}
  namespace: ""

lifecycle: {}
  # preStop:
  #   exec:
  #     command: ["/bin/sh", "-c", "sleep 20"]

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http

resources:
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 10m
    memory: 50Mi

## only available if kind is Deployment
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  # - host: fluent-bit.example.tld
  extraHosts: []
  # - host: fluent-bit-extra.example.tld
      ## specify extraPort number
  #   port: 5170
  tls: []
  #  - secretName: fluent-bit-example-tld
  #    hosts:
  #      - fluent-bit.example.tld

## only available if kind is Deployment
podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: "30%"

nodeSelector: {}

tolerations: []

affinity: {}

labels: {}

annotations: {}

podAnnotations: {}

podLabels: {}

priorityClassName: ""

env: []
#  - name: FOO
#    value: "bar"

# The envWithTpl array below has the same usage as "env", but is using the tpl function to support templatable string.
# This can be useful when you want to pass dynamic values to the Chart using the helm argument "--set <variable>=<value>"
# https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
envWithTpl: []
#  - name: FOO_2
#    value: "{{ .Values.foo2 }}"
#
# foo2: bar2

envFrom:
  - secretRef:
      name: telemetry-fluent-bit-env
      optional: true

extraContainers: |
  - name: exporter
    image: {{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.directory_size_exporter) }}
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        memory: 5Mi
    args:
      - --storage-path=/data/flb-storage/
      - --metric-name=telemetry_fsbuffer_usage_bytes
    ports:
      - name: http-metrics
        containerPort: 2021
        protocol: TCP
    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    volumeMounts:
      - name: varfluentbit
        mountPath: /data

flush: 1

metricsPort: 2020

extraPorts:
  - name: http-metrics
    containerPort: 2021
    protocol: TCP
    port: 2021


extraVolumes:
  - name: shared-fluent-bit-config
    emptyDir: {}
  - name: dynamic-config
    configMap:
      name: telemetry-fluent-bit-sections
      optional: true
  - name: dynamic-parsers-config
    configMap:
      name: telemetry-fluent-bit-parsers
      optional: true
  - name: dynamic-files
    configMap:
      name: telemetry-fluent-bit-files
      optional: true
  - name: varfluentbit
    hostPath:
      path: /var/telemetry-fluent-bit

extraVolumeMounts:
  - name: dynamic-files
    mountPath: /files

updateStrategy: {}
#   type: RollingUpdate
#   rollingUpdate:
#     maxUnavailable: 1

# Make use of a pre-defined configmap instead of the one templated here
existingConfigMap: ""
dynamicConfigMap: "telemetry-fluent-bit-sections" # used for dynamic config
dynamicParsersConfigMap: "telemetry-fluent-bit-parsers" # used for dynamic config

networkPolicy:
  enabled: false
#   ingress:
#     from: []

luaScripts:
  filter-script.lua: |
    function kubernetes_map_keys(tag, timestamp, record)
      if record.kubernetes == nil then
        return 0
      end
      map_keys(record.kubernetes.annotations)
      map_keys(record.kubernetes.labels)
      return 1, timestamp, record
    end
    function map_keys(table)
      if table == nil then
        return
      end
      local new_table = {}
      local changed_keys = {}
      for key, val in pairs(table) do
        local mapped_key = string.gsub(key, "[%/%.]", "_")
        if mapped_key ~= key then
            new_table[mapped_key] = val
            changed_keys[key] = true
        end
      end
      for key in pairs(changed_keys) do
        table[key] = nil
      end
      for key, val in pairs(new_table) do
        table[key] = val
      end
    end

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/configuration-file
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        Parsers_File dynamic-parsers/parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        storage.path /data/flb-storage/
        storage.metrics on

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
    [INPUT]
        Name tail
        Alias tele-tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri, go, python, java
        Tag tele.*
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
        Refresh_Interval 10
        DB /data/flb_kube.db
        storage.type  filesystem
 
    [INPUT]
        Name tail
        Path /null.log
        Tag null.*
        Alias null-tail

  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
    [FILTER]
        Name kubernetes
        Match tele.*
        Merge_Log On
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
        Buffer_Size 1MB

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
    [OUTPUT]
        Name null
        Match null.*
        Alias null-null
  ## https://docs.fluentbit.io/manual/pipeline/parsers
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

  # This allows adding more files with arbitary filenames to /fluent-bit/etc by providing key/value pairs.
  # The key becomes the filename, the value becomes the file content.
  extraFiles:
      loki-labelmap.json: |
            {
              "kubernetes": {
                  "container_name": "container",
                  "host": "node",
                  "labels": {
                    "app": "app",
                    "app.kubernetes.io/component": "component",
                    "app.kubernetes.io/name": "app",
                    "serverless.kyma-project.io/function-name": "function"
                  },
                  "namespace_name": "namespace",
                  "pod_name": "pod"
                },
              "stream": "stream"
            }

# The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
volumeMounts:
  - name: shared-fluent-bit-config
    mountPath: /fluent-bit/etc
  - name: config
    mountPath: /fluent-bit/etc/fluent-bit.conf
    subPath: fluent-bit.conf
  - name: config
    mountPath: /fluent-bit/etc/custom_parsers.conf
    subPath: custom_parsers.conf

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: varfluentbit
    mountPath: /data

args: []

command: []

# This supports either a structured array or a templatable string
# Array mode
# initContainers:
#   - name: do-something
#     image: bitnami/kubectl:1.22
#     command: ['kubectl', 'version']

# String mode
# initContainers: |-
#   - name: do-something
#     image: bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}
#     command: ['kubectl', 'version']
initContainers: |-
  - name: prep-fluent-bit-config
    image: "{{ include "imageurl" (dict "reg" $.Values.global.containerRegistry "img" $.Values.global.images.busybox) }}"
    command: ['sh', '-c', 'cp /main/* /fluent-bit/etc/ && mkdir -p /fluent-bit/etc/dynamic/ && cp /dynamic/* /fluent-bit/etc/dynamic && mkdir -p /fluent-bit/etc/dynamic-parsers/ && cp /dynamic-parsers/* /fluent-bit/etc/dynamic-parsers || touch /fluent-bit/etc/dynamic/empty.conf']
    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    volumeMounts:
    - mountPath: /fluent-bit/etc/
      name: shared-fluent-bit-config
    - mountPath: /main/fluent-bit.conf
      name: config
      subPath: fluent-bit.conf
    - mountPath: /dynamic
      name: dynamic-config
    - mountPath: /dynamic-parsers
      name: dynamic-parsers-config

logLevel: warn
