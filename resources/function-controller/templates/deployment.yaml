apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tplValue" ( dict "value" .Values.global.labels "context" . ) | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "tplValue" ( dict "value" .Values.global.labels "context" . ) | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "tplValue" ( dict "value" .Values.global.labels "context" . ) | nindent 8 }}
        {{- if .Values.deployment.labels }}
          {{ include "tplValue" ( dict "value" .Values.deployment.labels "context" . ) | nindent 8 }}
        {{- end }}
      {{- if .Values.deployment.annotations }}
      annotations:
        {{- include "tplValue" ( dict "value" .Values.deployment.annotations "context" . ) | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: kube-rbac-proxy
        image: "{{ .Values.images.kubeRbacProxy.repository }}:{{ .Values.images.kubeRbacProxy.tag }}"
        imagePullPolicy: {{ .Values.images.kubeRbacProxy.pullPolicy }}
        args:
        - --secure-listen-address
        - "0.0.0.0:{{ .Values.metrics.authProxy.port.external }}"
        - --upstream
        - "http://127.0.0.1:{{ .Values.metrics.manager.port }}/"
        - --logtostderr=true
        - --v=10
        ports:
          - containerPort: {{ .Values.metrics.authProxy.port.external }}
            name: {{ .Values.metrics.authProxy.port.name }}
      - name: manager
        command:
        - /manager
        args:
        {{- if .Values.metrics.enabled }}
        - --metrics-addr
        - "127.0.0.1:{{ .Values.metrics.manager.port }}"
        {{- end }}
        {{- if gt (int .Values.deployment.replicas) 1 }}
        - --enable-leader-election
        {{- end }}
        image: "{{ .Values.images.manager.repository }}:{{ .Values.images.manager.tag }}"
        imagePullPolicy: {{ .Values.images.manager.pullPolicy }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SECRET_NAME
            value: {{ template "fullname" . }}-registry-credentials
          - name: CONTROL_PLANE
            value: "controller-manager"
          - name: BUILD_TIMEOUT
            value: "20"
          - name: CONTROLLER_CONFIGMAP
            value: {{ template "fullname" . }}-config
          - name: CONTROLLER_CONFIGMAP_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- if .Values.deployment.resources }}
        resources:
          {{- include "tplValue" ( dict "value" .Values.deployment.resources "context" . ) | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.targerPort }}
          name: webhook-server
          protocol: TCP
        - containerPort: {{ .Values.metrics.manager.port }}
          name: {{ .Values.metrics.manager.name }}
          protocol: {{ .Values.metrics.manager.protocol }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "fullname" .}}
