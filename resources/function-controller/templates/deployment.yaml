apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 4 }}
  {{- if .Values.deployment.labels }}
    {{- include "tplValue" ( dict "value" .Values.deployment.labels "context" . ) | nindent 4 }}
  {{- end }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{ include "tplValue" ( dict "value" .Values.deployment.annotations "context" . ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 6 }}
  replicas: {{ .Values.deployment.replicas }}
  {{- if .Values.deployment.extraProperties }}
  {{ include "tplValue" ( dict "value" .Values.deployment.extraProperties "context" . ) | nindent 2 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 8 }}
      {{- if .Values.pod.labels }}
        {{ include "tplValue" ( dict "value" .Values.pod.labels "context" . ) | nindent 8 }}
      {{- end }}
      {{- if or .Values.pod.annotations (and .Values.metrics.enabled .Values.metrics.pod.annotations) }}
      annotations:
      {{- if .Values.pod.annotations }}
        {{ include "tplValue" ( dict "value" .Values.pod.annotations "context" . ) | nindent 8 }}
      {{- end }}
      {{- if and .Values.metrics.enabled .Values.metrics.pod.annotations }}
        {{ include "tplValue" ( dict "value" .Values.metrics.pod.annotations "context" . ) | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      {{- if .Values.pod.extraProperties }}
      {{ include "tplValue" ( dict "value" .Values.pod.extraProperties  "context" . ) | nindent 6 }}
      {{- end }}
      containers:
        - name: kube-rbac-proxy
          image: "{{ .Values.images.kubeRbacProxy.repository }}:{{ .Values.images.kubeRbacProxy.tag }}"
          imagePullPolicy: {{ .Values.images.kubeRbacProxy.pullPolicy }}
          args:
          - --secure-listen-address
          - "0.0.0.0:{{ .Values.metrics.authProxy.port.port }}"
          - --upstream
          - "http://127.0.0.1:{{ .Values.metrics.manager.port.port }}/"
          - --logtostderr=true
          - --v=10
          {{- if .Values.containers.kubeRbacProxy.resources }}
          resources:
            {{- include "tplValue" ( dict "value" .Values.containers.kubeRbacProxy.resources "context" . ) | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.metrics.authProxy.port.port }}
              name: {{ .Values.metrics.authProxy.port.name }}
          {{- if .Values.containers.kubeRbacProxy.extraProperties }}
          {{ include "tplValue" ( dict "value" .Values.containers.kubeRbacProxy.extraProperties "context" . ) | nindent 10 }}
          {{- end }}
        - name: manager
          image: "{{ .Values.images.manager.repository }}:{{ .Values.images.manager.tag }}"
          imagePullPolicy: {{ .Values.images.manager.pullPolicy }}
          command:
          - /app/manager
          {{- if .Values.containers.manager.resources }}
          resources:
            {{- include "tplValue" ( dict "value" .Values.containers.manager.resources "context" . ) | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.metrics.manager.port.port }}
              name: {{ .Values.metrics.manager.port.name }}
              protocol: {{ .Values.metrics.manager.port.protocol }}
          env:
          {{- if .Values.metrics.enabled }}
            - name: APP_METRICS_ADDRESS
              value: "127.0.0.1:{{ .Values.metrics.manager.port.port }}"
          {{- end }}
          {{- if gt (int .Values.deployment.replicas) 1 }}
            - name: APP_LEADER_ELECTION_ENABLED
              value: "true"    
          {{- end }}
            - name: APP_FUNCTION_BUILD_RUNTIME_CONFIG_MAP_NAME
              value: dockerfile-nodejs-12
            - name: APP_FUNCTION_DOCKER_EXTERNAL_ADDRESS
              value: registry.{{ .Values.global.ingress.domainName }}
            - name: APP_FUNCTION_BUILD_REQUESTS_CPU
              value: 400m
            - name: APP_FUNCTION_BUILD_REQUESTS_MEMORY
              value: 700Mi
            - name: APP_FUNCTION_BUILD_LIMITS_CPU
              value: 800m
            - name: APP_FUNCTION_BUILD_LIMITS_MEMORY
              value: 1200Mi
            {{ include "createEnv" ( dict "name" "BUILD_TIMEOUT" "value" .Values.containers.manager.envs.buildTimeout "context" . ) | nindent 12 }}
          {{- if .Values.containers.manager.extraProperties }}
          {{ include "tplValue" ( dict "value" .Values.containers.manager.extraProperties "context" . ) | nindent 10 }}
          {{- end }}
