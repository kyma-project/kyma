{{ if not .Values.global.isLocalEnv }}
# minikube allows for insecure registries by default
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ template "registry-fullname" }}-self-signed-cert"
  namespace: istio-system
  labels:
  {{- include "tplValue" ( dict "value" .Values.global.commonLabels "context" . ) | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "registry-fullname" }}-cert-update
  template:
    metadata:
      labels:
        app: {{ template "registry-fullname" }}-cert-update
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      initContainers:
        - name: inject-certs
          securityContext:
            runAsUser: 0
          image: alpine:3.11
          resources:
            requests:
              cpu: 70m
              memory: 70Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: etckube
              mountPath: /kube-etc/
              readOnly: false
            - name: cert
              mountPath: /cert
              readOnly: true
            - name: scripts
              mountPath: /scripts
              readOnly: true
          command: ["sh", "/scripts/patch-docker.sh"]
      volumes:
        - name: etckube
          hostPath:
            path: /etc/
        - name: cert
          secret:
            optional: true
            secretName: kyma-gateway-certs
            items:
              - key: cert
                path: cert.txt
        - configMap:
            defaultMode: 420
            name: {{ template "registry-fullname" }}-cert-patch
          name: scripts
      containers:
        - name: pause
          image: gcr.io/google-containers/pause-amd64:3.2
          resources:
            requests:
              cpu: 20m
              memory: 20Mi
            limits:
              cpu: 30m
              memory: 30Mi
      terminationGracePeriodSeconds: 30
{{- end }}