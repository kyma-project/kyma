# Default values for function-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: "function-controller"

global:
  commonLabels:
    app: "{{ template \"name\" . }}"
    version: "{{ .Values.images.manager.tag }}"
    app.kubernetes.io/name: "{{ template \"name\" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/version: "{{ .Values.images.manager.tag }}"
    helm.sh/chart: "{{ include \"chart\" . }}"
  ingress:
    domainName:

serverlessNamespace:
  create: true
  name: serverless

images:
  manager:
    repository: eu.gcr.io/kyma-project/function-controller
    tag: e558a57e
    pullPolicy: IfNotPresent
  kubeRbacProxy:
    repository: gcr.io/kubebuilder/kube-rbac-proxy
    tag: v0.4.1
    pullPolicy: IfNotPresent

crds:
  install: true

deployment:
  replicas: 1
  labels: {}
  annotations: {}
  extraProperties: {}

pod:
  labels: {}
  annotations:
    sidecar.istio.io/inject: "false"
  extraProperties:
    terminationGracePeriodSeconds: 10

containers:
  manager:
    resources:
      limits:
        cpu: 150m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi
    extraProperties: {}
    envs:
      buildTimeout:
        value: "20"
  kubeRbacProxy:
    resources:
      limits:
        cpu: 150m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi
    extraProperties: {}

services:
  manager:
    type: ClusterIP
    port:
      name: http
      targerPort: 9876
      port: 443
      protocol: TCP
    labels: {}
    annotations: {}
  authProxy:
    type: ClusterIP
    port:
      name: https
      port: 8443
      targerPort: 8443
      protocol: TCP
    labels: {}
    annotations: {}

metrics:
  enabled: false
  manager:
    port:
      name: http-metrics
      port: 8080
      targerPort: 8080
      protocol: TCP
  authProxy:
    port:
      name: https
      port: 8443
      targerPort: 8443
      protocol: TCP
  serviceMonitor:
    create: true
    scrapeInterval: 30s
    labels: {}
    annotations: {}
  pod:
    labels: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/metrics"

config:
  dockerRegistry:

secret:
  namespace: serverless

  # registryAddress specifies which the web address (URL) of the registry to use the credentials
  # registryAddress: https://eu.gcr.io
  # build.knative.dev/docker-0: https://us.gcr.io
  # build.knative.dev/docker-1: https://eu.gcr.io
  # build.knative.dev/docker-2: https://asia.gcr.io
  # build.knative.dev/docker-3: https://gcr.io
  # build.knative.dev/docker-4: https://index.docker.io/v1/
  registryAddress:

  # password for the account
  # Generated by:
  #   cat /tmp/key.json | base64 -w 0
  registryUserName:

  # your docker registry username goes here
  # username NOT the email
  # Generated by:
  # echo -n _json_key | base64
  registryPassword:

backendModule:
  enable: true

clusterMicroFrontend:
  enable: true

cert-manager:
  enabled: true
  fullnameOverride: "function-controller-cert-manager"
