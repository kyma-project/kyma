# Default values for function-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: "function-controller"

tests:
  enabled: true
  image:
    repository: "eu.gcr.io/kyma-project/function-controller-test"
    tag: "PR-7581"
    pullPolicy: IfNotPresent
  disableConcurrency: true
  restartPolicy: Never
  resources:
    limits:
      memory: 128Mi
  envs:
    waitTimeout: 45m # sorry guys :sadgabens:
    verifySSL: "false"

global:
  commonLabels:
    app: "{{ template \"name\" . }}"
    version: "{{ .Values.images.manager.tag }}"
    app.kubernetes.io/name: "{{ template \"name\" . }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/version: "{{ .Values.images.manager.tag }}"
    helm.sh/chart: "{{ include \"chart\" . }}"
  dockerServicePort: 5000
  ingress:
    domainName:

images:
  manager:
    repository: eu.gcr.io/kyma-project/function-controller
    tag: PR-7404
    pullPolicy: IfNotPresent
  kubeRbacProxy:
    repository: gcr.io/kubebuilder/kube-rbac-proxy
    tag: v0.4.1
    pullPolicy: IfNotPresent

crds:
  install: true

deployment:
  replicas: 1
  labels: {}
  annotations: {}
  extraProperties: {}

pod:
  labels: {}
  annotations:
    sidecar.istio.io/inject: "false"
  extraProperties:
    terminationGracePeriodSeconds: 10

containers:
  manager:
    resources:
      limits:
        cpu: 150m
        memory: 150Mi
      requests:
        cpu: 10m
        memory: 32Mi
    extraProperties: {}
    envs:
      buildTimeout:
        value: "45m"
  kubeRbacProxy:
    resources:
      limits:
        cpu: 60m
        memory: 60Mi
      requests:
        cpu: 10m
        memory: 16Mi
    extraProperties: {}

services:
  manager:
    type: ClusterIP
    port:
      name: http
      targerPort: 9876
      port: 443
      protocol: TCP
    labels: {}
    annotations: {}
  authProxy:
    type: ClusterIP
    port:
      name: https
      port: 8443
      targerPort: 8443
      protocol: TCP
    labels: {}
    annotations: {}

metrics:
  enabled: false
  manager:
    port:
      name: http-metrics
      port: 8080
      targerPort: 8080
      protocol: TCP
  authProxy:
    port:
      name: https
      port: 8443
      targerPort: 8443
      protocol: TCP
  serviceMonitor:
    create: true
    scrapeInterval: 30s
    labels: {}
    annotations: {}
  pod:
    labels: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/metrics"

config:
  dockerRegistry: registry

secret:
  # registryAddress specifies which the web address (URL) of the registry to use the credentials
  # registryAddress: https://eu.gcr.io
  # build.knative.dev/docker-0: https://us.gcr.io
  # build.knative.dev/docker-1: https://eu.gcr.io
  # build.knative.dev/docker-2: https://asia.gcr.io
  # build.knative.dev/docker-3: https://gcr.io
  # build.knative.dev/docker-4: https://index.docker.io/v2/
  registryUserName: "{{ randAlphaNum 20 | b64enc }}"
  registryPassword: "{{ randAlphaNum 40 | b64enc }}"
  # both username and password are inputs of
  # docker run --entrypoint htpasswd registry:2 -Bbn user password
  # Look at docker-registry.secrets.htpasswd
  registry: "{{ template \"registry-fullname\" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.dockerServicePort }}"
  externalRegistry: "registry.{{ .Values.global.ingress.domainName -}}"

backendModule:
  enable: true

clusterMicroFrontend:
  enable: true

cert-manager:
  enabled: true
  fullnameOverride: "function-controller-cert-manager"

docker-registry:
  enabled: true
  fullnameOverride: "function-controller-docker-registry"
  secrets:
    haSharedSecret: "secret"
    htpasswd: "generated-in-init-container"
  extraVolumeMounts:
    - name: htpasswd-data
      mountPath: /data
  extraVolumes:
    - name: registry-credentials
      secret:
        secretName: function-controller-registry-credentials
        items:
          - key: username
            path: username.txt
          - key: password
            path: password.txt
    - name: htpasswd-data
      emptyDir: {}