{{- if not .Values.global.disableLegacyConnectivity }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    kyma-project.io/component: backend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        kyma-project.io/component: backend
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.global.containerRegistry.path }}/application-registry:{{ .Values.global.application_registry.version }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu }}
            memory: {{ .Values.deployment.resources.limits.memory }}
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu }}
            memory: {{ .Values.deployment.resources.requests.memory }}
        args:
          - "/applicationregistry"
          - "--proxyPort={{ .Values.deployment.args.proxyPort }}"
          - "--externalAPIPort={{ .Values.deployment.args.externalAPIPort }}"
          - "--uploadServiceURL={{ .Values.deployment.args.uploadServiceURL }}"
          - "--namespace={{ .Values.global.namespace }}"
          - "--requestTimeout={{ .Values.deployment.args.requestTimeout }}"
          - "--requestLogging={{ .Values.deployment.args.requestLogging }}"
          - "--specRequestTimeout={{ .Values.deployment.args.specRequestTimeout }}"
          - "--rafterRequestTimeout={{ .Values.deployment.args.rafterRequestTimeout }}"
          - "--insecureAssetDownload={{ .Values.deployment.args.insecureAssetDownload }}"
          - "--insecureSpecDownload={{ .Values.deployment.args.insecureSpecDownload }}"
          - "--detailedErrorResponse={{ .Values.deployment.args.detailedErrorResponse }}"
        ports:
          - containerPort: {{ .Values.deployment.args.externalAPIPort }}
            name: http-api-port
          - containerPort: 9090
            name: http-metrics
        securityContext:
          runAsUser: {{ .Values.global.podSecurityPolicy.runAsUser }}
          privileged: {{ .Values.global.podSecurityPolicy.privileged }}
          allowPrivilegeEscalation: {{ .Values.global.podSecurityPolicy.allowPrivilegeEscalation }}
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "minio.{{ .Values.global.ingress.domainName }}"
      {{ end }}
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}

{{- end }}