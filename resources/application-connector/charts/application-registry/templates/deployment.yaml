apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/includeInboundPorts: "{{ .Values.deployment.args.externalAPIPort }}"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.application_registry.dir }}application-registry:{{ .Values.global.application_registry.version }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
          - "/applicationregistry"
          - "--proxyPort={{ .Values.deployment.args.proxyPort }}"
          - "--externalAPIPort={{ .Values.deployment.args.externalAPIPort }}"
          - "--uploadServiceURL={{ .Values.deployment.args.uploadServiceURL }}"
          - "--namespace={{ .Values.global.namespace }}"
          - "--requestTimeout={{ .Values.deployment.args.requestTimeout }}"
          - "--requestLogging={{ .Values.deployment.args.requestLogging }}"
          - "--insecureAssetDownload={{ .Values.deployment.args.insecureAssetDownload }}"
        ports:
          - containerPort: {{ .Values.deployment.args.externalAPIPort }}
            name: http-api-port
          - containerPort: 9090
            name: metrics-port
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.minikubeIP }}
          hostnames:
            - "minio.{{ .Values.global.ingress.domainName }}"
      {{ end }}
