apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    control-plane: {{ .Chart.Name }}
    controller-tools.k8s.io: "1.0"
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      control-plane: {{ .Chart.Name }}
      controller-tools.k8s.io: "1.0"
  serviceName: {{ .Chart.Name }}-service
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        control-plane: {{ .Chart.Name }}
        controller-tools.k8s.io: "1.0"
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}
      initContainers:
        - name: helm-release-migrator
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200617-32c1f3ff
          command:
            - /bin/bash
            - -c
            - |
{{ .Files.Get "files/helm-release-migration.sh" | indent 14 }}
      containers:
      - name: {{ .Chart.Name }}
        ports:
          - containerPort: 8090
            name: http-health
        args:
        - "/manager"
        - "--appName={{ .Values.controller.args.appName }}"
        - "--domainName={{ .Values.global.ingress.domainName }}"
        - "--namespace={{ .Values.global.namespace }}"
        - "--helmDriver={{ .Values.controller.args.helmDriver }}"
        - "--applicationGatewayImage={{ .Values.global.containerRegistry.path }}/application-gateway:{{ .Values.global.application_gateway.version }}"
        - "--applicationGatewayTestsImage={{ .Values.global.containerRegistry.path }}/application-gateway-tests:c608dbf3" # Use hardcoded value of tests image as this is the last version that operate without API packages. The approach with API packages was changed and tests are no longer deployed with the Gateway. TODO: should be removed after full transition to API packages
        - "--eventServiceImage={{ .Values.global.containerRegistry.path }}/event-service:{{ .Values.global.event_service.version }}"
        - "--eventServiceTestsImage={{ .Values.global.containerRegistry.path }}/event-service-integration-tests:{{ .Values.global.event_service_integration_tests.version }}"
        - "--applicationConnectivityValidatorImage={{ .Values.global.containerRegistry.path }}/application-connectivity-validator:{{ .Values.global.application_connectivity_validator.version }}"
        - "--syncPeriod={{ .Values.controller.args.syncPeriod }}"
        - "--installationTimeout={{ .Values.controller.args.installationTimeout }}"
        - "--gatewayOncePerNamespace={{ .Values.global.disableLegacyConnectivity }}"
        - "--strictMode={{ .Values.global.strictMode }}"
        - "--healthPort={{ .Values.controller.args.healthPort }}"
        image: {{ .Values.global.containerRegistry.path }}/application-operator:{{ .Values.global.application_operator.version }}
        imagePullPolicy: {{ .Values.controller.image.pullPolicy | quote }}
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      terminationGracePeriodSeconds: 10
