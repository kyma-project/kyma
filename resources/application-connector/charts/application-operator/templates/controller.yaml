apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    control-plane: {{ .Chart.Name }}
    controller-tools.k8s.io: "1.0"
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    kyma-project.io/component: controller
spec:
  selector:
    matchLabels:
      control-plane: {{ .Chart.Name }}
      controller-tools.k8s.io: "1.0"
  serviceName: {{ .Chart.Name }}-service
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        control-plane: {{ .Chart.Name }}
        controller-tools.k8s.io: "1.0"
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        kyma-project.io/component: controller
    spec:
      serviceAccountName: {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        ports:
          - containerPort: 8090
            name: http-health
        args:
        - "/manager"
        - "--appName={{ .Values.controller.args.appName }}"
        - "--domainName={{ .Values.global.ingress.domainName }}"
        - "--namespace={{ .Values.global.namespace }}"
        - "--helmDriver={{ .Values.controller.args.helmDriver }}"
        - "--applicationGatewayImage={{ .Values.global.containerRegistry.path }}/application-gateway:{{ .Values.global.application_gateway.version }}"
        - "--applicationGatewayTestsImage={{ .Values.global.containerRegistry.path }}/application-gateway-legacy-tests:{{ .Values.global.application_gateway_legacy_tests.version }}"
        - "--eventServiceImage={{ .Values.global.containerRegistry.path }}/event-service:{{ .Values.global.event_service.version }}"
        - "--eventServiceTestsImage={{ .Values.global.containerRegistry.path }}/event-service-integration-tests:{{ .Values.global.event_service_integration_tests.version }}"
        - "--applicationConnectivityValidatorImage={{ .Values.global.containerRegistry.path }}/application-connectivity-validator:{{ .Values.global.application_connectivity_validator.version }}"
        - "--syncPeriod={{ .Values.controller.args.syncPeriod }}"
        - "--installationTimeout={{ .Values.controller.args.installationTimeout }}"
        - "--gatewayOncePerNamespace={{ .Values.global.disableLegacyConnectivity }}"
        - "--strictMode={{ .Values.global.strictMode }}"
        - "--healthPort={{ .Values.controller.args.healthPort }}"
        - "--profile={{ .Values.controller.resources.profile }}"
        - "--isBEBEnabled={{ .Values.global.isBEBEnabled }}"
        - "--podSecurityPolicyEnabled={{ .Values.global.podSecurityPolicy.enabled }}"
        env:
          - name: APP_LOG_FORMAT
            value: {{ .Values.global.log.format | quote }}
          - name: APP_LOG_LEVEL
            value: {{ .Values.global.log.level | quote }}
        image: {{ .Values.global.containerRegistry.path }}/application-operator:{{ .Values.global.application_operator.version }}
        imagePullPolicy: {{ .Values.controller.image.pullPolicy | quote }}
        resources:
          limits:
            cpu: {{ .Values.controller.resources.limits.cpu }}
            memory: {{ .Values.controller.resources.limits.memory }}
          requests:
            cpu: {{ .Values.controller.resources.requests.cpu }}
            memory: {{ .Values.controller.resources.requests.memory }}
        securityContext:
          runAsUser: {{ .Values.global.podSecurityPolicy.runAsUser }}
          privileged: {{ .Values.global.podSecurityPolicy.privileged }}
          allowPrivilegeEscalation: {{ .Values.global.podSecurityPolicy.allowPrivilegeEscalation }}
      terminationGracePeriodSeconds: 10
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}
