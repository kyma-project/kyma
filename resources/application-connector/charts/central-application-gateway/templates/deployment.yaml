apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  namespace: "{{ .Values.global.systemNamespace }}"
  labels:
    app: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
    app.kubernetes.io/name: '{{ template "name" . }}'
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{.Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: '{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.central_application_gateway) }}'
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
          - "/app/applicationgateway"
          - "--applicationSecretsNamespace={{ .Values.global.systemNamespace }}"
          - "--externalAPIPort={{ .Values.deployment.args.externalAPIPort }}"
          - "--logLevel={{ .Values.deployment.args.logLevel }}"
          - "--proxyCacheTTL={{ .Values.deployment.args.proxyCacheTTL }}"
          - "--proxyPort={{ .Values.deployment.args.proxyPort }}"
          - "--proxyPortCompass={{ .Values.deployment.args.proxyPortCompass }}"
          - "--proxyTimeout={{ .Values.deployment.args.proxyTimeout }}"
          - "--requestTimeout={{ .Values.deployment.args.requestTimeout }}"
        readinessProbe:
          httpGet:
            path: /v1/health
            port: {{ .Values.deployment.args.externalAPIPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/health
            port: {{ .Values.deployment.args.externalAPIPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu }}
            memory: {{ .Values.deployment.resources.limits.memory }}
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu }}
            memory: {{ .Values.deployment.resources.requests.memory }}
        ports:
          - containerPort: {{ .Values.deployment.args.proxyPort }}
            name: http-proxy
          - containerPort: {{ .Values.deployment.args.proxyPortCompass }}
            name: http-proxy-mps
          - containerPort: {{ .Values.deployment.args.externalAPIPort }}
            name: http-api-port
        securityContext:
          runAsUser: {{ .Values.global.podSecurityPolicy.runAsUser }}
          privileged: {{ .Values.global.podSecurityPolicy.privileged }}
          allowPrivilegeEscalation: {{ .Values.global.podSecurityPolicy.allowPrivilegeEscalation }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
