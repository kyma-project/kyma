{{- if not .Values.global.disableLegacyConnectivity }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.global.containerRegistry.path }}/connector-service:{{ .Values.global.connector_service.version }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
          - "/connectorservice"
          - "--appName={{ .Chart.Name }}"
          - "--externalAPIPort={{ .Values.deployment.args.externalAPIPort }}"
          - "--internalAPIPort={{ .Values.deployment.args.internalAPIPort }}"
          - "--namespace={{ .Values.global.namespace }}"
          - "--tokenLength={{ .Values.deployment.args.tokenLength }}"
          - "--appTokenExpirationMinutes={{ .Values.deployment.args.appTokenExpirationMinutes }}"
          - "--runtimeTokenExpirationMinutes={{ .Values.deployment.args.runtimeTokenExpirationMinutes }}"
          - "--caSecretName={{ .Values.deployment.args.caSecretNamespace }}/{{ .Values.deployment.args.caSecretName }}"
          - "--rootCACertificateSecretName={{ .Values.deployment.args.rootCACertificateSecretNamespace }}/{{ .Values.deployment.args.rootCACertificateSecretName }}"
          - "--requestLogging={{ .Values.deployment.args.requestLogging }}"
          - "--connectorServiceHost=connector-service.{{ .Values.global.ingress.domainName }}"
          - "--gatewayBaseURL=https://gateway.{{ .Values.global.ingress.domainName }}"
          - "--certificateProtectedHost=gateway.{{ .Values.global.ingress.domainName }}"
          - "--appsInfoURL={{ tpl .Values.deployment.args.appsInfoURL . }}"
          - "--runtimesInfoURL={{ tpl .Values.deployment.args.runtimesInfoURL . }}"
          - "--appCertificateValidityTime={{ .Values.deployment.args.appValidityTime }}"
          - "--runtimeCertificateValidityTime={{ .Values.deployment.args.runtimeValidityTime }}"
          - "--central={{ .Values.deployment.args.central }}"
          - "--revocationConfigMapName={{ .Values.deployment.args.revocationConfigMapName }}"
          - "--lookupEnabled={{ .Values.deployment.externalClusterLookup.enabled }}"
          - "--lookupConfigMapPath={{ .Values.deployment.externalClusterLookup.path }}"
        {{- if .Values.deployment.externalClusterLookup.enabled }}
        volumeMounts:
        - name: {{ .Values.deployment.externalClusterLookup.lookupConfigMapName }}
          mountPath: {{ .Values.deployment.externalClusterLookup.path }}
        {{- end }}
        env:
          - name: COUNTRY
            value: {{ .Values.deployment.envvars.country | quote }}
          - name: ORGANIZATION
            value: {{ .Values.deployment.envvars.organization | quote }}
          - name: ORGANIZATIONALUNIT
            value: {{ .Values.deployment.envvars.organizationalunit | quote }}
          - name: LOCALITY
            value: {{ .Values.deployment.envvars.locality | quote }}
          - name: PROVINCE
            value: {{ .Values.deployment.envvars.province | quote }}
        ports:
          - containerPort: {{ .Values.deployment.args.internalAPIPort }}
            name: http-int
          - containerPort: {{ .Values.deployment.args.externalAPIPort }}
            name: http-ext
          - containerPort: 9090
            name: http-metrics
        securityContext:
          runAsUser: {{ .Values.deployment.runAsUser }}
      {{- if .Values.deployment.externalClusterLookup.enabled }}
      volumes:
      - name: {{ .Values.deployment.externalClusterLookup.lookupConfigMapName }}
        configMap:
          name: {{ .Values.deployment.externalClusterLookup.lookupConfigMapName }}
      {{- end }}

{{- end }}