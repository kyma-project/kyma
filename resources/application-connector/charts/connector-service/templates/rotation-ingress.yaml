apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: connector-service-rotation
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tlsSecret: {{ .Values.ingress.tlsSecret }}
  annotations:
    nginx.ingress.kubernetes.io/ingress-class: "nginx"
    nginx.ingress.kubernetes.io/allow-http: "false"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Values.ingress.authSecret }}
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # TODO - common name need to be validated in service / should validate whole subject
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Client-Certificate $ssl_client_escaped_cert;
spec:
  rules:
    - host: gateway.{{ .Values.global.domainName }}
      http:
        paths:
          - path: /v1/applications/certificates/renewals
            backend:
              serviceName: connector-service-external-api
              servicePort: 8081
          - path: /v1/runtimes/certificates/renewals
            backend:
              serviceName: connector-service-external-api
              servicePort: 8081

  tls:
    - hosts:
        - gateway.{{ .Values.global.domainName }}
      secretName: {{ .Values.ingress.tlsSecret }}
