apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.systemNamespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{.Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.global.containerRegistry.path }}/central-application-connectivity-validator:{{ .Values.global.central_application_connectivity_validator.version }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
          - "/centralapplicationconnectivityvalidator"
          - "--proxyPort={{ .Values.deployment.args.proxyPort }}"
          - "--externalAPIPort={{ .Values.deployment.args.externalAPIPort }}"
          - "--eventServicePathPrefixV1=/%%APP_NAME%%/v1/events"
          - "--eventServicePathPrefixV2=/%%APP_NAME%%/v2/events"
          - "--eventMeshHost={{ .Values.eventPublisherProxy.service.name }}.{{ .Values.eventPublisherProxy.service.namespace }}"
          - "--eventMeshDestinationPath=/{{ .Values.eventPublisherProxy.publishCEEndpoint }}"
          - "--eventMeshPathPrefix=/%%APP_NAME%%/events"
          - "--appRegistryPathPrefix=/%%APP_NAME%%/v1/metadata"
          - "--appRegistryHost={{ .Values.deployment.args.appRegistryHost }}"
          - "--appNamePlaceholder=%%APP_NAME%%"
          - "--cacheExpirationSeconds={{ .Values.deployment.args.cacheExpirationSeconds }}"
          - "--cacheCleanupIntervalSeconds={{ .Values.deployment.args.cacheCleanupIntervalSeconds }}"
        env:
          - name: APP_LOG_FORMAT
            value: {{ .Values.global.log.format | quote }}
          - name: APP_LOG_LEVEL
            value: {{ .Values.global.log.level | quote }}
        readinessProbe:
          httpGet:
            path: /v1/health
            port: {{ .Values.deployment.args.externalAPIPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/health
            port: {{ .Values.deployment.args.externalAPIPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu }}
            memory: {{ .Values.deployment.resources.limits.memory }}
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu }}
            memory: {{ .Values.deployment.resources.requests.memory }}
        ports:
          - containerPort: {{ .Values.deployment.args.proxyPort }}
            name: http-proxy
          - containerPort: {{ .Values.deployment.args.externalAPIPort }}
            name: http-api-port