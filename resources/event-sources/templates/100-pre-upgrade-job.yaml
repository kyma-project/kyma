apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "controller-manager.fullname" . }}-pre-upgrade
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "controller-manager.fullname" . }}-pre-upgrade
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs: ["list", "get"]
  - apiGroups: [""]
    resources: ["pods/portforward"]
    verbs: ["create", "get", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "controller-manager.fullname" . }}-pre-upgrade
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
subjects:
  - kind: ServiceAccount
    name: {{ template "controller-manager.fullname" . }}-pre-upgrade
    namespace: kyma-system
roleRef:
  kind: ClusterRole
  name: {{ template "controller-manager.fullname" . }}-pre-upgrade
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "controller-manager.fullname" . }}-pre-upgrade
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ template "controller-manager.fullname" . }}-pre-upgrade
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "controller-manager.fullname" . }}-pre-upgrade
      restartPolicy: Never
      containers:
      - name: job
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200312-fc2a4147
        terminationMessagePolicy: "FallbackToLogsOnError"
        command:
          - /bin/bash
          - -c
          - |
            set -e
            echo "*** event-sources-pre-upgrade job starts ***"

            echo "+ Deleting Event-Bus Helm package"
            kubectl get -n kyma-installer secret helm-secret \
              -o jsonpath="{.data['global\.helm\.ca\.crt']}" | base64 --decode > "$HOME/.helm/ca.pem"
            kubectl get -n kyma-installer secret helm-secret \
              -o jsonpath="{.data['global\.helm\.tls\.crt']}" | base64 --decode > "$HOME/.helm/cert.pem"
            kubectl get -n kyma-installer secret helm-secret \
              -o jsonpath="{.data['global\.helm\.tls\.key']}" | base64 --decode > "$HOME/.helm/key.pem"
            if [[ $(helm list --tls event-bus) ]]; then
              helm del --purge --tls event-bus
            else
              echo "+ No event-bus Helm release found"
            fi
