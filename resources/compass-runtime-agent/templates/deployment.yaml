apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccount: {{ .Chart.Name }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.runtimeAgent.dir }}compass-runtime-agent:{{ .Values.global.images.runtimeAgent.version }}
          imagePullPolicy: {{ .Values.compassRuntimeAgent.image.pullPolicy }}
          args:
            - "/compass-runtime-agent"
            - "--controllerSyncPeriod={{ .Values.compassRuntimeAgent.sync.controllerSyncPeriod }}"
            - "--minimalConfigSyncTime={{ .Values.compassRuntimeAgent.sync.minimalConfigSyncTime }}"
            - "--integrationNamespace={{ .Values.compassRuntimeAgent.resources.integrationNamespace }}"
            - "--gatewayPort={{ .Values.compassRuntimeAgent.resources.gatewayPort }}"
            - "--insecureConfigurationFetch={{ .Values.compassRuntimeAgent.config.insecureConfigurationFetch }}"
            - "--uploadServiceUrl={{ .Values.compassRuntimeAgent.resources.uploadServiceUrl }}"
          envFrom:
          - configMapRef:
              optional: true
              name: {{ .Values.compassRuntimeAgent.config.configMap.name }}
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "compass-gateway.{{ .Values.global.ingress.domainName }}"
      {{ end }}