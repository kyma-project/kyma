apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccount: {{ .Chart.Name }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.runtimeAgent.dir }}compass-runtime-agent:{{ .Values.global.images.runtimeAgent.version }}
          imagePullPolicy: {{ .Values.compassRuntimeAgent.image.pullPolicy }}
          args:
            - "/compass-runtime-agent"
          env:
            - name: APP_CONNECTION_CONFIG_MAP
              value: "{{ .Values.compassRuntimeAgent.config.configMap.namespace }}/{{ .Values.compassRuntimeAgent.config.configMap.name }}"
            - name: APP_CONTROLLER_SYNC_PERIOD
              value: "{{ .Values.compassRuntimeAgent.sync.controllerSyncPeriod }}"
            - name: APP_MINIMAL_COMPASS_SYNC_TIME
              value: "{{ .Values.compassRuntimeAgent.sync.minimalConfigSyncTime }}"
            - name: APP_CERT_VALIDITY_RENEWAL_THRESHOLD
              value: "{{ .Values.compassRuntimeAgent.certificates.renewal.validityThreshold }}"
            - name: APP_CLUSTER_CERTIFICATES_SECRET
              value: "{{ .Values.compassRuntimeAgent.certificates.clientCertificate.secret.namespace }}/{{ .Values.compassRuntimeAgent.certificates.clientCertificate.secret.name }}"
            - name: APP_CA_CERTIFICATES_SECRET
              value: "{{ .Values.compassRuntimeAgent.certificates.caCertificate.secret.namespace }}/{{ .Values.compassRuntimeAgent.certificates.caCertificate.secret.name }}"
            - name: APP_INSECURE_CONNECTOR_COMMUNICATION
              value: "{{ .Values.compassRuntimeAgent.connector.insecureCommunication }}"
            - name: APP_GATEWAY_PORT
              value: "{{ .Values.compassRuntimeAgent.resources.gatewayPort }}"
            - name: APP_INSECURE_CONFIGURATION_FETCH
              value: "{{ .Values.compassRuntimeAgent.config.insecureConfigurationFetch }}"
            - name: APP_UPLOAD_SERVICE_URL
              value: "{{ .Values.compassRuntimeAgent.resources.uploadServiceUrl }}"
            - name: APP_QUERY_LOGGING
              value: "{{ .Values.compassRuntimeAgent.debug.queryLogging }}"
            - name: APP_METRICS_LOGGING_TIME_INTERVAL
              value: "{{ .Values.compassRuntimeAgent.metrics.loggingTimeInterval }}"
            - name: APP_RUNTIME_EVENTS_URL
              value: "https://gateway.{{ .Values.global.ingress.domainName }}"
            - name: APP_RUNTIME_CONSOLE_URL
              value: "https://console.{{ .Values.global.ingress.domainName }}"
            - name: APP_DIRECTOR_PROXY_PORT
              value: "{{ .Values.compassRuntimeAgent.director.proxyPort }}"
            - name: APP_DIRECTOR_PROXY_INSECURE_SKIP_VERIFY
              value: "{{ .Values.compassRuntimeAgent.director.insecureSkipVerify }}"
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "compass-gateway.{{ .Values.global.ingress.domainName }}"
            - "compass-gateway-mtls.{{ .Values.global.ingress.domainName }}"
      {{ end }}
