apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    kyma-project.io/component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        kyma-project.io/component: backend
    spec:
      serviceAccountName: {{ template "fullname" . }}
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "dex.{{ .Values.global.ingress.domainName }}"
            - "minio.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.image.name }}:{{ .Values.global.console_backend_service.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
          - name: APP_PORT
            value: "{{ .Values.service.internalPort }}"
          - name: APP_HOST
            value: "0.0.0.0"
          - name: APP_ALLOWED_ORIGINS
            value: "https://*.{{ .Values.global.ingress.domainName }},*.svc.cluster.local:44134,http://console-dev.{{ .Values.global.ingress.domainName }}:*"
          - name: APP_VERBOSE
            value: "true"
          - name: APP_SYSTEM_NAMESPACES
            value: {{ .Values.systemNamespaces }}
          - name: APP_RAFTER_ADDRESS
            value: "rafter-minio.kyma-system.svc.cluster.local:9000"
          - name: APP_RAFTER_SECURE
            value: "false"
          - name: APP_RAFTER_VERIFY_SSL
            value: "{{ .Values.verifySSL }}"
          - name: APP_APPLICATION_GATEWAY_INTEGRATION_NAMESPACE
            value: "kyma-integration"
          - name: APP_APPLICATION_GATEWAY_STATUS_REFRESH_PERIOD
            value: "15s"
          - name: APP_APPLICATION_CONNECTOR_URL
            value: "http://connector-service-internal-api.kyma-integration.svc.cluster.local:8080"
          - name: APP_APPLICATION_CONNECTOR_HTTP_CALL_TIMEOUT
            value: "2s"
          - name: APP_OIDC_ISSUER_URL
            value: "https://dex.{{ .Values.global.ingress.domainName }}"
          - name: APP_OIDC_CLIENT_ID
            value: "kyma-client"
          {{ if not .Values.global.environment.gardener }}
          - name: APP_OIDC_CA_FILE
            value: "/etc/ingress-tls-cert/tls.crt"
          {{ end }}
          - name: APP_TRACING_COLLECTOR_URL
            value: http://{{ .Values.global.tracing.zipkinAddress }}/api/v1/spans
          - name: APP_TRACING_DEBUG
            value: "{{ .Values.tracing.debug }}"
          - name: APP_TRACING_SERVICE_SPAN_NAME
            value: {{ .Values.tracing.serviceSpanName }}
          - name: APP_SERVERLESS_USAGE_KIND
            value: serverless-function
          - name: APP_EVENT_SUBSCRIPTION
            value: {{ .Values.global.isBEBEnabled | quote }}
        ports:
          - containerPort: {{ .Values.service.internalPort }}
            name: {{ .Values.service.internalPortName }}
      {{ if not .Values.global.environment.gardener }}
        volumeMounts:
          - name: ingress-tls-cert
            mountPath: /etc/ingress-tls-cert/
      volumes:
        - name: ingress-tls-cert
          secret:
            secretName: ingress-tls-cert
      {{ end }}
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}
