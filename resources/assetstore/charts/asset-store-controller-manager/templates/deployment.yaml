apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "fullname" . }}
  namespace:  {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        recreate: {{ .Release.Time.Seconds | quote }}
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        control-plane: controller-manager
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
       - ip: {{ .Values.global.minikubeIP }}
         hostnames:
          - "minio.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ template "fullname" . }}
      containers:
      - args:
        - --metrics-addr
        - :{{ .Values.service.internalPort }}
        command:
        - /manager
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.asset_store_controller_manager.dir }}asset-store-controller-manager:{{ .Values.global.asset_store_controller_manager.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        env:
        - name: APP_STORE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: assetstore-minio-docs-upload
              key: APP_UPLOAD_ENDPOINT_WITH_PORT
        - name: APP_STORE_EXTERNAL_ENDPOINT
          value: {{ if .Values.global.minioExternalEndpoint }}{{ .Values.global.minioExternalEndpoint }}{{ else }}'https://minio.{{ .Values.global.ingress.domainName }}'{{ end }}
        - name: APP_STORE_USE_SSL
          valueFrom:
            configMapKeyRef:
              name: assetstore-minio-docs-upload
              key: APP_UPLOAD_SECURE
        - name: APP_STORE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: assetstore-minio
              key: accesskey
        - name: APP_STORE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: assetstore-minio
              key: secretkey
        - name: APP_LOADER_VERIFY_SSL
          value: 'false'
        - name: APP_TEMPORARY_DIRECTORY
          value: /tmp
        - name: APP_ASSET_MAX_CONCURRENT_RECONCILES
          value: "{{ .Values.maxAssetConcurrentReconciles }}"
        - name: APP_CLUSTER_ASSET_MAX_CONCURRENT_RECONCILES
          value: "{{ .Values.maxClusterAssetConcurrentReconciles }}"
        - name: APP_STORE_UPLOAD_WORKERS_COUNT
          value: "{{ .Values.storeUploadWorkersCount }}"
        - name: APP_WEBHOOK_VALIDATION_WORKERS_COUNT
          value: "{{ .Values.validationWebhookWorkersCount }}"
        - name: APP_WEBHOOK_MUTATION_WORKERS_COUNT
          value: "{{ .Values.mutationWebhookWorkersCount }}"
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: http-metrics
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp-empty-dir
        resources:
{{ toYaml .Values.resources | indent 10 }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: tmp-empty-dir
          emptyDir: {}
