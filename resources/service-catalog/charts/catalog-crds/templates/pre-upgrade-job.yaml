kind: ServiceAccount
apiVersion: v1
metadata:
  name: upgrade-job-account
  namespace: {{ .Release.Namespace }}
  labels:
    upgrade-job: "true"
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: upgrade-job-account
  labels:
    upgrade-job: "true"
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["extensions"]
    resources: ["deployments"]
    verbs:     ["get", "list"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources: ["servicebindings"]
    verbs:     ["list"]
  - apiGroups: ["servicecatalog.kyma-project.io"]
    resources: ["servicebindingusages"]
    verbs: ["list", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: upgrade-job-account
  labels:
    upgrade-job: "true"
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
subjects:
  - kind: ServiceAccount
    name: upgrade-job-account
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: upgrade-job-account
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-pre-upgrade-job
  labels:
    upgrade-job: "true"
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 100
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        upgrade-job: "true"
        app: {{ template "fullname" . }}-pre-upgrade-job
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      restartPolicy: Never
      serviceAccountName: upgrade-job-account
      containers:
        - name: service-catalog-upgrade
          image: {{ .Values.migrationImagePath }}:{{ .Values.migrationImageVersion }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
          - bash
          - -c
          - |
            set -e
            NAMESPACE={{ .Release.Namespace }}
            APISERVER={{ template "fullname-apiserver-version" . }}-apiserver
            WEBHOOK={{ template "fullname" . }}-webhook

            deployment=$(kubectl get deployments -n ${NAMESPACE} -ojson | jq -r '.items|.[].metadata.name')
            indicator=0
            for item in ${deployment[*]}
            do
              if [ "${item}" == "${APISERVER}" ]; then
                indicator=$((indicator+1))
              fi
              if [ "${item}" == "${WEBHOOK}" ]; then
                indicator=$((indicator-1))
              fi
            done

            # if 1 apiserver exist (run migration), if -1 webhook exist,
            # if 0 both do not exist, both exist (do not run migration)
            if [ "$indicator" -gt 0 ]; then
              /root/service-catalog-upgrade removeOwnerReference
            fi
