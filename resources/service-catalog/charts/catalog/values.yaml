# Default values for Service Catalog
# service-catalog image to use
image: quay.io/kubernetes-service-catalog/service-catalog:v0.3.0-beta.2-6-g4690fae
# imagePullPolicy for the service-catalog; valid values are "IfNotPresent",
# "Never", and "Always"
imagePullPolicy: Always
## If true, create & use RBAC resources
##
rbacEnable: true
rbacApiVersion: rbac.authorization.k8s.io/v1
webhook:
  # deployment strategy for service-catalog webhook
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  minReadySeconds: 1
  # annotations is a collection of annotations to add to the webhook pods.
  annotations: {}
  # nodeSelector to apply to the webhook pods
  nodeSelector:
  # healthcheck configures the readiness and liveliness probes for the webhook pod.
  healthcheck:
    enabled: true
  # Attributes of the webhook's service resource
  service:
    port: 443
    # Type of service; valid values are "LoadBalancer", "NodePort" or "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      securePort: 30441
  # Log level; valid values are in the range 0 - 10
  verbosity: 10
  serviceAccount: service-catalog-webhook
  # Webhook resource requests and limits
  # Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      cpu: 100m
      memory: 20Mi
    limits:
      cpu: 100m
      memory: 30Mi
controllerManager:
  replicas: 1
  # deployment strategy for service-catalog controllerManager
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  minReadySeconds: 1
  # annotations is a collection of annotations to add to the controllerManager pod.
  annotations:
    sidecar.istio.io/inject: "true"
  # nodeSelector to apply to the controllerManager pods
  nodeSelector:
  # healthcheck configures the readiness and liveliness probes for the controllerManager pod.
  healthcheck:
    enabled: true
  # Log level; valid values are in the range 0 - 10
  verbosity: 10
  # Resync interval; format is a duration (`20m`, `1h`, etc)
  resyncInterval: 5m
  # Broker relist interval; format is a duration (`20m`, `1h`, etc)
  brokerRelistInterval: 24h
  # Whether or not the controller supports a --broker-relist-interval flag. If this is
  # set to true, brokerRelistInterval will be used as the value for that flag
  brokerRelistIntervalActivated: true
  # The maximum amount of time to back-off while polling an OSB API operation; format is a duration (`20m`, `1h`, etc)
  operationPollingMaximumBackoffDuration: 20m
  # enables profiling via web interface host:port/debug/pprof/
  profiling:
    # Disable profiling via web interface host:port/debug/pprof/
    disabled: false
    # Enables lock contention profiling, if profiling is enabled.
    contentionProfiling: false
  leaderElection:
    # Whether the controller has leader election enabled.
    activated: false
  serviceAccount: service-catalog-controller-manager
  # Whether the controller will expose metrics on /metrics
  enablePrometheusScrape: false
  # Controller Manager resource requests and limits
  # Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      cpu: 100m
      memory: 35Mi
    limits:
      cpu: 100m
      memory: 45Mi
  # Attributes of the controller's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      securePort: 30444
  serviceMonitor:
    enabled: false
# Whether the OriginatingIdentity feature should be enabled
originatingIdentityEnabled: true
# Whether the AsyncBindingOperations alpha feature should be enabled
asyncBindingOperationsEnabled: true
# Whether the NamespacedServiceBroker feature should be disabled
namespacedServiceBrokerDisabled: false
# Whether the ServicePlanDefaults alpha feature should be enabled
servicePlanDefaultsEnabled: false
# Whether the CascadingDeletion alpha feature should be enabled
cascadingDeletionEnabled: true
## Security context give the opportunity to run container as nonroot by setting a securityContext
## by example :
## securityContext: { runAsUser: 1001 }
securityContext: {}

## images for migration process
migration:
  alpineKcImage: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200310-5f52f407
