# This job makes sure that PVC used in migration process in the past was removed before upgrade action; can be removed for Kyma version > 1.9
kind: ServiceAccount
apiVersion: v1
metadata:
  name: pvc-checker-job
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "fullname" . }}-checker-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: pvc-checker-job
  labels:
    app: {{ template "fullname" . }}-checker-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
rules:
  - apiGroups: [""]
    resources: [ "persistentvolumeclaims" ]
    verbs: ["get", "list", "delete"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: pvc-checker-job
  labels:
    app: {{ template "fullname" . }}-checker-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
subjects:
  - kind: ServiceAccount
    name: pvc-checker-job
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pvc-checker-job

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-pvc-checker-job
  annotations:
    sidecar.istio.io/inject: "false"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
  labels:
    upgrade-job: "true"
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 100
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        upgrade-job: "true"
        app: {{ template "fullname" . }}-reproccess-job
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      restartPolicy: Never
      serviceAccountName: pvc-checker-job
      containers:
        - name: pvc-checker
          image: {{ .Values.migration.alpineKcImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["/bin/bash","-c"]
          args:
            - |
              for pvc in $(kubectl get persistentvolumeclaims -l migration-job=true --namespace {{ .Release.Namespace }} -o=jsonpath="{.items[*]['.metadata.name']}")
              do
                if [[ $pvc =~ .*migration-storage ]]; then
                  kubectl delete persistentvolumeclaims --namespace {{ .Release.Namespace }} $pvc
                fi
              done
