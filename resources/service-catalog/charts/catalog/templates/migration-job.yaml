kind: ServiceAccount
apiVersion: v1
metadata:
  name: migration-job-account
  namespace: {{ .Release.Namespace }}
  labels:
    migration-job: "true"
    app: {{ template "fullname" . }}-migration-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: migration-job-account
  labels:
    migration-job: "true"
    app: {{ template "fullname" . }}-migration-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs:     ["get", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs:     ["get", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs:     ["list"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs:     ["delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources:
    - "clusterserviceclasses"
    - "clusterserviceplans"
    - "clusterservicebrokers"
    - "serviceinstances"
    - "servicebindings"
    - "serviceclasses"
    - "serviceplans"
    - "servicebrokers"
    verbs: ["list", "get", "create", "patch", "delete"]
  - apiGroups: ["servicecatalog.k8s.io"]
    resources:
    - "clusterservicebrokers/status"
    - "clusterserviceclasses/status"
    - "clusterserviceplans/status"
    - "serviceinstances/status"
    - "serviceinstances"
    - "servicebindings/status"
    - "servicebrokers/status"
    - "serviceclasses/status"
    - "serviceplans/status"
    verbs: ["update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: migration-job-account
  labels:
    migration-job: "true"
    app: {{ template "fullname" . }}-migration-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
subjects:
  - kind: ServiceAccount
    name: migration-job-account
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: migration-job-account

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-migration-job
  labels:
    app: {{ template "fullname" . }}-migration-job
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 100
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        migration-job: "true"
        app: {{ template "fullname" . }}-migration-job
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      restartPolicy: Never
      serviceAccountName: migration-job-account
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}-migration-storage
      containers:
        - name: job
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
          - migration
          - --action
          - restore
          - --service-catalog-namespace
          - {{ .Release.Namespace }}
          - --controller-manager-deployment
          - {{ template "fullname" . }}-controller-manager
          - --webhook-service-name
          - {{ template "fullname" . }}-webhook
          - --webhook-service-port
          - "{{ .Values.webhook.service.port }}"
          - --storage-path=data/
          - --pvc-name
          - {{ template "fullname" . }}-migration-storage
          volumeMounts:
          - name: storage
            mountPath: /data
