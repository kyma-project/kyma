{{- if .Values.loki.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "loki.fullname" . }}
  labels:
    app: {{ template "loki.name" . }}
    chart: {{ template "loki.chart" . }}
    release: {{ .Release.Name }}
  annotations:
    {{- toYaml .Values.loki.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.loki.podManagementPolicy }}
  replicas: {{ .Values.loki.replicas }}
  selector:
    matchLabels:
      app: {{ template "loki.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "loki.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.loki.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "loki.name" . }}
        name: {{ template "loki.name" . }}
        release: {{ .Release.Name }}
        {{- with .Values.loki.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/loki/secret.yaml") . | sha256sum }}
        {{- with .Values.loki.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "loki.serviceAccountName" . }}
    {{- if .Values.loki.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.loki.securityContext | nindent 8 }}
      containers:
        - name: {{ template "loki.name" . }}
          image: "{{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}"
          imagePullPolicy: {{ .Values.loki.image.pullPolicy }}
          args:
            - "-config.file=/etc/loki/loki.yaml"
          {{- range $key, $value := .Values.loki.extraArgs }}
            - "-{{ $key }}={{ $value }}"
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: "/data"
              subPath: {{ .Values.loki.persistence.subPath }}
          ports:
            - name: http
              containerPort: {{ .Values.loki.config.server.http_listen_port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.loki.resources | nindent 12 }}
        - name: "health"
          image: busybox:1.31.1
          args:
            - /bin/sh
            - -c
            - while true; do sleep 2; done;
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - cat /dev/null | nc 127.0.0.1 {{ .Values.loki.port }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - wget -O- http://127.0.0.1:15020/healthz/ready
                    {{/*
          livenessProbe:
            {{- toYaml .Values.loki.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.loki.readinessProbe | nindent 12 }}
            */}}
          securityContext:
            readOnlyRootFilesystem: true
          env:
            {{- if .Values.tracing.jaegerAgentHost }}
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.tracing.jaegerAgentHost }}"
            {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          secret:
            secretName: {{ template "loki.fullname" . }}
  {{- if not .Values.loki.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.loki.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.loki.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.loki.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.loki.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.loki.persistence.size | quote }}
      storageClassName: {{ .Values.loki.persistence.storageClassName }}
  {{- end }}
{{- end }}
