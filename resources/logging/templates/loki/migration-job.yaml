apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki-migration-job
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-migration-job
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
rules:
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices"]
  verbs: ["get", "delete"]
  resourceNames:
  - "logging-loki"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-migration-job
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-migration-job
subjects:
- kind: ServiceAccount
  name: loki-migration-job
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: loki-migration-job
  annotations:
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-weight: "10"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: loki-migration-job
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: loki-migration-job
      restartPolicy: Never
      securityContext:
        runAsUser: 2000
      containers:
      - name: job
        image: eu.gcr.io/kyma-project/incubator/develop/k8s-tools:20210113-12c4e3b5
        terminationMessagePolicy: "FallbackToLogsOnError"
        command:
          - /bin/bash
          - -c
          - |
            set -e

            kubectl delete virtualservice/logging-loki -n kyma-system --ignore-not-found
