apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "name" . }}-certs-job
  annotations:
    helm.sh/hook-weight: "5"
    helm.sh/hook: "post-install,post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ template "name" . }}-certs-job
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "name" . }}-certs-job
      restartPolicy: Never
      volumes:
        - name: {{ template "name" . }}-tls-cert
          secret:
            secretName: {{ template "name" . }}-tls-cert
            optional: true
      containers:
      - name: generate-certs
        image: {{ .Values.global.containerRegistry.path }}/{{ .Values.global.xip_patch.dir }}xip-patch:{{ .Values.global.xip_patch.version }}
        envFrom:
        - configMapRef:
            name: {{ template "name" . }}
            optional: true
        command:
        - bash
        - -c
        - |
{{ tpl (.Files.Get "files/generate-certs.sh" | printf "%s" | indent 12) . }}
        volumeMounts:
        - name: {{ template "name" . }}-tls-cert
          mountPath: /etc/apiserver-proxy-tls-cert/
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace}}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace}}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "name" . }}-certs-job
subjects:
- kind: ServiceAccount
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
rules:
- apiGroups: [""]
  resources: [services]
  verbs: [create, list, get, watch]
- apiGroups: [""]
  resources: [secrets]
  verbs: [create, list, get, update, patch]
- apiGroups: [""]
  resources: [configmaps]
  verbs: [create, list, get, watch, update, patch]
---
{{ if .Values.global.environment.gardener }}
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: {{ template "name" . }}-certs-job-kube-system-role
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["shoot-info"]
  verbs: ["get"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ template "name" . }}-certs-job-gardener-certs-role
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
rules:
- apiGroups: ["cert.gardener.cloud"]
  resources: ["certificates"]
  verbs: ["get", "create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "name" . }}-certs-job-gardener-certs-role
  namespace: {{ .Release.Namespace}}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "name" . }}-certs-job-gardener-certs-role
subjects:
- kind: ServiceAccount
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "name" . }}-certs-job-kube-system-role
  namespace: {{ .Release.Namespace}}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook: "post-install, post-upgrade"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "name" . }}-certs-job-kube-system-role
subjects:
- kind: ServiceAccount
  name: {{ template "name" . }}-certs-job
  namespace: {{ .Release.Namespace }}
{{ end }}