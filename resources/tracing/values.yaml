# Default values for jaeger-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  pullPolicy: IfNotPresent
  imagePullSecrets: []

securityContext:
  allowPrivilegeEscalation: false
  privileged: false

resources:
  limits:
    cpu: 50m
    memory: 100Mi
  requests:
    cpu: 10m
    memory: 40Mi

nodeSelector: {}

crd:
  install: true

jaeger:
  # Specifies whether Jaeger instance should be created
  create: true
  kyma:
    uiPort: 16686
    zipkinPort: 9411
    badgerPvc:
      enabled: false
      accessModes:
        - ReadWriteOnce
      size: 1Gi
      storageClassName: ""
  spec:
    strategy: allInOne #allInOne | production
    allInOne:
      image: '{{ include "imageurl" (dict "reg" .Values.global.containerRegistry "img" .Values.global.images.jaeger_all_in_one) }}'
      options:
        log-level: info
    storage:
      type: memory #memory | badger | elasticsearch | cassandra
      options:
        badger:
          ephemeral: false
          truncate: true
          span-store-ttl: 24h
          directory-key: "/badger/key"
          directory-value: "/badger/data"
        memory:
          max-traces: 10000
        es:
          # Note: This assumes elasticsearch is running in the "default" namespace.
          server-urls: http://elasticsearch-client.default.svc:9200
        cassandra:
          # Note: This assumes cassandra is running in the "default" namespace.
          servers: cassandra.default.svc
          keyspace: jaeger_v1_datacenter3
    ui:
      options:
        dependencies:
          menuEnabled: true
        menu:
          - label: "About Jaeger"
            items:
              - label: "Documentation"
                url: "https://www.jaegertracing.io/docs/latest"
          - label: "About Kyma"
            items:
              - label: "Documentation"
                url: "https://kyma-project.io/docs/kyma/latest/01-overview/main-areas/observability"
    ingress:
      enabled: false
    annotations:
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    resources:
      limits:
        cpu: 100m
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 40Mi
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      allowPrivilegeEscalation: false
      privileged: false

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  pspEnabled: false
  clusterRole: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

global:
  domainName: "kyma.example.com"
  istio:
    gateway:
      name: kyma-gateway
      namespace: kyma-system
  kymaRuntime:
    adminGroup: runtimeAdmin
    operatorGroup: runtimeOperator
    developerGroup: runtimeDeveloper
    namespaceAdminGroup: runtimeNamespaceAdmin
  tracing:
    enabled: true
  containerRegistry:
    path: eu.gcr.io/kyma-project
  images:
    jaeger_operator:
      name: "jaeger-operator"
      version: "1.18.1-e0da5a68"
      directory: "tpi"
    jaeger_all_in_one:
      name: "jaegertracing/all-in-one"
      version: "1.18.1"
      directory: "external"
    oauth2_proxy:
      name: "oauth2-proxy"
      version: "7.2.0-59f3431d"
      directory: "tpi"
  priorityClassName: "kyma-system"
virtualservice:
  enabled: true
authProxy:
  enabled: true
  replicaCount: 1
  inPort: 10001
  configDocsLink: "https://kyma-project.io/docs/kyma/latest/04-operation-guides/security/sec-06-access-expose-kiali-grafana"
  config:
    clientId: "dummy"
    clientSecret: "dummy"
    tlsVerify: true
    emailDomains: "*"
    groups: ""
    useKymaGroups: false
    scopes: "groups"
    authLogging: true
    requestLogging: false
    passHostHeader: false
  env: {}
  nodeSelector: {}
  podSecurityContext: {}
  securityContext:
    allowPrivilegeEscalation: false
    privileged: false
    runAsNonRoot: true
  image:
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 50m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 5Mi
