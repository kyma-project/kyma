---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-migration
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  migrate: |-
{{ include (print $.Template.BasePath "/_helper_migrate_to_cms.txt") . | indent 4 }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "fullname" . }}-migration
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "2"
subjects:
- kind: ServiceAccount
  name: {{ template "fullname" . }}-migration
  namespace: kyma-system
roleRef:
  kind: ClusterRole
  name: {{ template "fullname" . }}-migration
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "fullname" . }}-migration
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
rules:
- apiGroups: ["cms.kyma-project.io"]
  resources: [ "*" ]
  verbs: ["*"]
- apiGroups: ["applicationconnector.kyma-project.io"]
  resources: [ "*" ]
  verbs: ["get", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "fullname" . }}-migration
  namespace: kyma-system
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-migration
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "3"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ template "fullname" . }}-migration
      volumes:
        - name: migration-script
          projected:
            sources:
            - configMap:
                name: {{ template "fullname" . }}-migration
            - secret:
                name: assetstore-minio
      containers:
      - name: bash
        image: bash:5
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/bin/bash", "/config/migrate"]
        env:
          - name: MINIO_DOMAIN
            value: https://minio.{{ .Values.global.ingress.domainName }}
        volumeMounts:
          - name: migration-script
            mountPath: /config
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "fullname" . }}-old-cr-remove
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "2"
subjects:
- kind: ServiceAccount
  name: {{ template "fullname" . }}-old-cr-remove
  namespace: kyma-system
roleRef:
  kind: ClusterRole
  name: {{ template "fullname" . }}-old-cr-remove
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "fullname" . }}-old-cr-remove
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: [ "customresourcedefinitions" ]
  verbs: ["delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "fullname" . }}-old-cr-remove
  namespace: kyma-system
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
--- 
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-old-cr-remove
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "3"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ template "fullname" . }}-old-cr-remove
      containers:
      - name: asset-store-domain-cr-cleanup
        image: bitnami/kubectl
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh","-c"]
        args: ["kubectl delete crd clusterassets.assetstore.kyma-project.io; kubectl delete crd assets.assetstore.kyma-project.io; kubectl delete crd bucket.assetstore.kyma-project.io; kubectl delete crd clusterbucket.assetstore.kyma-project.io"]