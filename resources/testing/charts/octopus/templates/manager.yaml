---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "octopus.fullname" . }}
  labels:
    app: {{ template "octopus.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
    kyma-project.io/component: controller
spec:
  selector:
    app: {{ template "octopus.name" . }}
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "octopus.fullname" . }}
  labels:
    app: {{ template "octopus.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    matchLabels:
      app: {{ template "octopus.name" . }}
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: {{ template "octopus.fullname" . }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ template "octopus.name" . }}
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
        kyma-project.io/component: controller
    spec:
      serviceAccountName: {{ template "octopus.fullname" . }}
      containers:
      - command:
        - /manager
        image: {{.Values.global.octopus.image.registry}}/{{.Values.global.octopus.image.dir}}octopus:{{.Values.global.octopus.image.version}}
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SECRET_NAME
            value: webhook-server-secret
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 9876
          name: tcp-webhook-srv
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsUser: 2000
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
