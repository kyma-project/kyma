apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-dns-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
data:
  dnspatch.sh: |
    #!/bin/bash
    set -e

    deployments=$(kubectl get deployment -n kube-system -o name)

    if [[ "$deployments" =~ "coredns" ]]; then
      echo "CoreDNS deployment found, deleting KubeDNS resources..."
      kubectl delete service monitoring-kube-dns -n kube-system --ignore-not-found
      kubectl delete servicemonitor monitoring-kube-dns -n kyma-system --ignore-not-found
    else
      echo "CoreDNS deployment not found, deleting CoreDNS resources..."
      kubectl delete service monitoring-coredns -n kube-system --ignore-not-found
      kubectl delete servicemonitor monitoring-coredns -n kyma-system --ignore-not-found
    fi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-dns-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: monitoring-dns-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "delete"]
  - apiGroups: ["extensions","apps"]
    resources: ["deployments"]
    verbs: ["get", "list"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors"]
    verbs: ["get", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring-dns-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook-weight: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: monitoring-dns-patch
subjects:
  - kind: ServiceAccount
    name: monitoring-dns-patch
    namespace: kyma-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: monitoring-dns-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    sidecar.istio.io/inject: "false"
    helm.sh/hook-weight: "9"
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      name: monitoring-dns-patch
      labels:
        app: monitoring-dns-patch
    spec:
      serviceAccountName: monitoring-dns-patch
      restartPolicy: Never
      containers:
        - name: monitoring-dns-patch
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200617-32c1f3ff
          command: ["/scripts/dnspatch.sh"]
          volumeMounts:
            - name: monitoring-dns-patch
              mountPath: /scripts
          terminationMessagePolicy: "FallbackToLogsOnError"
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: monitoring-dns-patch
          configMap:
            name: monitoring-dns-patch
            defaultMode: 0744
