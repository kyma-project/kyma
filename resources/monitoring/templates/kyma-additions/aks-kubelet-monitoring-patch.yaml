apiVersion: v1
kind: ConfigMap
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
data:
  akspatch.sh: |
    #!/usr/bin/env sh
    set -e

    if [[ "$(kubectl get nodes -l kubernetes.azure.com/role=agent)" ]]; then
      echo "AKS Cluster found, applying patch..."
      kubectl delete servicemonitors.monitoring.coreos.com monitoring-kubelet -n kyma-system --ignore-not-found
      kubectl apply -f /scripts/patch.yaml
    else
        echo "No AKS Cluster found, skipping..."
    fi
  patch.yaml: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: {{ template "prometheus-operator.name" . }}-kubelet
        chart: {{template "prometheus-operator.chartref" . }}
        heritage: {{ $.Release.Service }}
        release: {{ $.Release.Name }}
      name: {{ template "prometheus-operator.fullname" . }}-kubelet
      namespace: {{ $.Release.Namespace }}
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          honorLabels: true
          port: http-metrics
          scheme: http
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          honorLabels: true
          path: /metrics/cadvisor
          port: http-metrics
          scheme: http
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
          - kube-system
      selector:
        matchLabels:
          k8s-app: kubelet

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts", "services", "pods", "nodes"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["extensions","apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["alertmanagers", "prometheuses", "prometheuses/finalizers", "alertmanagers/finalizers", "servicemonitors", "podmonitors", "prometheusrules", "podmonitors"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "delete", "create", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aks-kubelet-monitoring-kyma-patch
subjects:
  - kind: ServiceAccount
    name: aks-kubelet-monitoring-kyma-patch
    namespace: kyma-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    sidecar.istio.io/inject: "false"
    helm.sh/hook-weight: "9"
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      name: aks-kubelet-monitoring-kyma-patch
      labels:
        app: aks-kubelet-monitoring-kyma-patch
    spec:
      serviceAccountName: aks-kubelet-monitoring-kyma-patch
      restartPolicy: Never
      containers:
        - name: aks-kubelet-monitoring-kyma-patch
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200507-070ff576
          command: ["/scripts/akspatch.sh"]
          volumeMounts:
            - name: aks-kubelet-monitoring-kyma-patch
              mountPath: /scripts
          terminationMessagePolicy: "FallbackToLogsOnError"
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: aks-kubelet-monitoring-kyma-patch
          configMap:
            name: aks-kubelet-monitoring-kyma-patch
            defaultMode: 0744

