{{- if .Values.kyma.authProxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-auth-proxy-{{ template "grafana.name" . }}
  namespace: {{ template "grafana.namespace" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: auth-proxy
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "grafana.chart" . }}
spec:
  replicas: {{ .Values.kyma.authProxy.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: auth-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: auth-proxy
    spec:
      {{- if .Values.global.isLocalEnv }}
      hostNetwork: true   #only for minikube
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
          - "dex.{{ .Values.global.ingress.domainName }}"
      {{- end }}
      {{- if .Values.kyma.authProxy.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.kyma.authProxy.nodeSelector | indent 8 }}
      {{- end }}
      volumes:
      - name: templates-cm
        configMap:
          name: {{ .Release.Name }}-auth-proxy-{{ template "grafana.name" . }}-templates
      containers:
      - image: "{{ .Values.kyma.authProxy.image.repository }}:{{ .Values.kyma.authProxy.image.tag }}"
        imagePullPolicy: {{ .Values.kyma.authProxy.image.pullPolicy }}
        name: auth-proxy
        args:
        - --http-address=0.0.0.0:{{ .Values.kyma.authProxy.port }}
        - --upstream=http://{{ template "grafana.fullname" . }}:{{ .Values.service.port }}
        - --cookie-secure=true
        - --cookie-domain=grafana.{{ .Values.global.ingress.domainName }}
        - --cookie-name=KYMA_GRAFANA_OAUTH2_PROXY_TOKEN
        - --silence-ping-logging=true
        - --reverse-proxy=true
        - --auth-logging={{ .Values.kyma.authProxy.config.authLogging }}
        - --request-logging={{ .Values.kyma.authProxy.config.requestLogging }}
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-auth-proxy-{{ template "grafana.name" . }}
            optional: false
        - secretRef:
            name: {{ .Release.Name }}-auth-proxy-{{ template "grafana.name" . }}-user
            optional: true
        ports:
        - name: http
          containerPort: {{ .Values.kyma.authProxy.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        {{- if .Values.kyma.authProxy.securityContext }}
        securityContext:
{{ toYaml .Values.kyma.authProxy.securityContext | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.kyma.authProxy.resources | indent 10 }}
        volumeMounts:
          - name: templates-cm
            mountPath: /templates
{{- end}}
