{{- if not .Values.global.disableLegacyConnectivity }}
{{- if .Release.IsUpgrade }}
{{- if not ( and .Values.global.applicationConnectorCa .Values.global.applicationConnectorCaKey ) }}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-migrate-ac-certs
  namespace: kyma-integration
  labels:
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Chart.Name }}-migrate-ac-certs
  namespace: {{ .Values.jobs.installer.namespace }}
  labels:
    app: {{ .Chart.Name }}-migrate-ac-certs
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["create", "get", "update", "patch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Chart.Name }}-migrate-ac-certs
  namespace: {{ .Values.jobs.installer.namespace }}
  labels:
    app: {{ .Chart.Name }}-migrate-ac-certs
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-migrate-ac-certs
    namespace: kyma-integration
roleRef:
  kind: Role
  name: {{ .Chart.Name }}-migrate-ac-certs
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-migrate-ac-certs
  namespace: kyma-integration
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 5
  template:
    metadata:
      name: {{ .Chart.Name }}-migrate-ac-certs
      annotations:
        sidecar.istio.io/inject: “false”
    spec:
      serviceAccountName: {{ .Chart.Name }}-migrate-ac-certs
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}-migrate-ac-certs
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200309-9a88ce97
          command:
            - /bin/sh
            - -c
          args:
            - |
              kubectl create secret generic -n {{ .Values.jobs.installer.namespace }} application-connector-overrides \
                  --from-literal global.applicationConnectorCa="$(cat /etc/application-connector-certs/ca.crt | base64 -w 0)" \
                  --from-literal global.applicationConnectorCaKey="$(cat /etc/application-connector-certs/ca.key | base64 -w 0)" --dry-run -oyaml | kubectl apply -f -

              kubectl label --overwrite secret -n {{ .Values.jobs.installer.namespace }} application-connector-overrides "kyma-project.io/installation=" "installer=overrides"

          volumeMounts:
            - name: cert
              readOnly: true
              mountPath: /etc/application-connector-certs/
      volumes:
        - name: cert
          secret:
            secretName: connector-service-app-ca
{{- end }}
{{- end }}
{{- end }}