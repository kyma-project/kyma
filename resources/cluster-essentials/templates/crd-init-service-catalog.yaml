apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-crd-service-catalog
  annotations:
    "helm.sh/hook": "pre-install, pre-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded"
data:
  clusterservicebrokers.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-clusterservicebroker.servicecatalog.yaml" | printf "%s" | indent 4}}
  clusterserviceclasses.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-clusterserviceclass.servicecatalog.yaml" | printf "%s" | indent 4}}
  clusterserviceplans.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-clusterserviceplan.servicecatalog.yaml" | printf "%s" | indent 4}}
  servicebrokers.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-servicebroker.servicecatalog.yaml" | printf "%s" | indent 4}}
  serviceclasses.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-serviceclass.servicecatalog.yaml" | printf "%s" | indent 4}}
  serviceplans.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-serviceplan.servicecatalog.yaml" | printf "%s" | indent 4}}
  serviceinstances.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-serviceinstance.servicecatalog.yaml" | printf "%s" | indent 4}}
  servicebindings.servicecatalog.k8s.io: |-
{{.Files.Get "files/crd-servicebinding.servicecatalog.yaml" | printf "%s" | indent 4}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-service-catalog
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-delete-policy: "before-hook-creation, hook-succeeded"
    helm.sh/hook: "pre-upgrade, pre-install"
    helm.sh/hook-weight: "10"
  labels:
    job: {{ .Release.Name }}-init-service-catalog
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ .Release.Name }}-init-service-catalog
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        job: {{ .Release.Name }}-init-service-catalog
    spec:
      serviceAccountName: {{ .Release.Name }}-crd-init
      restartPolicy: Never
      containers:
        - name: job
          image: "{{ .Values.jobs.image.repository }}:{{ .Values.jobs.image.tag }}"
          terminationMessagePolicy: "FallbackToLogsOnError"
          volumeMounts:
            - name: crd-service-catalog
              mountPath: /etc/crd
              readOnly: true
          command:
            - /bin/bash
            - -c
            - |-
              set -e

              crds=( clusterservicebrokers.servicecatalog.k8s.io \
                clusterserviceclasses.servicecatalog.k8s.io \
                clusterserviceplans.servicecatalog.k8s.io \
                servicebrokers.servicecatalog.k8s.io \
                serviceclasses.servicecatalog.k8s.io \
                serviceplans.servicecatalog.k8s.io \
                serviceinstances.servicecatalog.k8s.io \
                servicebindings.servicecatalog.k8s.io )

              for crd in "${crds[@]}"; do
                timeout 60s bash -c "until kubectl get $crd || kubectl apply -f /etc/crd/$crd; do sleep 2; done"
              done
      volumes:
        - name: crd-service-catalog
          configMap:
            name: {{ .Release.Name }}-crd-service-catalog
