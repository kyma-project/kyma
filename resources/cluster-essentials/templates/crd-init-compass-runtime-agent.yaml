apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-crd-compass-rt
  annotations:
    "helm.sh/hook": "pre-install, pre-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded"
data:
  compassconnections.compass.kyma-project.io: |-
{{.Files.Get "files/compass-connection.crd.yaml" | printf "%s" | indent 4}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-init-compass-rt-agent
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: "pre-upgrade, pre-install"
    helm.sh/hook-weight: "10"
    "helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded"
  labels:
    job: {{ .Release.Name }}-init-compass-rt-agent
spec:
  backoffLimit: 1
  template:
    metadata:
      name: {{ .Release.Name }}-init-compass-rt-agent
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        job: {{ .Release.Name }}-init-compass-rt-agent
    spec:
      serviceAccountName: {{ .Release.Name }}-crd-init
      restartPolicy: Never
      containers:
      - name: job
        image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200507-070ff576
        terminationMessagePolicy: "FallbackToLogsOnError"
        volumeMounts:
        - name: crd-compass-rt
          mountPath: /etc/crd
          readOnly: true
        command:
        - timeout
        - 60s
        - bash
        - -c
        - |-
          until \
          kubectl annotate crd compassconnections.compass.kyma-project.io helm.sh/hook- \
          || kubectl apply -f /etc/crd/compassconnections.compass.kyma-project.io; \
          do sleep 2; done
      volumes:
      - name: crd-compass-rt
        configMap:
          name: {{ .Release.Name }}-crd-compass-rt
