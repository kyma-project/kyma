{{ $files := .Files.Glob "files/**.yaml" }}
{{ $fileLen := len $files }}
{{ $configMapLen := int (add1 (div $fileLen .Values.jobs.crdsInConfigMap)) }}

{{ $currentScope := . }}

apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-crd-install
  annotations:
    "helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded"
    "helm.sh/hook": "pre-install, pre-upgrade"
    "helm.sh/hook-weight": "10"
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ .Release.Name }}-crd-install
      restartPolicy: OnFailure
      containers:
      - name: {{ .Release.Name }}-install-crds
        image: "{{ .Values.jobs.image.repository }}:{{ .Values.jobs.image.tag }}"
        command:
        - /bin/sh
        - -c
        args:
        - |
            set -e
            {{ range $idx, $_ := until $configMapLen }}
            kubectl apply -f /etc/crd-{{ $idx }}
            {{ end }}
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 200m
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        volumeMounts:
        {{ range $idx, $_ := until $configMapLen }}
        - name: crd-{{ $idx }}
          mountPath: /etc/crd-{{ $idx }}
          readOnly: true
        {{ end }}
      volumes:
      {{ range $idx, $_ := until $configMapLen }}
      {{- with $currentScope }}
      - name: crd-{{ $idx }}
        configMap:
          name: {{ .Release.Name }}-crd-{{ $idx }}
      {{- end }}
      {{ end }}
    {{- if .Values.global.priorityClassName }}
      priorityClassName: kyma-installer
    {{- end }}
