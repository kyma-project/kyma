apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pod-preset.fullname" . }}-webhook
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: {{ template "pod-preset.name" . }}-webhook
    chart: {{ template "pod-preset.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.webhook.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "pod-preset.name" . }}-webhook
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        checksum/config: {{ include (print $.Template.BasePath "/webhook/webhook.yaml") . | sha256sum }}
      labels:
        app: {{ template "pod-preset.name" . }}-webhook
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "pod-preset.fullname" . }}-webhook
      containers:
      - name: {{ .Chart.Name }}-webhook
        image: "{{ .Values.webhook.image.repository }}:{{ .Values.webhook.image.tag }}"
        imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
        args:
        - -tls-cert-file=/keys/webhook.crt
        - -tls-private-key-file=/keys/webhook.key
        - -tls-server-port=8443
        - -alsologtostderr
        - -v
        - "{{ .Values.webhook.verbosity }}"
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: webhook-cert
          mountPath: /keys
          readOnly: true
      volumes:
      - name: webhook-cert
        secret:
          secretName: {{ template "pod-preset.fullname" . }}-webhook-cert
          items:
          - key: tls.crt
            path: webhook.crt
          - key: tls.key
            path: webhook.key
