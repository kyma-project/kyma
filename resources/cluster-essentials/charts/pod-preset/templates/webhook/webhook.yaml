{{- if or (not .Values.cacert) (not .Values.cert) (not .Values.key)  }}
{{- $ca := genCA "pod-preset-webhook-ca" 3650 }}
{{- $encodedcacert := b64enc $ca.Cert }}
{{- $cn := printf "%s-webhook" (include "pod-preset.fullname" .) }}
{{- $altName1 := printf "%s.%s" $cn .Release.Namespace }}
{{- $altName2 := printf "%s.%s.svc" $cn .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2) 3650 $ca }}
{{- $encodedcert := b64enc $cert.Cert }}
{{- $encodedkey := b64enc $cert.Kay }}
{{- else }}
{{- $encodedcacert := b64enc ( include "tplValue" ( dict "value" .Values.cacert "context" . ))  -}}
{{- $encodedcert := b64enc ( include "tplValue" ( dict "value" .Values.cert "context" . )) -}}
{{- $encodedkey := b64enc ( include "tplValue" ( dict "value" .Values.key "context" . )) -}}
{{- end }}

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "pod-preset.fullname" . }}-webhook
  namespace: "{{ .Release.Namespace }}"
webhooks:
- clientConfig:
    caBundle: {{ $encodedcacert }}
    service:
      name: {{ template "pod-preset.fullname" . }}-webhook
      namespace: "{{ .Release.Namespace }}"
      path: /mutating-pods
  failurePolicy: Ignore
  name: podpresets.settings.svcat.k8s.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  namespaceSelector:
    matchExpressions:
    - key: gardener.cloud/purpose
      operator: NotIn
      values:
      - kube-system
  timeoutSeconds: {{ .Values.webhook.timeout }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "pod-preset.fullname" . }}-webhook-cert
  namespace: "{{ .Release.Namespace }}"
type: Opaque
data:
  tls.crt: {{ $encodedcert }}
  tls.key: {{ $encodedkey }}
