apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccountName: {{ template "fullname" . }}
      containers:
      - name: broker
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.helm_broker.dir }}helm-broker:{{ .Values.global.helm_broker.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            memory: 76Mi
            cpu: 60m
          requests:
            memory: 32Mi
            cpu: 30m
        env:
          - name: APP_PORT
            value: "{{ .Values.service.internalPort }}"
          - name: APP_STATUS_PORT
            value: "{{ .Values.service.statusPort }}"
          - name: APP_CONFIG_FILE_NAME
            value: /etc/config/helm-broker/config.yaml
          - name: APP_HELM_TILLER_HOST
            value: "tiller-deploy.kube-system.svc.cluster.local:44134"
          - name: APP_HELM_TILLER_TLS_INSECURE
            value: "{{ .Values.config.tillerTLSInsecure }}"
        volumeMounts:
        - mountPath: /tmp
          name: tmp-empty-dir
        - mountPath: /etc/config/helm-broker
          name: config-volume
        - mountPath: /etc/certs
          name: helm-certs
          readOnly: true
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        # Temporary solution for readiness probe
        # Ref: https://github.com/istio/istio/issues/2628
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.service.statusPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /live
            port: {{ .Values.service.statusPort }}
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 2

      - name: ctrl
        image: "{{ .Values.global.containerRegistry.path }}/{{ .Values.global.helm_broker.dir }}helm-controller:{{ .Values.global.helm_broker.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.ctrl.resources | indent 10 }}
        env:
          - name: APP_TMP_DIR
            value: /tmp
          - name: APP_STATUS_PORT
            value: "{{ .Values.ctrl.statusPort }}"
          - name: APP_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: APP_SERVICE_NAME
            value: {{ template "fullname" . }}
          - name: APP_CONFIG_FILE_NAME
            value: /etc/config/helm-broker/config.yaml
          - name: APP_CLUSTER_SERVICE_BROKER_NAME
            value: {{ template "fullname" . }}
          - name: APP_DEVELOP_MODE
            value: "{{ .Values.global.isDevelopMode }}"
          - name: APP_DOCUMENTATION_ENABLED
            value: "true"
          - name: APP_UPLOAD_SERVICE_URL
            value: "http://rafter-upload-service.kyma-system.svc.cluster.local:80"
        volumeMounts:
        - mountPath: /tmp
          name: tmp-empty-dir
        - mountPath: /etc/config/helm-broker
          name: config-volume
        - mountPath: /etc/certs
          name: helm-certs
          readOnly: true
        - mountPath: /root/.ssh
          name: ssh-cfg
          readOnly: true
        ports:
        - containerPort: {{ .Values.ctrl.internalPort }}
        # Temporary solution for readiness probe
        # Ref: https://github.com/istio/istio/issues/2628
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.ctrl.statusPort }}
          periodSeconds: 10
          timeoutSeconds: 2
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /live
            port: {{ .Values.ctrl.statusPort }}
          periodSeconds: 60
          timeoutSeconds: 30
          initialDelaySeconds: 10

      volumes:
      - name: tmp-empty-dir
        emptyDir:
          sizeLimit: "{{ .Values.ctrl.tmpDirSizeLimit }}"
      - name: config-volume
        configMap:
          name: helm-config-map
      - name: ssh-cfg
        configMap:
          name: ssh-cfg
      - name: helm-certs
        secret:
          secretName: helm-secret
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
