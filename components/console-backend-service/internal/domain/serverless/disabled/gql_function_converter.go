// Code generated by failery v1.0.0. DO NOT EDIT.

package disabled

import (
	gqlschema "github.com/kyma-project/kyma/components/console-backend-service/internal/gqlschema"

	v1alpha1 "github.com/kyma-project/kyma/components/function-controller/pkg/apis/serverless/v1alpha1"
)

// gqlFunctionConverter is an autogenerated failing mock type for the gqlFunctionConverter type
type gqlFunctionConverter struct {
	err error
}

// NewGqlFunctionConverter creates a new gqlFunctionConverter type instance
func NewGqlFunctionConverter(err error) *gqlFunctionConverter {
	return &gqlFunctionConverter{err: err}
}

// ToFunction provides a failing mock function with given fields: name, namespace, in
func (_m *gqlFunctionConverter) ToFunction(name string, namespace string, in gqlschema.FunctionMutationInput) (*v1alpha1.Function, error) {
	var r0 *v1alpha1.Function
	var r1 error
	r1 = _m.err

	return r0, r1
}

// ToGQL provides a failing mock function with given fields: item
func (_m *gqlFunctionConverter) ToGQL(item *v1alpha1.Function) (*gqlschema.Function, error) {
	var r0 *gqlschema.Function
	var r1 error
	r1 = _m.err

	return r0, r1
}

// ToGQLs provides a failing mock function with given fields: items
func (_m *gqlFunctionConverter) ToGQLs(items []*v1alpha1.Function) ([]*gqlschema.Function, error) {
	var r0 []*gqlschema.Function
	var r1 error
	r1 = _m.err

	return r0, r1
}
