// Code generated by failery v1.0.0. DO NOT EDIT.

package disabled

import (
	gqlschema "github.com/kyma-project/kyma/components/console-backend-service/internal/gqlschema"

	v1alpha1 "github.com/kyma-project/kyma/components/service-binding-usage-controller/pkg/apis/servicecatalog/v1alpha1"
)

// GqlServiceBindingUsageConverter is an autogenerated failing mock type for the GqlServiceBindingUsageConverter type
type GqlServiceBindingUsageConverter struct {
	err error
}

// NewGqlServiceBindingUsageConverter creates a new GqlServiceBindingUsageConverter type instance
func NewGqlServiceBindingUsageConverter(err error) *GqlServiceBindingUsageConverter {
	return &GqlServiceBindingUsageConverter{err: err}
}

// ToGQL provides a failing mock function with given fields: item
func (_m *GqlServiceBindingUsageConverter) ToGQL(item *v1alpha1.ServiceBindingUsage) (*gqlschema.ServiceBindingUsage, error) {
	var r0 *gqlschema.ServiceBindingUsage
	var r1 error
	r1 = _m.err

	return r0, r1
}

// ToGQLs provides a failing mock function with given fields: in
func (_m *GqlServiceBindingUsageConverter) ToGQLs(in []*v1alpha1.ServiceBindingUsage) ([]*gqlschema.ServiceBindingUsage, error) {
	var r0 []*gqlschema.ServiceBindingUsage
	var r1 error
	r1 = _m.err

	return r0, r1
}
