scalar LimitType @goModel(model: "k8s.io/api/core/v1.LimitType")
scalar MemoryLimit @goModel(model: "k8s.io/api/core/v1.ResourceLimitsMemory")
scalar CpuLimit @goModel(model: "k8s.io/api/core/v1.ResourceLimitsCPU")

type ResourceList @goModel(model: "k8s.io/api/core/v1.ResourceList") {
  cpu: CpuLimit
  memory: MemoryLimit
}

type LimitRangeItem @goModel(model: "k8s.io/api/core/v1.LimitRangeItem") {
  type: String!
  max: ResourceList
  default: ResourceList
  defaultRequest: ResourceList
}

type LimitRangeSpec @goModel(model: "k8s.io/api/core/v1.LimitRangeSpec") {
  limits: [LimitRangeItem!]!
}
type LimitRange @goModel(model: "k8s.io/api/core/v1.LimitRange") {
  name: String!
  spec: LimitRangeSpec!
}

input LimitRangeInput {
  default: ResourceValuesInput!
  defaultRequest: ResourceValuesInput!
  max: ResourceValuesInput!
  type: String!
}

extend type Query {
  limitRanges(namespace: String!): [LimitRange!]!
  @HasAccess(
    attributes: {
      resource: "limitranges"
      verb: "list"
      apiGroup: ""
      apiVersion: "v1"
      namespaceArg: "namespace"
    }
  )
}

# extend type Mutation {
#   createLimitRange(namespace: String!, name: String!, limitRange: LimitRangeInput!): LimitRange
#   @HasAccess(
#     attributes: {
#       resource: "limitrange"
#       verb: "create"
#       apiGroup: ""
#       apiVersion: "v1"
#       namespaceArg: "namespace"
#     }
#   )
# }
