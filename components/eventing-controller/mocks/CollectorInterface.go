// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	prometheus "github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"
)

// CollectorInterface is an autogenerated mock type for the CollectorInterface type
type CollectorInterface struct {
	mock.Mock
}

// Collect provides a mock function with given fields: _a0
func (_m *CollectorInterface) Collect(_a0 chan<- prometheus.Metric) {
	_m.Called(_a0)
}

// Describe provides a mock function with given fields: _a0
func (_m *CollectorInterface) Describe(_a0 chan<- *prometheus.Desc) {
	_m.Called(_a0)
}

// RecordDeliveryPerSubscription provides a mock function with given fields: subscriptionName, eventType, sink, statusCode
func (_m *CollectorInterface) RecordDeliveryPerSubscription(subscriptionName string, eventType string, sink string, statusCode int) {
	_m.Called(subscriptionName, eventType, sink, statusCode)
}

// RecordEventTypes provides a mock function with given fields: subscriptionName, subscriptionNamespace, eventType, consumer
func (_m *CollectorInterface) RecordEventTypes(subscriptionName string, subscriptionNamespace string, eventType string, consumer string) {
	_m.Called(subscriptionName, subscriptionNamespace, eventType, consumer)
}

// RegisterMetrics provides a mock function with given fields:
func (_m *CollectorInterface) RegisterMetrics() {
	_m.Called()
}

type mockConstructorTestingTNewCollectorInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCollectorInterface creates a new instance of CollectorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCollectorInterface(t mockConstructorTestingTNewCollectorInterface) *CollectorInterface {
	mock := &CollectorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
