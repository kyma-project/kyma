// Code generated by mockery v1.0.0. DO NOT EDIT.
package automock

import context "context"
import io "io"
import minio "github.com/minio/minio-go"
import mock "github.com/stretchr/testify/mock"

// MinioClient is an autogenerated mock type for the MinioClient type
type MinioClient struct {
	mock.Mock
}

// PutObjectWithContext provides a mock function with given fields: ctx, bucketName, objectName, reader, objectSize, opts
func (_m *MinioClient) PutObjectWithContext(ctx context.Context, bucketName string, objectName string, reader io.Reader, objectSize int64, opts minio.PutObjectOptions) (int64, error) {
	ret := _m.Called(ctx, bucketName, objectName, reader, objectSize, opts)

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Reader, int64, minio.PutObjectOptions) int64); ok {
		r0 = rf(ctx, bucketName, objectName, reader, objectSize, opts)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, io.Reader, int64, minio.PutObjectOptions) error); ok {
		r1 = rf(ctx, bucketName, objectName, reader, objectSize, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
