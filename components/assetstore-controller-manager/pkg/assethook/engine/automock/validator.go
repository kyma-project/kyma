// Code generated by mockery v1.0.0
package automock

import context "context"
import engine "github.com/kyma-project/kyma/components/assetstore-controller-manager/pkg/assethook/engine"
import mock "github.com/stretchr/testify/mock"
import v1alpha2 "github.com/kyma-project/kyma/components/assetstore-controller-manager/pkg/apis/assetstore/v1alpha2"

// Validator is an autogenerated mock type for the Validator type
type Validator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: ctx, object, basePath, files, services
func (_m *Validator) Validate(ctx context.Context, object engine.Accessor, basePath string, files []string, services []v1alpha2.AssetWebhookService) (engine.ValidationResult, error) {
	ret := _m.Called(ctx, object, basePath, files, services)

	var r0 engine.ValidationResult
	if rf, ok := ret.Get(0).(func(context.Context, engine.Accessor, string, []string, []v1alpha2.AssetWebhookService) engine.ValidationResult); ok {
		r0 = rf(ctx, object, basePath, files, services)
	} else {
		r0 = ret.Get(0).(engine.ValidationResult)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, engine.Accessor, string, []string, []v1alpha2.AssetWebhookService) error); ok {
		r1 = rf(ctx, object, basePath, files, services)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
