// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/components/connectivity-certs-controller/pkg/apis/applicationconnector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CertificateRequestLister helps list CertificateRequests.
type CertificateRequestLister interface {
	// List lists all CertificateRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CertificateRequest, err error)
	// Get retrieves the CertificateRequest from the index for a given name.
	Get(name string) (*v1alpha1.CertificateRequest, error)
	CertificateRequestListerExpansion
}

// certificateRequestLister implements the CertificateRequestLister interface.
type certificateRequestLister struct {
	indexer cache.Indexer
}

// NewCertificateRequestLister returns a new CertificateRequestLister.
func NewCertificateRequestLister(indexer cache.Indexer) CertificateRequestLister {
	return &certificateRequestLister{indexer: indexer}
}

// List lists all CertificateRequests in the indexer.
func (s *certificateRequestLister) List(selector labels.Selector) (ret []*v1alpha1.CertificateRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CertificateRequest))
	})
	return ret, err
}

// Get retrieves the CertificateRequest from the index for a given name.
func (s *certificateRequestLister) Get(name string) (*v1alpha1.CertificateRequest, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("certificaterequest"), name)
	}
	return obj.(*v1alpha1.CertificateRequest), nil
}
