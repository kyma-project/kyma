{
  "apiVersion": "apps/v1",
  "kind": "Deployment",
  "metadata": {
    "annotations": {
      "deployment.kubernetes.io/revision": "1"
    },
    "creationTimestamp": "2020-07-30T10:00:40Z",
    "generation": 906632,
    "labels": {
      "application-name": "blumpf"
    },
    "name": "blumpf",
    "namespace": "kyma-integration",
    "ownerReferences": [
      {
        "apiVersion": "sources.kyma-project.io/v1alpha1",
        "blockOwnerDeletion": true,
        "controller": true,
        "kind": "HTTPSource",
        "name": "blumpf",
        "uid": "2eb734df-0715-4976-83ca-37da7adad44f"
      }
    ],
    "resourceVersion": "5795750",
    "selfLink": "/apis/apps/v1/namespaces/kyma-integration/deployments/blumpf",
    "uid": "26ca84e4-df95-4941-a95a-bed17ab64cb6"
  },
  "spec": {
    "progressDeadlineSeconds": 600,
    "replicas": 1,
    "revisionHistoryLimit": 10,
    "selector": {
      "matchLabels": {
        "application-name": "blumpf"
      }
    },
    "strategy": {
      "rollingUpdate": {
        "maxSurge": "25%",
        "maxUnavailable": "25%"
      },
      "type": "RollingUpdate"
    },
    "template": {
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "application-name": "blumpf",
          "kyma-project.io/dashboard": "event-mesh"
        },
        "annotations": {
          "foo": "bar"
        }
      },
      "spec": {
        "containers": [
          {
            "env": [
              {
                "name": "EVENT_SOURCE",
                "value": "blumpf"
              },
              {
                "name": "SINK_URI",
                "value": "http://blumpf-kn-channel.kyma-integration.svc.cluster.local"
              },
              {
                "name": "NAMESPACE",
                "value": "kyma-integration"
              },
              {
                "name": "K_METRICS_CONFIG",
                "value": "{\"Domain\":\"kyma-project.io/controller-manager\",\"Component\":\"httpsource\",\"PrometheusPort\":9092,\"ConfigMap\":{\"_example\":\"################################\\n#                              #\\n#    EXAMPLE CONFIGURATION     #\\n#                              #\\n################################\\n\\n# This block is not actually functional configuration,\\n# but serves to illustrate the available configuration\\n# options and document them in a way that is accessible\\n# to users that `kubectl edit` this config map.\\n#\\n# These sample configuration options may be copied out of\\n# this example block and unindented to be in the data block\\n# to actually change the configuration.\\n\\n# metrics.backend-destination field specifies the system metrics destination.\\n# It supports either prometheus (the default) or stackdriver.\\n# Note: Using stackdriver will incur additional charges\\nmetrics.backend-destination: prometheus\\n\\n# metrics.request-metrics-backend-destination specifies the request metrics\\n# destination. If non-empty, it enables queue proxy to send request metrics.\\n# Currently supported values: prometheus, stackdriver.\\nmetrics.request-metrics-backend-destination: prometheus\\n\\n# metrics.stackdriver-project-id field specifies the stackdriver project ID. This\\n# field is optional. When running on GCE, application default credentials will be\\n# used if this field is not provided.\\nmetrics.stackdriver-project-id: \\\"\\u003cyour stackdriver project id\\u003e\\\"\\n\\n# metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to\\n# Stackdriver using \\\"global\\\" resource type and custom metric type if the\\n# metrics are not supported by \\\"knative_broker\\\", \\\"knative_trigger\\\", and \\\"knative_source\\\" resource types.\\n# Setting this flag to \\\"true\\\" could cause extra Stackdriver charge.\\n# If metrics.backend-destination is not Stackdriver, this is ignored.\\nmetrics.allow-stackdriver-custom-metrics: \\\"false\\\"\\n\"}}"
              },
              {
                "name": "K_LOGGING_CONFIG",
                "value": "{\"zap-logger-config\":\"{\\n  \\\"level\\\": \\\"info\\\",\\n  \\\"development\\\": false,\\n  \\\"outputPaths\\\": [\\\"stdout\\\"],\\n  \\\"errorOutputPaths\\\": [\\\"stderr\\\"],\\n  \\\"encoding\\\": \\\"json\\\",\\n  \\\"encoderConfig\\\": {\\n    \\\"timeKey\\\": \\\"ts\\\",\\n    \\\"levelKey\\\": \\\"level\\\",\\n    \\\"nameKey\\\": \\\"logger\\\",\\n    \\\"callerKey\\\": \\\"caller\\\",\\n    \\\"messageKey\\\": \\\"msg\\\",\\n    \\\"stacktraceKey\\\": \\\"stacktrace\\\",\\n    \\\"lineEnding\\\": \\\"\\\",\\n    \\\"levelEncoder\\\": \\\"\\\",\\n    \\\"timeEncoder\\\": \\\"iso8601\\\",\\n    \\\"durationEncoder\\\": \\\"\\\",\\n    \\\"callerEncoder\\\": \\\"\\\"\\n  }\\n}\\n\"}"
              },
              {
                "name": "PORT",
                "value": "8080"
              }
            ],
            "image": "eu.gcr.io/kyma-project/event-sources-http-adapter:08b6fe17",
            "imagePullPolicy": "IfNotPresent",
            "name": "source",
            "ports": [
              {
                "containerPort": 8080,
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "failureThreshold": 3,
              "httpGet": {
                "path": "/healthz",
                "port": 8080,
                "scheme": "HTTP"
              },
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 1
            },
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File"
          }
        ],
        "dnsPolicy": "ClusterFirst",
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "terminationGracePeriodSeconds": 30
      }
    }
  },
  "status": {
    "availableReplicas": 1,
    "conditions": [
      {
        "lastTransitionTime": "2020-07-30T10:00:52Z",
        "lastUpdateTime": "2020-07-30T10:00:52Z",
        "message": "Deployment has minimum availability.",
        "reason": "MinimumReplicasAvailable",
        "status": "True",
        "type": "Available"
      },
      {
        "lastTransitionTime": "2020-07-30T10:00:40Z",
        "lastUpdateTime": "2020-07-30T10:00:52Z",
        "message": "ReplicaSet \"blumpf-59b6cf4ff5\" has successfully progressed.",
        "reason": "NewReplicaSetAvailable",
        "status": "True",
        "type": "Progressing"
      }
    ],
    "observedGeneration": 906632,
    "readyReplicas": 1,
    "replicas": 1,
    "updatedReplicas": 1
  }
}
