// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/kyma-project/kyma/components/api-controller/pkg/apis/gateway.kyma-project.io/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiLister helps list Apis.
type ApiLister interface {
	// List lists all Apis in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.Api, err error)
	// Apis returns an object that can list and get Apis.
	Apis(namespace string) ApiNamespaceLister
	ApiListerExpansion
}

// apiLister implements the ApiLister interface.
type apiLister struct {
	indexer cache.Indexer
}

// NewApiLister returns a new ApiLister.
func NewApiLister(indexer cache.Indexer) ApiLister {
	return &apiLister{indexer: indexer}
}

// List lists all Apis in the indexer.
func (s *apiLister) List(selector labels.Selector) (ret []*v1alpha2.Api, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.Api))
	})
	return ret, err
}

// Apis returns an object that can list and get Apis.
func (s *apiLister) Apis(namespace string) ApiNamespaceLister {
	return apiNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiNamespaceLister helps list and get Apis.
type ApiNamespaceLister interface {
	// List lists all Apis in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.Api, err error)
	// Get retrieves the Api from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.Api, error)
	ApiNamespaceListerExpansion
}

// apiNamespaceLister implements the ApiNamespaceLister
// interface.
type apiNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Apis in the indexer for a given namespace.
func (s apiNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.Api, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.Api))
	})
	return ret, err
}

// Get retrieves the Api from the indexer for a given namespace and name.
func (s apiNamespaceLister) Get(name string) (*v1alpha2.Api, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("api"), name)
	}
	return obj.(*v1alpha2.Api), nil
}
