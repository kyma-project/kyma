/*
.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/components/connection-token-handler/pkg/apis/applicationconnector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TokenRequestLister helps list TokenRequests.
type TokenRequestLister interface {
	// List lists all TokenRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TokenRequest, err error)
	// TokenRequests returns an object that can list and get TokenRequests.
	TokenRequests(namespace string) TokenRequestNamespaceLister
	TokenRequestListerExpansion
}

// tokenRequestLister implements the TokenRequestLister interface.
type tokenRequestLister struct {
	indexer cache.Indexer
}

// NewTokenRequestLister returns a new TokenRequestLister.
func NewTokenRequestLister(indexer cache.Indexer) TokenRequestLister {
	return &tokenRequestLister{indexer: indexer}
}

// List lists all TokenRequests in the indexer.
func (s *tokenRequestLister) List(selector labels.Selector) (ret []*v1alpha1.TokenRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TokenRequest))
	})
	return ret, err
}

// TokenRequests returns an object that can list and get TokenRequests.
func (s *tokenRequestLister) TokenRequests(namespace string) TokenRequestNamespaceLister {
	return tokenRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TokenRequestNamespaceLister helps list and get TokenRequests.
type TokenRequestNamespaceLister interface {
	// List lists all TokenRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TokenRequest, err error)
	// Get retrieves the TokenRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TokenRequest, error)
	TokenRequestNamespaceListerExpansion
}

// tokenRequestNamespaceLister implements the TokenRequestNamespaceLister
// interface.
type tokenRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TokenRequests in the indexer for a given namespace.
func (s tokenRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TokenRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TokenRequest))
	})
	return ret, err
}

// Get retrieves the TokenRequest from the indexer for a given namespace and name.
func (s tokenRequestNamespaceLister) Get(name string) (*v1alpha1.TokenRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tokenrequest"), name)
	}
	return obj.(*v1alpha1.TokenRequest), nil
}
