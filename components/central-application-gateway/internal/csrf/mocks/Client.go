// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	apperrors "github.com/kyma-project/kyma/components/central-application-gateway/pkg/apperrors"
	authorization "github.com/kyma-project/kyma/components/central-application-gateway/pkg/authorization"

	csrf "github.com/kyma-project/kyma/components/central-application-gateway/internal/csrf"

	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetTokenEndpointResponse provides a mock function with given fields: csrfEndpointURL, strategy, skipTLSVerify
func (_m *Client) GetTokenEndpointResponse(csrfEndpointURL string, strategy authorization.Strategy, skipTLSVerify bool) (*csrf.Response, apperrors.AppError) {
	ret := _m.Called(csrfEndpointURL, strategy, skipTLSVerify)

	var r0 *csrf.Response
	if rf, ok := ret.Get(0).(func(string, authorization.Strategy, bool) *csrf.Response); ok {
		r0 = rf(csrfEndpointURL, strategy, skipTLSVerify)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*csrf.Response)
		}
	}

	var r1 apperrors.AppError
	if rf, ok := ret.Get(1).(func(string, authorization.Strategy, bool) apperrors.AppError); ok {
		r1 = rf(csrfEndpointURL, strategy, skipTLSVerify)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(apperrors.AppError)
		}
	}

	return r0, r1
}

// InvalidateTokenCache provides a mock function with given fields: csrfEndpointURL
func (_m *Client) InvalidateTokenCache(csrfEndpointURL string) {
	_m.Called(csrfEndpointURL)
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
