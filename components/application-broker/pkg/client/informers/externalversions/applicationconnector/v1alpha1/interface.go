// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/kyma-project/kyma/components/application-broker/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// ApplicationMappings returns a ApplicationMappingInformer.
	ApplicationMappings() ApplicationMappingInformer
	// EnvironmentMappings returns a EnvironmentMappingInformer.
	EnvironmentMappings() EnvironmentMappingInformer
	// EventActivations returns a EventActivationInformer.
	EventActivations() EventActivationInformer
	// RemoteEnvironments returns a RemoteEnvironmentInformer.
	RemoteEnvironments() RemoteEnvironmentInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ApplicationMappings returns a ApplicationMappingInformer.
func (v *version) ApplicationMappings() ApplicationMappingInformer {
	return &applicationMappingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// EnvironmentMappings returns a EnvironmentMappingInformer.
func (v *version) EnvironmentMappings() EnvironmentMappingInformer {
	return &environmentMappingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// EventActivations returns a EventActivationInformer.
func (v *version) EventActivations() EventActivationInformer {
	return &eventActivationInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RemoteEnvironments returns a RemoteEnvironmentInformer.
func (v *version) RemoteEnvironments() RemoteEnvironmentInformer {
	return &remoteEnvironmentInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
