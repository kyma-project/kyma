// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/components/application-broker/pkg/apis/applicationconnector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EnvironmentMappingLister helps list EnvironmentMappings.
type EnvironmentMappingLister interface {
	// List lists all EnvironmentMappings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EnvironmentMapping, err error)
	// EnvironmentMappings returns an object that can list and get EnvironmentMappings.
	EnvironmentMappings(namespace string) EnvironmentMappingNamespaceLister
	EnvironmentMappingListerExpansion
}

// environmentMappingLister implements the EnvironmentMappingLister interface.
type environmentMappingLister struct {
	indexer cache.Indexer
}

// NewEnvironmentMappingLister returns a new EnvironmentMappingLister.
func NewEnvironmentMappingLister(indexer cache.Indexer) EnvironmentMappingLister {
	return &environmentMappingLister{indexer: indexer}
}

// List lists all EnvironmentMappings in the indexer.
func (s *environmentMappingLister) List(selector labels.Selector) (ret []*v1alpha1.EnvironmentMapping, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EnvironmentMapping))
	})
	return ret, err
}

// EnvironmentMappings returns an object that can list and get EnvironmentMappings.
func (s *environmentMappingLister) EnvironmentMappings(namespace string) EnvironmentMappingNamespaceLister {
	return environmentMappingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EnvironmentMappingNamespaceLister helps list and get EnvironmentMappings.
type EnvironmentMappingNamespaceLister interface {
	// List lists all EnvironmentMappings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EnvironmentMapping, err error)
	// Get retrieves the EnvironmentMapping from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EnvironmentMapping, error)
	EnvironmentMappingNamespaceListerExpansion
}

// environmentMappingNamespaceLister implements the EnvironmentMappingNamespaceLister
// interface.
type environmentMappingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EnvironmentMappings in the indexer for a given namespace.
func (s environmentMappingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EnvironmentMapping, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EnvironmentMapping))
	})
	return ret, err
}

// Get retrieves the EnvironmentMapping from the indexer for a given namespace and name.
func (s environmentMappingNamespaceLister) Get(name string) (*v1alpha1.EnvironmentMapping, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("environmentmapping"), name)
	}
	return obj.(*v1alpha1.EnvironmentMapping), nil
}
