// Code generated by mockery v1.0.0
package automock

import access "github.com/kyma-project/kyma/components/application-broker/internal/access"
import internal "github.com/kyma-project/kyma/components/application-broker/internal"
import mock "github.com/stretchr/testify/mock"
import time "time"

// ProvisionChecker is an autogenerated mock type for the ProvisionChecker type
type ProvisionChecker struct {
	mock.Mock
}

// CanProvision provides a mock function with given fields: iID, rsID, namespace, maxWaitTime
func (_m *ProvisionChecker) CanProvision(iID internal.InstanceID, rsID internal.RemoteServiceID, namespace internal.Namespace, maxWaitTime time.Duration) (access.CanProvisionOutput, error) {
	ret := _m.Called(iID, rsID, namespace, maxWaitTime)

	var r0 access.CanProvisionOutput
	if rf, ok := ret.Get(0).(func(internal.InstanceID, internal.RemoteServiceID, internal.Namespace, time.Duration) access.CanProvisionOutput); ok {
		r0 = rf(iID, rsID, namespace, maxWaitTime)
	} else {
		r0 = ret.Get(0).(access.CanProvisionOutput)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(internal.InstanceID, internal.RemoteServiceID, internal.Namespace, time.Duration) error); ok {
		r1 = rf(iID, rsID, namespace, maxWaitTime)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
