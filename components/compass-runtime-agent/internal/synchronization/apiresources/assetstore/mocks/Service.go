// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import apperrors "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/apperrors"

import docstopic "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/synchronization/apiresources/assetstore/docstopic"
import mock "github.com/stretchr/testify/mock"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Put provides a mock function with given fields: id, apiType, documentation, apiSpec, eventsSpec
func (_m *Service) Put(id string, apiType docstopic.ApiType, documentation []byte, apiSpec []byte, eventsSpec []byte) apperrors.AppError {
	ret := _m.Called(id, apiType, documentation, apiSpec, eventsSpec)

	var r0 apperrors.AppError
	if rf, ok := ret.Get(0).(func(string, docstopic.ApiType, []byte, []byte, []byte) apperrors.AppError); ok {
		r0 = rf(id, apiType, documentation, apiSpec, eventsSpec)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apperrors.AppError)
		}
	}

	return r0
}

// Remove provides a mock function with given fields: id
func (_m *Service) Remove(id string) apperrors.AppError {
	ret := _m.Called(id)

	var r0 apperrors.AppError
	if rf, ok := ret.Get(0).(func(string) apperrors.AppError); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apperrors.AppError)
		}
	}

	return r0
}
