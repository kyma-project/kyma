// Code generated by mockery v2.7.5. DO NOT EDIT.

package mocks

import (
	apperrors "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/apperrors"
	applications "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/kyma/applications"

	mock "github.com/stretchr/testify/mock"

	model "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/kyma/model"

	strategy "github.com/kyma-project/kyma/components/compass-runtime-agent/internal/kyma/secrets/strategy"
)

// AccessStrategy is an autogenerated mock type for the AccessStrategy type
type AccessStrategy struct {
	mock.Mock
}

// ToCredentials provides a mock function with given fields: secretData, appCredentials
func (_m *AccessStrategy) ToCredentials(secretData strategy.SecretData, appCredentials *applications.Credentials) (model.Credentials, apperrors.AppError) {
	ret := _m.Called(secretData, appCredentials)

	var r0 model.Credentials
	if rf, ok := ret.Get(0).(func(strategy.SecretData, *applications.Credentials) model.Credentials); ok {
		r0 = rf(secretData, appCredentials)
	} else {
		r0 = ret.Get(0).(model.Credentials)
	}

	var r1 apperrors.AppError
	if rf, ok := ret.Get(1).(func(strategy.SecretData, *applications.Credentials) apperrors.AppError); ok {
		r1 = rf(secretData, appCredentials)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(apperrors.AppError)
		}
	}

	return r0, r1
}
