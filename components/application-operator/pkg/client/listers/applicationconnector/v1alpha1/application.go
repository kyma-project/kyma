// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/components/application-operator/pkg/apis/applicationconnector/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApplicationLister helps list Applications.
type ApplicationLister interface {
	// List lists all Applications in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Application, err error)
	// Get retrieves the Application from the index for a given name.
	Get(name string) (*v1alpha1.Application, error)
	ApplicationListerExpansion
}

// applicationLister implements the ApplicationLister interface.
type applicationLister struct {
	indexer cache.Indexer
}

// NewApplicationLister returns a new ApplicationLister.
func NewApplicationLister(indexer cache.Indexer) ApplicationLister {
	return &applicationLister{indexer: indexer}
}

// List lists all Applications in the indexer.
func (s *applicationLister) List(selector labels.Selector) (ret []*v1alpha1.Application, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Application))
	})
	return ret, err
}

// Get retrieves the Application from the index for a given name.
func (s *applicationLister) Get(name string) (*v1alpha1.Application, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("application"), name)
	}
	return obj.(*v1alpha1.Application), nil
}
