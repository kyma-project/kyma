// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import client "sigs.k8s.io/controller-runtime/pkg/client"
import context "context"
import mock "github.com/stretchr/testify/mock"

import types "k8s.io/apimachinery/pkg/types"

// ServiceInstanceManagerClient is an autogenerated mock type for the ServiceInstanceManagerClient type
type ServiceInstanceManagerClient struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, key, obj
func (_m *ServiceInstanceManagerClient) Get(ctx context.Context, key types.NamespacedName, obj client.Object) error {
	ret := _m.Called(ctx, key, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.NamespacedName, client.Object) error); ok {
		r0 = rf(ctx, key, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields: ctx, out, opts
func (_m *ServiceInstanceManagerClient) List(ctx context.Context, out client.ObjectList, opts ...client.ListOption) error {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, out)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, client.ObjectList, ...client.ListOption) error); ok {
		r0 = rf(ctx, out, opts...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
