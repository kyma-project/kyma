// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	v1alpha1 "github.com/kyma-project/kyma/components/telemetry-operator/api/v1alpha1"
)

// PluginValidator is an autogenerated mock type for the PluginValidator type
type PluginValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: logPipeline
func (_m *PluginValidator) Validate(logPipeline *v1alpha1.LogPipeline) error {
	ret := _m.Called(logPipeline)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.LogPipeline) error); ok {
		r0 = rf(logPipeline)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPluginValidator creates a new instance of PluginValidator. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewPluginValidator(t testing.TB) *PluginValidator {
	mock := &PluginValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
