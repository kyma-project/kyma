// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import apperrors "github.com/kyma-project/kyma/components/application-registry/internal/apperrors"
import applications "github.com/kyma-project/kyma/components/application-registry/internal/metadata/applications"
import mock "github.com/stretchr/testify/mock"
import model "github.com/kyma-project/kyma/components/application-registry/internal/metadata/model"
import strategy "github.com/kyma-project/kyma/components/application-registry/internal/metadata/secrets/strategy"

// ModificationStrategy is an autogenerated mock type for the ModificationStrategy type
type ModificationStrategy struct {
	mock.Mock
}

// CreateSecretData provides a mock function with given fields: credentials
func (_m *ModificationStrategy) CreateSecretData(credentials *model.Credentials) (strategy.SecretData, apperrors.AppError) {
	ret := _m.Called(credentials)

	var r0 strategy.SecretData
	if rf, ok := ret.Get(0).(func(*model.Credentials) strategy.SecretData); ok {
		r0 = rf(credentials)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(strategy.SecretData)
		}
	}

	var r1 apperrors.AppError
	if rf, ok := ret.Get(1).(func(*model.Credentials) apperrors.AppError); ok {
		r1 = rf(credentials)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(apperrors.AppError)
		}
	}

	return r0, r1
}

// CredentialsProvided provides a mock function with given fields: credentials
func (_m *ModificationStrategy) CredentialsProvided(credentials *model.Credentials) bool {
	ret := _m.Called(credentials)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*model.Credentials) bool); ok {
		r0 = rf(credentials)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ShouldUpdate provides a mock function with given fields: currentData, newData
func (_m *ModificationStrategy) ShouldUpdate(currentData strategy.SecretData, newData strategy.SecretData) bool {
	ret := _m.Called(currentData, newData)

	var r0 bool
	if rf, ok := ret.Get(0).(func(strategy.SecretData, strategy.SecretData) bool); ok {
		r0 = rf(currentData, newData)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ToCredentialsInfo provides a mock function with given fields: credentials, secretName
func (_m *ModificationStrategy) ToCredentialsInfo(credentials *model.Credentials, secretName string) applications.Credentials {
	ret := _m.Called(credentials, secretName)

	var r0 applications.Credentials
	if rf, ok := ret.Get(0).(func(*model.Credentials, string) applications.Credentials); ok {
		r0 = rf(credentials, secretName)
	} else {
		r0 = ret.Get(0).(applications.Credentials)
	}

	return r0
}
