// Code generated by mockery v2.1.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// NameResolver is an autogenerated mock type for the NameResolver type
type NameResolver struct {
	mock.Mock
}

// ExtractServiceId provides a mock function with given fields: applicaton, host
func (_m *NameResolver) ExtractServiceId(applicaton string, host string) string {
	ret := _m.Called(applicaton, host)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(applicaton, host)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCentralGatewayUrl provides a mock function with given fields: applicationName, serviceDisplayName
func (_m *NameResolver) GetCentralGatewayUrl(applicationName string, serviceDisplayName string) string {
	ret := _m.Called(applicationName, serviceDisplayName)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(applicationName, serviceDisplayName)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetGatewayUrl provides a mock function with given fields: application, id
func (_m *NameResolver) GetGatewayUrl(application string, id string) string {
	ret := _m.Called(application, id)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(application, id)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetResourceName provides a mock function with given fields: application, id
func (_m *NameResolver) GetResourceName(application string, id string) string {
	ret := _m.Called(application, id)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(application, id)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
