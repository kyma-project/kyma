// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/kyma-project/kyma/components/application-registry/pkg/apis/istio/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DenierLister helps list Deniers.
type DenierLister interface {
	// List lists all Deniers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.Denier, err error)
	// Deniers returns an object that can list and get Deniers.
	Deniers(namespace string) DenierNamespaceLister
	DenierListerExpansion
}

// denierLister implements the DenierLister interface.
type denierLister struct {
	indexer cache.Indexer
}

// NewDenierLister returns a new DenierLister.
func NewDenierLister(indexer cache.Indexer) DenierLister {
	return &denierLister{indexer: indexer}
}

// List lists all Deniers in the indexer.
func (s *denierLister) List(selector labels.Selector) (ret []*v1alpha2.Denier, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.Denier))
	})
	return ret, err
}

// Deniers returns an object that can list and get Deniers.
func (s *denierLister) Deniers(namespace string) DenierNamespaceLister {
	return denierNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DenierNamespaceLister helps list and get Deniers.
type DenierNamespaceLister interface {
	// List lists all Deniers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.Denier, err error)
	// Get retrieves the Denier from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.Denier, error)
	DenierNamespaceListerExpansion
}

// denierNamespaceLister implements the DenierNamespaceLister
// interface.
type denierNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Deniers in the indexer for a given namespace.
func (s denierNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.Denier, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.Denier))
	})
	return ret, err
}

// Get retrieves the Denier from the indexer for a given namespace and name.
func (s denierNamespaceLister) Get(name string) (*v1alpha2.Denier, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("denier"), name)
	}
	return obj.(*v1alpha2.Denier), nil
}
