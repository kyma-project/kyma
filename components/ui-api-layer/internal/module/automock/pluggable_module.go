// Code generated by mockery v1.0.0
package automock

import mock "github.com/stretchr/testify/mock"

// PluggableModule is an autogenerated mock type for the PluggableModule type
type PluggableModule struct {
	mock.Mock
}

// Disable provides a mock function with given fields:
func (_m *PluggableModule) Disable() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Enable provides a mock function with given fields:
func (_m *PluggableModule) Enable() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsEnabled provides a mock function with given fields:
func (_m *PluggableModule) IsEnabled() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *PluggableModule) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
