// Code generated by failery v1.0.0. DO NOT EDIT.

package disabled

import context "context"
import gqlschema "github.com/kyma-project/kyma/components/ui-api-layer/internal/gqlschema"

// resolver is an autogenerated failing mock type for the resolver type
type resolver struct {
	err error
}

// NewResolver creates a new resolver type instance
func NewResolver(err error) *resolver {
	return &resolver{err: err}
}

// CreateIDPPresetMutation provides a failing mock function with given fields: ctx, name, issuer, jwksURI
func (_m *resolver) CreateIDPPresetMutation(ctx context.Context, name string, issuer string, jwksURI string) (*gqlschema.IDPPreset, error) {
	var r0 *gqlschema.IDPPreset
	var r1 error
	r1 = _m.err

	return r0, r1
}

// DeleteIDPPresetMutation provides a failing mock function with given fields: ctx, name
func (_m *resolver) DeleteIDPPresetMutation(ctx context.Context, name string) (*gqlschema.IDPPreset, error) {
	var r0 *gqlschema.IDPPreset
	var r1 error
	r1 = _m.err

	return r0, r1
}

// IDPPresetQuery provides a failing mock function with given fields: ctx, name
func (_m *resolver) IDPPresetQuery(ctx context.Context, name string) (*gqlschema.IDPPreset, error) {
	var r0 *gqlschema.IDPPreset
	var r1 error
	r1 = _m.err

	return r0, r1
}

// IDPPresetsQuery provides a failing mock function with given fields: ctx, first, offset
func (_m *resolver) IDPPresetsQuery(ctx context.Context, first *int, offset *int) ([]gqlschema.IDPPreset, error) {
	var r0 []gqlschema.IDPPreset
	var r1 error
	r1 = _m.err

	return r0, r1
}
