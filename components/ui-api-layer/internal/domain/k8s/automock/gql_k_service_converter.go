// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import gqlschema "github.com/kyma-project/kyma/components/ui-api-layer/internal/gqlschema"

import mock "github.com/stretchr/testify/mock"
import v1 "k8s.io/api/core/v1"

// gqlKServiceConverter is an autogenerated mock type for the gqlKServiceConverter type
type gqlKServiceConverter struct {
	mock.Mock
}

// ToGQL provides a mock function with given fields: in
func (_m *gqlKServiceConverter) ToGQL(in *v1.Service) *gqlschema.KService {
	ret := _m.Called(in)

	var r0 *gqlschema.KService
	if rf, ok := ret.Get(0).(func(*v1.Service) *gqlschema.KService); ok {
		r0 = rf(in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gqlschema.KService)
		}
	}

	return r0
}

// ToGQLs provides a mock function with given fields: in
func (_m *gqlKServiceConverter) ToGQLs(in []*v1.Service) []gqlschema.KService {
	ret := _m.Called(in)

	var r0 []gqlschema.KService
	if rf, ok := ret.Get(0).(func([]*v1.Service) []gqlschema.KService); ok {
		r0 = rf(in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]gqlschema.KService)
		}
	}

	return r0
}
