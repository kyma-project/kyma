
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: functions.serverless.kyma-project.io
spec:
  group: serverless.kyma-project.io
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='ConfigurationReady')].status
      name: Configured
      type: string
    - jsonPath: .status.conditions[?(@.type=='BuildReady')].status
      name: Built
      type: string
    - jsonPath: .status.conditions[?(@.type=='Running')].status
      name: Running
      type: string
    - jsonPath: .status.runtime
      name: Runtime
      type: string
    - jsonPath: .metadata.generation
      name: Version
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: Function v1alpha1 is deprecated. Use v1alpha2 instead
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              baseDir:
                type: string
              buildResources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              deps:
                description: Deps defines the dependencies for a function
                type: string
              env:
                description: Env defines an array of key value pairs need to be used
                  as env variable for a function
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              labels:
                additionalProperties:
                  type: string
                type: object
              maxReplicas:
                format: int32
                minimum: 1
                type: integer
              minReplicas:
                format: int32
                minimum: 1
                type: integer
              reference:
                type: string
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              runtime:
                description: Runtime enumerates runtimes that are currently supported
                  by Function Controller It is a subset of RuntimeExtended
                enum:
                - nodejs14
                - nodejs16
                - python39
                type: string
              runtimeImageOverride:
                type: string
              source:
                description: Source defines the source code of a function
                type: string
              type:
                type: string
            required:
            - source
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              baseDir:
                type: string
              commit:
                type: string
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType defines condition of function.
                      type: string
                  required:
                  - status
                  type: object
                type: array
              reference:
                type: string
              runtime:
                description: RuntimeExtended enumerates runtimes that are either currently
                  supported or no longer supported but there still might be "read-only"
                  Functions using them
                enum:
                - nodejs12
                - nodejs14
                - nodejs16
                - nodejs10
                - python38
                - python39
                type: string
              runtimeImageOverride:
                type: string
              source:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='ConfigurationReady')].status
      name: Configured
      type: string
    - jsonPath: .status.conditions[?(@.type=='BuildReady')].status
      name: Built
      type: string
    - jsonPath: .status.conditions[?(@.type=='Running')].status
      name: Running
      type: string
    - jsonPath: .spec.runtime
      name: Runtime
      type: string
    - jsonPath: .metadata.generation
      name: Version
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: A simple code snippet that you can run without provisioning or
          managing servers. It implements the exact business logic you define. A Function
          is based on the Function custom resource (CR) and can be written in either
          Node.js or Python. A Function can perform a business logic of its own. You
          can also bind it to an instance of a service and configure it to be triggered
          whenever it receives a particular event type from the service or a call
          is made to the service's API. Functions are executed only if they are triggered
          by an event or an API call.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              env:
                description: Env specifies an array of key-value pairs to be used
                  as environment variables for the Function. You can define values
                  as static strings or reference values from ConfigMaps or Secrets.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              replicas:
                description: Replicas defines the exact number of Function's Pods
                  to run at a time. If ScaleConfig is configured, or if Function is
                  targeted by an external scaler, then the Replicas field is used
                  by the relevant HorizontalPodAutoscaler to control the number of
                  active replicas.
                format: int32
                type: integer
              resourceConfiguration:
                description: ResourceConfiguration specifies resources requested by
                  Function and build Job.
                properties:
                  build:
                    description: Build specifies resources requested by the build
                      Job's Pod.
                    properties:
                      profile:
                        description: Profile defines name of predefined set of values
                          of resource. Can't be used at the same time with Resources.
                        type: string
                      resources:
                        description: Resources defines amount of resources available
                          for the Pod to use. Can't be used at the same time with
                          Profile.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  function:
                    description: Function specifies resources requested by the Function's
                      Pod.
                    properties:
                      profile:
                        description: Profile defines name of predefined set of values
                          of resource. Can't be used at the same time with Resources.
                        type: string
                      resources:
                        description: Resources defines amount of resources available
                          for the Pod to use. Can't be used at the same time with
                          Profile.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                type: object
              runtime:
                description: Runtime specifies the runtime of the Function. The available
                  values are `nodejs14`, `nodejs16`, and `python39`.
                type: string
              runtimeImageOverride:
                description: RuntimeImageOverride specifies the runtimes image which
                  must be used instead of the default one.
                type: string
              scaleConfig:
                description: ScaleConfig defines minimum and maximum number of Function's
                  Pods to run at a time. When it is configured, a HorizontalPodAutoscaler
                  will be deployed and will control the Replicas field to scale Function
                  based on the CPU utilisation.
                properties:
                  maxReplicas:
                    description: MaxReplicas defines the maximum number of Function's
                      Pods to run at a time.
                    format: int32
                    minimum: 1
                    type: integer
                  minReplicas:
                    description: MinReplicas defines the minimum number of Function's
                      Pods to run at a time.
                    format: int32
                    minimum: 1
                    type: integer
                required:
                - maxReplicas
                - minReplicas
                type: object
              secretMounts:
                description: SecretMounts specifies Secrets to mount into the Function's
                  container filesystem.
                items:
                  properties:
                    mountPath:
                      description: MountPath specifies path within the container at
                        which the Secret should be mounted.
                      type: string
                    secretName:
                      description: SecretName specifies name of the Secret in the
                        Function's Namespace to use.
                      type: string
                  required:
                  - mountPath
                  - secretName
                  type: object
                type: array
              source:
                description: Source contains the Function's specification.
                properties:
                  gitRepository:
                    description: GitRepository defines Function as git-sourced. Can't
                      be used at the same time with Inline.
                    properties:
                      auth:
                        description: Auth specifies that you must authenticate to
                          the Git repository. Required for SSH.
                        properties:
                          secretName:
                            description: SecretName specifies the name of the Secret
                              with credentials used by the Function Controller to
                              authenticate to the Git repository in order to fetch
                              the Function's source code and dependencies. This Secret
                              must be stored in the same Namespace as the Function
                              CR.
                            type: string
                          type:
                            description: RepositoryAuthType defines if you must authenticate
                              to the repository with a password or token (`basic`),
                              or an SSH key (`key`). For SSH, this parameter must
                              be set to `key`.
                            enum:
                            - basic
                            - key
                            type: string
                        required:
                        - secretName
                        - type
                        type: object
                      baseDir:
                        description: BaseDir specifies the relative path to the Git
                          directory that contains the source code from which the Function
                          is built.
                        type: string
                      reference:
                        description: Reference specifies either the branch name, tag
                          or the commit revision from which the Function Controller
                          automatically fetches the changes in the Function's code
                          and dependencies.
                        type: string
                      url:
                        description: URL provides the address to the Git repository
                          with the Function's code and dependencies. Depending on
                          whether the repository is public or private and what authentication
                          method is used to access it, the URL must start with the
                          `http(s)`, `git`, or `ssh` prefix.
                        type: string
                    required:
                    - url
                    type: object
                  inline:
                    description: Inline defines Function as the inline Function. Can't
                      be used at the same time with GitRepository.
                    properties:
                      dependencies:
                        description: Dependencies specifies the Function's dependencies.
                        type: string
                      source:
                        description: Source provides the Function's full source code.
                        type: string
                    required:
                    - source
                    type: object
                type: object
              template:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                type: object
            required:
            - runtime
            - source
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              baseDir:
                description: BaseDir specifies the relative path to the Git directory
                  that contains the source code from which the Function is built.
                type: string
              commit:
                type: string
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: 'TODO: Status related things needs to be developed.'
                      type: string
                  required:
                  - status
                  type: object
                type: array
              podSelector:
                type: string
              reference:
                description: Reference specifies either the branch name, tag or the
                  commit revision from which the Function Controller automatically
                  fetches the changes in the Function's code and dependencies.
                type: string
              replicas:
                format: int32
                type: integer
              runtime:
                description: Runtime specifies the name of the Function's runtime.
                type: string
              runtimeImageOverride:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.podSelector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
