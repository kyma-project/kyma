// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import (
	billy "github.com/go-git/go-billy/v5"
	git "github.com/go-git/go-git/v5"

	mock "github.com/stretchr/testify/mock"

	storage "github.com/go-git/go-git/v5/storage"
)

// GitOperator is an autogenerated mock type for the GitOperator type
type GitOperator struct {
	mock.Mock
}

// Clone provides a mock function with given fields: s, worktree, o
func (_m *GitOperator) Clone(s storage.Storer, worktree billy.Filesystem, o *git.CloneOptions) (*git.Repository, error) {
	ret := _m.Called(s, worktree, o)

	var r0 *git.Repository
	if rf, ok := ret.Get(0).(func(storage.Storer, billy.Filesystem, *git.CloneOptions) *git.Repository); ok {
		r0 = rf(s, worktree, o)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*git.Repository)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(storage.Storer, billy.Filesystem, *git.CloneOptions) error); ok {
		r1 = rf(s, worktree, o)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
