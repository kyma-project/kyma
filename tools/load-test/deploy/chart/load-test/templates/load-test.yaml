---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "load-test.fullname" . }}
  labels:
    helm-chart-test: "true"
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete", "get", "list"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create", "delete", "get", "list", "patch"]
- apiGroups: [""]
  resources: ["services", "services/proxy", "configmaps", "pods/log", "replicationcontrollers"]
  verbs: ["get", "list"]
- apiGroups: ["kubeless.io"]
  resources: ["functions"]
  verbs: ["create", "delete", "get", "list"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["cronjobs"]
  verbs: ["get", "list"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "load-test.fullname" . }}
  labels:
    helm-chart-test: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "load-test.fullname" . }}
  labels:
    helm-chart-test: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "load-test.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ template "load-test.fullname" . }}
  namespace: kyma-system
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ template "load-test.fullname" . }}
  annotations:
    sidecar.istio.io/inject: "true"
  labels:
    helm-chart-test: "true"
    app: {{ template "load-test.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  shareProcessNamespace: true
  serviceAccount: {{ template "load-test.fullname" . }}
  containers:
  - name: load-test
    image: {{ .Values.containerRegistry.path }}/develop/load-test:{{ .Values.image.tag }}
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh"]
    args: ["-c", "sleep 10; /load-test; exit_code=$?; pkill -INT pilot-agent; sleep 4; exit $exit_code;"]
    env:
    - name: KUBELESS_CONFIG
      value: {{ .Values.env.kubelessConfig }}
    - name: KUBELESS_NAMESPACE
      value: {{ .Values.env.kubelessNamespace }}
    - name: LOAD_TEST_SLACK_TOKEN
      value: {{ .Values.slackClientToken | quote }}
    - name: LOAD_TEST_SLACK_CHANNEL
      value: {{ .Values.slackClientChannelId | quote }}
    - name: LOAD_TEST_TOTAL_REQS_PER_ROUTINE
      value: {{ .Values.reqsPerRoutine | quote }}
    - name: LOAD_TEST_EXECUTION_TIMEOUT
      value:  {{ .Values.loadTestExecutionTimeout | quote }}
  restartPolicy: Never
