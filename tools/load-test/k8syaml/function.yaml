apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  annotations:
    function-size: M
  name: load-test
spec:
  deps: ""
  runtime: nodejs8
  function: |-
    module.exports = { main: function (event, context) {
        blockCpuFor(200);
        return event.data + ": Call to the function load-test was successful!";
    } }

    function blockCpuFor(ms) {
        var now = new Date().getTime();
        var result = 0
        while(true) {
            result += Math.random() * Math.random();
            if (new Date().getTime() > now +ms)
                return;
        }
    }
  handler: handler.main
  deployment:
    metadata:
      namespace: load-test
    spec:
      replicas: 2
      template: {spec: {containers: [{name: load-test, resources: {limits: {cpu: 500m, memory: 256Mi}, requests: {cpu: 100m, memory: 100Mi}}}]}}
  horizontalPodAutoscaler:
    metadata:
      labels:
        function: load-test
      name: load-test
      namespace: load-test
    spec:
      maxReplicas: 5
      minReplicas: 2
      metrics: [{resource: {name: cpu, targetAverageUtilization: 40}, type: Resource}]
      scaleTargetRef:
        apiVersion: apps/v1beta1
        kind: Deployment
        name: load-test
