name: 📰 Deploy VitePress site to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      btp_manager_branch:
        description: 'Branch for btp-manager'
        required: false
        default: 'main'
      istio_branch:
        description: 'Branch for istio'
        required: false
        default: 'main'
      serverless_branch:
        description: 'Branch for serverless'
        required: false
        default: 'main'
      telemetry_manager_branch:
        description: 'Branch for telemetry-manager'
        required: false
        default: 'main'
      eventing_manager_branch:
        description: 'Branch for eventing-manager'
        required: false
        default: 'main'
      api_gateway_branch:
        description: 'Branch for api-gateway'
        required: false
        default: 'main'
      nats_manager_branch:
        description: 'Branch for nats-manager'
        required: false
        default: 'main'
      application_connector_manager_branch:
        description: 'Branch for application-connector-manager'
        required: false
        default: 'main'
      keda_manager_branch:
        description: 'Branch for keda-manager'
        required: false
        default: 'main'
      cloud_manager_branch:
        description: 'Branch for cloud-manager'
        required: false
        default: 'main'
      docker_registry_branch:
        description: 'Branch for docker-registry'
        required: false
        default: 'main'
      busola_branch:
        description: 'Branch for busola'
        required: false
        default: 'main'
      cli_branch:
        description: 'Branch for cli'
        required: false
        default: 'main'
      registry_proxy_branch:
        description: 'Branch for registry-proxy'
        required: false
        default: 'main'
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  copy-docs:
    strategy:
      fail-fast: false
      matrix:
        repository:
          - btp-manager
          - istio
          - serverless
          - telemetry-manager
          - eventing-manager
          - api-gateway
          - nats-manager
          - application-connector-manager
          - keda-manager
          - cloud-manager
          - docker-registry
          - busola
          - cli
          - registry-proxy
    runs-on: ubuntu-latest
    steps:
      - name: 🔧 Determine branch for ${{matrix.repository}}
        id: get-branch
        run: |
          case "${{matrix.repository}}" in
            "btp-manager")
              BRANCH="${{ inputs.btp_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.BTP_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "istio")
              BRANCH="${{ inputs.istio_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.ISTIO_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "serverless")
              BRANCH="${{ inputs.serverless_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.SERVERLESS_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "telemetry-manager")
              BRANCH="${{ inputs.telemetry_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.TELEMETRY_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "eventing-manager")
              BRANCH="${{ inputs.eventing_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.EVENTING_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "api-gateway")
              BRANCH="${{ inputs.api_gateway_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.API_GATEWAY_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "nats-manager")
              BRANCH="${{ inputs.nats_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.NATS_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "application-connector-manager")
              BRANCH="${{ inputs.application_connector_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.APPLICATION_CONNECTOR_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "keda-manager")
              BRANCH="${{ inputs.keda_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.KEDA_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "cloud-manager")
              BRANCH="${{ inputs.cloud_manager_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.CLOUD_MANAGER_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "docker-registry")
              BRANCH="${{ inputs.docker_registry_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.DOCKER_REGISTRY_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "busola")
              BRANCH="${{ inputs.busola_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.BUSOLA_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "cli")
              BRANCH="${{ inputs.cli_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.CLI_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            "registry-proxy")
              BRANCH="${{ inputs.registry_proxy_branch }}"
              if [ -z "$BRANCH" ]; then BRANCH="${{ vars.REGISTRY_PROXY_BRANCH }}"; fi
              if [ -z "$BRANCH" ]; then BRANCH="main"; fi
              ;;
            *)
              BRANCH="main"
              ;;
          esac
          
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "Using branch '$BRANCH' for repository '${{matrix.repository}}'"

      - name: '🗂️ Checkout ${{matrix.repository}} (branch: ${{steps.get-branch.outputs.branch}})'
        uses: actions/checkout@v4
        with:
          repository: kyma-project/${{matrix.repository}}
          ref: ${{steps.get-branch.outputs.branch}}
          path: ${{matrix.repository}}

      - name: 🚢 Copy for main repo
        run: |
          SOURCE_PATH="${{matrix.repository}}/docs/user/"
          TARGET_PATH="./docs/external-content/${{matrix.repository}}/docs/"
          SOURCE_PATH_ASSETS="${{matrix.repository}}/docs/assets/"
          TARGET_PATH_ASSETS="./docs/external-content/${{matrix.repository}}/docs/"
          if [ -d "$SOURCE_PATH" ]; then
            echo "📁 found in ${{matrix.repository}}, copy to $TARGET_PATH"
            mkdir -p "$TARGET_PATH"
            cp -rf "$SOURCE_PATH/" "$TARGET_PATH/"
            if [ -d "$SOURCE_PATH_ASSETS" ]; then
              echo "↳📁 found in ${{matrix.repository}}, copy to $TARGET_PATH_ASSETS"
              mkdir -p "$TARGET_PATH_ASSETS"
              cp -rf "$SOURCE_PATH_ASSETS/" "$TARGET_PATH_ASSETS/"
            else
              echo "↳🚫 no folder  docs/assets in ${{matrix.repository}}"
            fi
          else
            echo "🚫 No folder docs/users in ${{matrix.repository}}"
          fi
      
      - name: 📦 Upload copied docs
        uses: actions/upload-artifact@v4
        with:
          name: external-docs-${{matrix.repository}}
          path: ./docs/external-content/${{matrix.repository}}

  build-and-deploy:
    name: 🛠️ Build and Deploy VitePress
    runs-on: ubuntu-latest
    needs: copy-docs
    steps:
      - name: 🗂️ Checkout repository
        uses: actions/checkout@v4
        
      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-btp-manager
          path: docs/external-content/btp-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-istio
          path: docs/external-content/istio

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-serverless
          path: docs/external-content/serverless

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-telemetry-manager
          path: docs/external-content/telemetry-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-eventing-manager
          path: docs/external-content/eventing-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-api-gateway
          path: docs/external-content/api-gateway

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-nats-manager
          path: docs/external-content/nats-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-application-connector-manager
          path: docs/external-content/application-connector-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-keda-manager
          path: docs/external-content/keda-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-cloud-manager
          path: docs/external-content/cloud-manager

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-docker-registry
          path: docs/external-content/docker-registry

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-busola
          path: docs/external-content/busola

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-cli
          path: docs/external-content/cli

      - name: 📥 Download copied docs
        uses: actions/download-artifact@v4
        with:
          name: external-docs-registry-proxy
          path: docs/external-content/registry-proxy

      - name: 🪢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 💾 Install dependencies
        run: npm ci

      - name: 🛠️ Build VitePress site
        run: npm run docs:build

      - name: ⚙️ Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: 🚀 Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

      - name: 🔝 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
