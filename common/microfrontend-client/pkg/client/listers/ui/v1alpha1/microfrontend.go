// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyma-project/kyma/common/microfrontend-client/pkg/apis/ui/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MicroFrontendLister helps list MicroFrontends.
type MicroFrontendLister interface {
	// List lists all MicroFrontends in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MicroFrontend, err error)
	// MicroFrontends returns an object that can list and get MicroFrontends.
	MicroFrontends(namespace string) MicroFrontendNamespaceLister
	MicroFrontendListerExpansion
}

// microFrontendLister implements the MicroFrontendLister interface.
type microFrontendLister struct {
	indexer cache.Indexer
}

// NewMicroFrontendLister returns a new MicroFrontendLister.
func NewMicroFrontendLister(indexer cache.Indexer) MicroFrontendLister {
	return &microFrontendLister{indexer: indexer}
}

// List lists all MicroFrontends in the indexer.
func (s *microFrontendLister) List(selector labels.Selector) (ret []*v1alpha1.MicroFrontend, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MicroFrontend))
	})
	return ret, err
}

// MicroFrontends returns an object that can list and get MicroFrontends.
func (s *microFrontendLister) MicroFrontends(namespace string) MicroFrontendNamespaceLister {
	return microFrontendNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MicroFrontendNamespaceLister helps list and get MicroFrontends.
type MicroFrontendNamespaceLister interface {
	// List lists all MicroFrontends in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MicroFrontend, err error)
	// Get retrieves the MicroFrontend from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MicroFrontend, error)
	MicroFrontendNamespaceListerExpansion
}

// microFrontendNamespaceLister implements the MicroFrontendNamespaceLister
// interface.
type microFrontendNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MicroFrontends in the indexer for a given namespace.
func (s microFrontendNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MicroFrontend, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MicroFrontend))
	})
	return ret, err
}

// Get retrieves the MicroFrontend from the indexer for a given namespace and name.
func (s microFrontendNamespaceLister) Get(name string) (*v1alpha1.MicroFrontend, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("microfrontend"), name)
	}
	return obj.(*v1alpha1.MicroFrontend), nil
}
