#!/usr/bin/env groovy
def docs_image_suffix = "docs"
def kyma = "kyma"
def service_catalog = "service-catalog"
def service_brokers = "service-brokers"
def application_connector = "application-connector"
def event_bus = "event-bus"
def service_mesh = "service-mesh"
def serverless = "serverless"
def monitoring = "monitoring"
def tracing = "tracing"
def azure_mysql = "azure-mysql"
def azure_redis_cache = "azure-redis-cache"
def azure_sql = "azure-sql"
def azure_classes_docs_dir = "$service_brokers/azure-broker-service-classes"
def gcp_bigquery = "bigquery"
def gcp_cloud_bigtable = "cloud-bigtable"
def gcp_cloud_iam_service_account = "cloud-iam-service-account"
def gcp_cloud_pubsub = "cloud-pubsub"
def gcp_cloud_spanner = "cloud-spanner"
def gcp_cloud_sql_mysql = "cloud-sql-mysql"
def gcp_google_cloud_storage = "google-cloud-storage"
def gcp_broker_img_prefix = "gcp-"
def gcp_classes_docs_dir = "$service_brokers/gcp-broker-service-classes"
def api_gateway = "api-gateway"
def security = "security"
def logging = "logging"
def console = "console"
def label = "kyma-${UUID.randomUUID().toString()}"

def dockerPushRoot = "${env.DOCKER_REGISTRY}${params.PUSH_DIR}"
def dockerImageTag = params.APP_VERSION

echo """
********************************
Job started with the following parameters:
DOCKER_REGISTRY=${env.DOCKER_REGISTRY}
PUSH_DIR=${params.PUSH_DIR}
DOCKER_CREDENTIALS=${env.DOCKER_CREDENTIALS}
GIT_REVISION=${params.GIT_REVISION}
GIT_BRANCH=${params.GIT_BRANCH}
APP_VERSION=${params.APP_VERSION}
APP_FOLDER=${env.APP_FOLDER}
FULL_BUILD=${params.FULL_BUILD}
********************************
"""

podTemplate(label: label) {
    node(label) {
        try {
            timestamps {
                timeout(time:20, unit:"MINUTES") {
                    ansiColor('xterm') {
                        stage("setup") {
                            checkout scm

                            withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS, passwordVariable: 'pwd', usernameVariable: 'uname')]) {
                                sh "docker login -u $uname -p '$pwd' $env.DOCKER_REGISTRY"
                            }
                        }

                        stage("docs build image") {
                            dir("$docs_image_suffix/$kyma") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$kyma-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$service_catalog") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$service_catalog-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$service_brokers") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$service_brokers-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$application_connector") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$application_connector-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$event_bus") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$event_bus-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$service_mesh") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$service_mesh-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$serverless") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$serverless-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$monitoring") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$monitoring-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$tracing") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$tracing-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$azure_classes_docs_dir/$azure_mysql") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$azure_mysql-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$azure_classes_docs_dir/$azure_sql") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$azure_sql-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$azure_classes_docs_dir/$azure_redis_cache") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$azure_redis_cache-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_bigquery") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_bigquery-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_cloud_bigtable") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_bigtable-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_cloud_iam_service_account") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_iam_service_account-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_cloud_pubsub") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_pubsub-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_cloud_spanner") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_spanner-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_cloud_sql_mysql") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_sql_mysql-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$gcp_classes_docs_dir/$gcp_google_cloud_storage") {
                                sh "cat ../../../Dockerfile | docker build -f - . -t ${dockerPushRoot}$gcp_broker_img_prefix$gcp_google_cloud_storage-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }

                            dir("$docs_image_suffix/$api_gateway") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$api_gateway-$docs_image_suffix:latest --label version=${dockerImageTag} --label component=${docs_image_suffix}"
                            }
                            dir("$docs_image_suffix/$security") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$security-$docs_image_suffix:latest"
                            }
                            dir("$docs_image_suffix/$logging") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$logging-$docs_image_suffix:latest"
                            }
                            dir("$docs_image_suffix/$console") {
                                sh "cat ../Dockerfile | docker build -f - . -t ${dockerPushRoot}$console-$docs_image_suffix:latest"
                            }

                        }

                        stage("docs push image") {
                            sh "docker tag ${dockerPushRoot}$kyma-$docs_image_suffix:latest ${dockerPushRoot}$kyma-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$kyma-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$service_catalog-$docs_image_suffix:latest ${dockerPushRoot}$service_catalog-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$service_catalog-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$service_brokers-$docs_image_suffix:latest ${dockerPushRoot}$service_brokers-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$service_brokers-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$application_connector-$docs_image_suffix:latest ${dockerPushRoot}$application_connector-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$application_connector-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$event_bus-$docs_image_suffix:latest ${dockerPushRoot}$event_bus-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$event_bus-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$service_mesh-$docs_image_suffix:latest ${dockerPushRoot}$service_mesh-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$service_mesh-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$serverless-$docs_image_suffix:latest ${dockerPushRoot}$serverless-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$serverless-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$monitoring-$docs_image_suffix:latest ${dockerPushRoot}$monitoring-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$monitoring-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$tracing-$docs_image_suffix:latest ${dockerPushRoot}$tracing-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$tracing-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$azure_mysql-$docs_image_suffix:latest ${dockerPushRoot}$azure_mysql-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$azure_mysql-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$azure_sql-$docs_image_suffix:latest ${dockerPushRoot}$azure_sql-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$azure_sql-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$azure_redis_cache-$docs_image_suffix:latest ${dockerPushRoot}$azure_redis_cache-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$azure_redis_cache-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_bigquery-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_bigquery-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_bigquery-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_bigtable-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_bigtable-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_bigtable-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_iam_service_account-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_iam_service_account-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_iam_service_account-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_pubsub-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_pubsub-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_pubsub-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_spanner-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_spanner-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_spanner-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_sql_mysql-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_sql_mysql-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_cloud_sql_mysql-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$gcp_broker_img_prefix$gcp_google_cloud_storage-$docs_image_suffix:latest ${dockerPushRoot}$gcp_broker_img_prefix$gcp_google_cloud_storage-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$gcp_broker_img_prefix$gcp_google_cloud_storage-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$api_gateway-$docs_image_suffix:latest ${dockerPushRoot}$api_gateway-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$api_gateway-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$security-$docs_image_suffix:latest ${dockerPushRoot}$security-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$security-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$logging-$docs_image_suffix:latest ${dockerPushRoot}$logging-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$logging-$docs_image_suffix:$dockerImageTag"

                            sh "docker tag ${dockerPushRoot}$console-$docs_image_suffix:latest ${dockerPushRoot}$console-$docs_image_suffix:$dockerImageTag"
                            sh "docker push ${dockerPushRoot}$console-$docs_image_suffix:$dockerImageTag"

                            if (params.GIT_BRANCH == 'master') {
                                sh "docker push ${dockerPushRoot}$kyma-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$service_catalog-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$service_brokers-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$application_connector-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$event_bus-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$service_mesh-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$serverless-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$monitoring-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$tracing-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$azure_mysql-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$azure_sql-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$azure_redis_cache-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$api_gateway-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$security-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$logging-$docs_image_suffix:latest"
                                sh "docker push ${dockerPushRoot}$console-$docs_image_suffix:latest"
                            }
                        }
                    }
                }
            }
        } catch (ex) {
            echo "Got exception: ${ex}"
            currentBuild.result = "FAILURE"
            def body = "${currentBuild.currentResult} ${env.JOB_NAME}${env.BUILD_DISPLAY_NAME}: on branch: ${params.GIT_BRANCH}. See details: ${env.BUILD_URL}"
            emailext body: body, recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'CulpritsRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: "${currentBuild.currentResult}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
        }
    }
}
