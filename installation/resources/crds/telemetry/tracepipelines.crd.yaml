---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: tracepipelines.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: TracePipeline
    listKind: TracePipelineList
    plural: tracepipelines
    singular: tracepipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TracePipeline is the Schema for the tracepipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of TracePipeline
            properties:
              output:
                description: Defines a destination for shipping trace data. Only one
                  can be defined per pipeline.
                properties:
                  otlp:
                    description: Configures the underlying Otel Collector with an
                      [OTLP exporter](https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlpexporter/README.md).
                      If you switch `protocol`to `http`, an [OTLP HTTP exporter](https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/otlphttpexporter)
                      is used.
                    properties:
                      authentication:
                        description: Defines authentication options for the OTLP output
                        properties:
                          basic:
                            description: Activates `Basic` authentication for the
                              destination providing relevant Secrets.
                            properties:
                              password:
                                description: Contains the basic auth password or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              user:
                                description: Contains the basic auth username or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                            required:
                            - password
                            - user
                            type: object
                        type: object
                      endpoint:
                        description: Defines the host and port (<host>:<port>) of
                          an OTLP endpoint.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                      headers:
                        description: Defines custom headers to be added to outgoing
                          HTTP or GRPC requests.
                        items:
                          properties:
                            name:
                              description: Defines the header name.
                              type: string
                            value:
                              description: Value that can contain references to Secret
                                values.
                              type: string
                            valueFrom:
                              properties:
                                secretKeyRef:
                                  description: Refers to a key in a Secret. You must
                                    provide `name` and `namespace` of the Secret,
                                    as well as the name of the `key`.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      protocol:
                        default: grpc
                        description: Defines the OTLP protocol (http or grpc). Default
                          is GRPC.
                        enum:
                        - grpc
                        - http
                        minLength: 1
                        type: string
                      tls:
                        description: Defines TLS options for the OTLP output.
                        properties:
                          ca:
                            description: Defines an optional CA certificate for server
                              certificate verification when using TLS. The certificate
                              needs to be provided in PEM format.
                            properties:
                              value:
                                description: Value that can contain references to
                                  Secret values.
                                type: string
                              valueFrom:
                                properties:
                                  secretKeyRef:
                                    description: Refers to a key in a Secret. You
                                      must provide `name` and `namespace` of the Secret,
                                      as well as the name of the `key`.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          cert:
                            description: Defines a client certificate to use when
                              using TLS. The certificate needs to be provided in PEM
                              format.
                            properties:
                              value:
                                description: Value that can contain references to
                                  Secret values.
                                type: string
                              valueFrom:
                                properties:
                                  secretKeyRef:
                                    description: Refers to a key in a Secret. You
                                      must provide `name` and `namespace` of the Secret,
                                      as well as the name of the `key`.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          insecure:
                            description: Defines whether to send requests using plaintext
                              instead of TLS.
                            type: boolean
                          insecureSkipVerify:
                            description: Defines whether to skip server certificate
                              verification when using TLS.
                            type: boolean
                          key:
                            description: Defines the client key to use when using
                              TLS. The key needs to be provided in PEM format.
                            properties:
                              value:
                                description: Value that can contain references to
                                  Secret values.
                                type: string
                              valueFrom:
                                properties:
                                  secretKeyRef:
                                    description: Refers to a key in a Secret. You
                                      must provide `name` and `namespace` of the Secret,
                                      as well as the name of the `key`.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                        type: object
                    required:
                    - endpoint
                    type: object
                required:
                - otlp
                type: object
            required:
            - output
            type: object
          status:
            description: Shows the observed state of the TracePipeline
            properties:
              conditions:
                items:
                  description: An array of conditions describing the status of the
                    pipeline.
                  properties:
                    lastTransitionTime:
                      description: An array of conditions describing the status of
                        the pipeline.
                      format: date-time
                      type: string
                    reason:
                      description: An array of conditions describing the status of
                        the pipeline.
                      type: string
                    type:
                      description: 'The possible transition types are:<br>- `Running`:
                        The instance is ready and usable.<br>- `Pending`: The pipeline
                        is being activated.'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
