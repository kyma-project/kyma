apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: subscriptions.eventing.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: eventing-controller-webhook-service
          namespace: kyma-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: eventing.kyma-project.io
  names:
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    singular: subscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.cleanEventTypes
      name: Clean Event Types
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subscription is the Schema for the subscriptions API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubscriptionSpec defines the desired state of Subscription.
            properties:
              config:
                description: Defines additional configuration for the active backend
                properties:
                  maxInFlightMessages:
                    minimum: 1
                    type: integer
                type: object
              filter:
                description: Defines the which events will be sent to the sink.
                properties:
                  dialect:
                    type: string
                  filters:
                    items:
                      description: BEBFilter defines the BEB filter element as a combination
                        of two CE filter elements.
                      properties:
                        eventSource:
                          description: EventSource defines the source of CE filter
                          properties:
                            property:
                              description: Property defines the property of the filter
                              type: string
                            type:
                              description: Type defines the type of the filter
                              type: string
                            value:
                              description: Value defines the value of the filter
                              type: string
                          required:
                          - property
                          - value
                          type: object
                        eventType:
                          description: EventType defines the type of CE filter
                          properties:
                            property:
                              description: Property defines the property of the filter
                              type: string
                            type:
                              description: Type defines the type of the filter
                              type: string
                            value:
                              description: Value defines the value of the filter
                              type: string
                          required:
                          - property
                          - value
                          type: object
                      required:
                      - eventSource
                      - eventType
                      type: object
                    type: array
                required:
                - filters
                type: object
              id:
                description: Unique identifier of Subscription, read-only.
                type: string
              protocol:
                description: Defines the CE protocol specification implementation
                type: string
              protocolsettings:
                description: Defines the CE protocol settings specification implementation.
                properties:
                  contentMode:
                    description: 'Defines the content mode for eventing based on BEB.
                      Must be one of "BINARY", "STRUCTURED". Default:'
                    type: string
                  exemptHandshake:
                    description: Defines whether exempt handshake for eventing based
                      on BEB.
                    type: boolean
                  qos:
                    description: Defines quality of service for eventing based on
                      BEB.
                    type: string
                  webhookAuth:
                    description: Defines the Webhook called by an active subscription
                      in BEB.
                    properties:
                      clientId:
                        description: Defines clientID for OAuth2
                        type: string
                      clientSecret:
                        description: Defines client secret for OAuth2
                        type: string
                      grantType:
                        description: Defines grant type for OAuth2
                        type: string
                      scope:
                        description: Defines scope for OAuth2
                        items:
                          type: string
                        type: array
                      tokenUrl:
                        description: Defines token URL for OAuth2
                        type: string
                      type:
                        description: Defines type of authentication
                        type: string
                    required:
                    - clientId
                    - clientSecret
                    - grantType
                    - tokenUrl
                    type: object
                type: object
              sink:
                description: Kubernetes Service that should be used as a target for
                  the events that match the Subscription. Must exist in the same namespace
                  as the Subscription.
                type: string
            required:
            - filter
            - sink
            type: object
          status:
            description: SubscriptionStatus defines the observed state of Subscription.
            properties:
              apiRuleName:
                description: Defines the name of the APIRule which is used by the
                  Subscription.
                type: string
              cleanEventTypes:
                description: CleanEventTypes defines the filter's event types after
                  cleanup for use with the configured backend
                items:
                  type: string
                type: array
              conditions:
                description: Current state of the Subscription.
                items:
                  properties:
                    lastTransitionTime:
                      description: Defines when the condition status was changes last
                      format: date-time
                      type: string
                    message:
                      description: Provides more detail about the condition status
                        change
                      type: string
                    reason:
                      description: Defines why the condition status changed
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  type: object
                type: array
              config:
                description: Defines the configurations that have been applied to
                  the eventing backend when creating this Subscription.
                properties:
                  maxInFlightMessages:
                    minimum: 1
                    type: integer
                type: object
              emsSubscriptionStatus:
                description: Defines the status of Subscription in EventMesh.
                properties:
                  lastFailedDelivery:
                    description: Timestamp of the last failed delivery.
                    type: string
                  lastFailedDeliveryReason:
                    description: Reason of the last failed delivery.
                    type: string
                  lastSuccessfulDelivery:
                    description: Timestamp of the last successful delivery.
                    type: string
                  subscriptionStatus:
                    description: Status of Subscription as reported by EventMesh.
                    type: string
                  subscriptionStatusReason:
                    description: Reason for the current status.
                    type: string
                type: object
              emshash:
                description: Defines the checksum for the Subscription in EventMesh.
                format: int64
                type: integer
              ev2hash:
                description: Defines a checksum for the Subscription custom resource.
                format: int64
                type: integer
              externalSink:
                description: Defines the webhook URL which is used by EventMesh to
                  trigger subscribers.
                type: string
              failedActivation:
                description: Defines the reason if a Subscription had failed activation
                  in EventMesh.
                type: string
              ready:
                description: Overall readiness of the Subscription.
                type: boolean
            required:
            - cleanEventTypes
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Subscription is the Schema for the subscriptions API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Desired state of Subscription.
            properties:
              config:
                additionalProperties:
                  type: string
                description: Map of configuration options that will be applied on
                  the backend.
                type: object
              id:
                description: Unique identifier of Subscription, read-only.
                type: string
              sink:
                description: Kubernetes Service that should be used as a target for
                  the events that match the Subscription. Must exist in the same namespace
                  as the Subscription.
                type: string
              source:
                description: Defines the origin of the event.
                type: string
              typeMatching:
                description: 'Defines how types should be handled.<br /> - `standard`:
                  backend specific logic will be applied to the configured source
                  and types.<br /> - `exact`: no further processing will be applied
                  to the configured source and types.'
                type: string
              types:
                description: List of event types that will be used for subscribing
                  on the backend.
                items:
                  type: string
                type: array
            required:
            - sink
            - source
            - types
            type: object
          status:
            description: SubscriptionStatus defines the observed state of Subscription.
            properties:
              backend:
                description: Backend-specific status which are only applicable to
                  the active backend.
                properties:
                  apiRuleName:
                    description: Name of the APIRule which is used by the Subscription.
                    type: string
                  emsSubscriptionStatus:
                    description: Status of Subscription as reported by EventMesh.
                    properties:
                      lastFailedDelivery:
                        description: Timestamp of the last failed delivery.
                        type: string
                      lastFailedDeliveryReason:
                        description: Reason of the last failed delivery.
                        type: string
                      lastSuccessfulDelivery:
                        description: Timestamp of the last successful delivery.
                        type: string
                      status:
                        description: Status of the Subscription as reported by the
                          backend.
                        type: string
                      statusReason:
                        description: Reason for the current status.
                        type: string
                    type: object
                  emsTypes:
                    description: List of mappings from event type to EventMesh compatible
                      types. Only used with EventMesh as backend.
                    items:
                      properties:
                        eventMeshType:
                          description: Event type that is used on the EventMesh backend.
                          type: string
                        originalType:
                          description: Event type that was originally used to subscribe.
                          type: string
                      required:
                      - eventMeshType
                      - originalType
                      type: object
                    type: array
                  emshash:
                    description: Hash that is used on EventMesh to identify this Subscription.
                    format: int64
                    type: integer
                  ev2hash:
                    description: Checksum for the Subscription custom resource.
                    format: int64
                    type: integer
                  externalSink:
                    description: Webhook URL used by EventMesh to trigger subscribers.
                    type: string
                  failedActivation:
                    description: Reason if a Subscription had failed activation in
                      EventMesh.
                    type: string
                  types:
                    description: List of event type to consumer name mappings for
                      the Nats backend.
                    items:
                      properties:
                        consumerName:
                          description: Name of the Jetstream consumer created for
                            the Event type.
                          type: string
                        originalType:
                          description: Event type that was originally used to subscribe.
                          type: string
                      required:
                      - originalType
                      type: object
                    type: array
                type: object
              conditions:
                description: Current state of the Subscription.
                items:
                  properties:
                    lastTransitionTime:
                      description: Defines when the condition status was changes last
                      format: date-time
                      type: string
                    message:
                      description: Provides more detail about the condition status
                        change
                      type: string
                    reason:
                      description: Defines why the condition status changed
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  type: object
                type: array
              ready:
                description: Overall readiness of the Subscription.
                type: boolean
              types:
                description: List of event types after cleanup for use with the configured
                  backend.
                items:
                  properties:
                    cleanType:
                      description: Event type after it was cleaned up from backend
                        compatible characters.
                      type: string
                    originalType:
                      description: Event type as specified in the Subscription spec.
                      type: string
                  required:
                  - cleanType
                  - originalType
                  type: object
                type: array
            required:
            - ready
            - types
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
