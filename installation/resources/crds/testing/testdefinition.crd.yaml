apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    controller-tools.k8s.io: "1.0"
  name: testdefinitions.testing.kyma-project.io
spec:
  group: testing.kyma-project.io
  names:
    kind: TestDefinition
    plural: testdefinitions
    shortNames:
    - td
  scope: Namespaced
  versions:
  - name: v1alpha1
    storage: true
    served: true
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              disableConcurrency:
                description: If test is working on data that can be modified by another
                  test, I would like to run it in separation. Default value is false
                type: boolean
              skip:
                description: If there are some problems with given test, we add possibility
                  to don't execute them. On Testsuite level such test should be marked
                  as a skipped. Default value is false
                type: boolean
              description:
                description: Describe the test case in detail
                  (e.g. scope, test scenario, edge cases, known limitations etc.).
                type: string
              template:
                type: object
            required:
            - template
            type: object
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
