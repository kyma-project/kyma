apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
    name: installations.installer.kyma.cx
spec:
  group: installer.kyma.cx
  version: v1alpha1
  scope: Namespaced
  names:
    kind: Installation
    singular: installation
    plural: installations
    shortNames: ['installation']
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
    name: releases.release.kyma.cx
spec:
  group: release.kyma.cx
  version: v1alpha1
  scope: Namespaced
  names:
    kind: Release
    singular: release
    plural: releases
    shortNames: ['release']
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kyma-installer
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kyma-installer
subjects:
- kind: ServiceAccount
  name: kyma-installer
  namespace: kyma-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kyma-installer
spec:
  template:
    metadata:
      labels:
        name: kyma-installer
    spec:
      serviceAccountName: kyma-installer
      initContainers:
      - name: init-tiller
        image: eu.gcr.io/kyma-project/alpine-net:0.2.74
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -zv kube-dns.kube-system.svc.cluster.local 53; do echo waiting for k8s readiness; sleep 2; done;']
      containers:
      - name: tiller
        image: gcr.io/kubernetes-helm/tiller:v2.8.2
        imagePullPolicy: IfNotPresent
        env:
        - name: TILLER_NAMESPACE
          value: kyma-installer
        ports:
        - containerPort: 44134
          name: tiller
        livenessProbe:
          httpGet:
            path: /liveness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readiness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
      - name: kyma-installer
        image: eu.gcr.io/kyma-project/installer:0.3.281
        imagePullPolicy: IfNotPresent
        args: ["-helmhost=localhost:44134"]
        env:
          - name: AZURE_BROKER_SUBSCRIPTION_ID
            valueFrom:
              secretKeyRef:
                name: azure-broker
                key: azure_broker_subscription_id
                optional: true
          - name: AZURE_BROKER_TENANT_ID
            valueFrom:
              secretKeyRef:
                name: azure-broker
                key: azure_broker_tenant_id
                optional: true
          - name: AZURE_BROKER_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: azure-broker
                key: azure_broker_client_id
                optional: true
          - name: AZURE_BROKER_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-broker
                key: azure_broker_client_secret
                optional: true
          - name: TLS_CERT
            valueFrom:
              configMapKeyRef:
                name: cluster-certificate
                key: tls_cert
          - name: TLS_KEY
            valueFrom:
              configMapKeyRef:
                name: cluster-certificate
                key: tls_key
          - name: REMOTE_ENV_CA
            valueFrom:
              secretKeyRef:
                name: remote-env-certificate
                key: remote_env_ca
                optional: true
          - name: REMOTE_ENV_CA_KEY
            valueFrom:
              secretKeyRef:
                name: remote-env-certificate
                key: remote_env_ca_key
                optional: true
          - name: IS_LOCAL_INSTALLATION
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: is_local_installation
          - name: DOMAIN
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: domain
          - name: ETCD_BACKUP_ABS_CONTAINER_NAME
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: etcd_backup_abs_container_name
                optional: true
          - name: VICTOR_OPS_API_KEY_VALUE
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: victor_ops_api_key
                optional: true
          - name: VICTOR_OPS_ROUTING_KEY_VALUE
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: victor_ops_routing_key
                optional: true
          - name: SLACK_CHANNEL_VALUE
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: slack_channel
                optional: true
          - name: SLACK_API_URL_VALUE
            valueFrom:
              configMapKeyRef:
                name: installation-config
                key: slack_api_url
                optional: true
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kyma-installer
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]